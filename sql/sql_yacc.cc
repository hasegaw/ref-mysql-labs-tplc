
/* A Bison parser, made by GNU Bison 2.4.1.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C
   
      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.4.1"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs
#define yylloc          MYSQLlloc

/* Copy the first part of user declarations.  */

/* Line 189 of yacc.c  */
#line 24 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"

/* thd is passed as an argument to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL  YYTHD->variables.character_set_client

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "auth_common.h"                      /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype */
#include "rpl_slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_servers.h"
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"
#include "rpl_slave.h"                       // Sql_cmd_change_repl_filter

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror((char*) (A));                   \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}


/**
  Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.

  @param thd            YYTHD
  @param location       YYSTYPE object: error position
  @param s              error message (usually ER(ER_SYNTAX_ERROR))
*/

void parse_error_at(THD *thd, const YYLTYPE &location, const char *s)
{
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  /* Push an error into the error stack */
  ErrConvString err(location.raw_start, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->get_lineno(location.raw_start));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(const char *s)
{
  THD *thd= current_thd;

  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (pctx && tmp->var == Sys_autocommit_ptr)
    sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

#ifdef HAVE_REPLICATION
  if (lex->uses_stored_routines() &&
      ((tmp->var == Sys_gtid_next_ptr
#ifdef HAVE_GTID_NEXT_LIST
       || tmp->var == Sys_gtid_next_list_ptr
#endif
       ) ||
       Sys_gtid_purged_ptr == tmp->var))
  {
    my_error(ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION, MYF(0),
             tmp->var->name.str);
    return TRUE;
  }
#endif

  if (val && val->type() == Item::FIELD_ITEM &&
      ((Item_field*)val)->table_name)
  {
    my_error(ER_WRONG_TYPE_FOR_VAR, MYF(0), tmp->var->name.str);
    return TRUE;
  }

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd                thread handler
  @param trigger_field_name the NEW-row field name
  @param expr_item          the value expression being assigned
  @param expr_query         the value expression query

  @return error status (true if error, false otherwise).
*/

static bool set_trigger_new_row(THD *thd,
                                LEX_STRING trigger_field_name,
                                Item *expr_item,
                                LEX_STRING expr_query)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  DBUG_ASSERT(expr_item);
  DBUG_ASSERT(sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
               sp->m_trg_chistics.event == TRG_EVENT_UPDATE));

  Item_trigger_field *trg_fld=
    new (thd->mem_root) Item_trigger_field(lex->current_context(),
                                           TRG_NEW_ROW,
                                           trigger_field_name.str,
                                           UPDATE_ACL, false);

  if (!trg_fld)
    return true;

  sp_instr_set_trigger_field *i=
    new (thd->mem_root)
      sp_instr_set_trigger_field(sp->instructions(),
                                 lex,
                                 trigger_field_name,
                                 trg_fld, expr_item,
                                 expr_query);

  if (!i)
    return true;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  sp->m_trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sp->add_instr(thd, i);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param thd              The current thread.
  @param name             The SP variable name.
  @param spv              The SP variable (optional).
  @param query_start_ptr  Start of the SQL-statement query string (optional).
  @param start_in_q       Start position of the SP variable name in the query.
  @param end_in_q         End position of the SP variable name in the query.

  @remark If spv is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
static Item_splocal* create_item_for_sp_var(THD *thd,
                                            LEX_STRING name,
                                            sp_variable *spv,
                                            const char *query_start_ptr,
                                            const char *start_in_q,
                                            const char *end_in_q)
{
  LEX *lex= thd->lex;
  uint spv_pos_in_query= 0;
  uint spv_len_in_query= 0;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* If necessary, look for the variable. */
  if (pctx && !spv)
    spv= pctx->find_variable(name, false);

  if (!spv)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(pctx && spv);

  if (query_start_ptr)
  {
    /* Position and length of the SP variable name in the query. */
    spv_pos_in_query= start_in_q - query_start_ptr;
    spv_len_in_query= end_in_q - start_in_q;
  }

  Item_splocal *item=
    new (thd->mem_root) Item_splocal(
      name, spv->offset, spv->type, spv_pos_in_query, spv_len_in_query);

#ifndef DBUG_OFF
  if (item)
    item->m_sp= lex->sphead;
#endif

  return item;
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select();
  DBUG_ASSERT(sel->braces);
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select()->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Make a new string allocated on THD's mem-root.

  @param thd        thread handler.
  @param start_ptr  start of the new string.
  @param end_ptr    end of the new string.

  @return LEX_STRING object, containing a pointer to a newly
  constructed/allocated string, and its length. The pointer is NULL
  in case of out-of-memory error.
*/
static LEX_STRING make_string(THD *thd,
                              const char *start_ptr,
                              const char *end_ptr)
{
  LEX_STRING s;

  s.length= end_ptr - start_ptr;
  s.str= (char *) thd->alloc(s.length + 1);

  if (s.str)
    strmake(s.str, start_ptr, s.length);

  return s;
}

static void sp_create_assignment_lex(THD *thd, const char *option_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return;
  }

  LEX *old_lex= lex;
  sp->reset_lex(thd);
  lex= thd->lex;

  /* Set new LEX as if we at start of set rule. */
  lex->sql_command= SQLCOM_SET_OPTION;
  lex->var_list.empty();
  lex->one_shot_set= 0;
  lex->autocommit= 0;

  /*
    It's a SET statement within SP. It will be either translated
    into one or more sp_instr_stmt instructions, or it will be
    sp_instr_set / sp_instr_set_trigger_field instructions.
    In any case, position of SP-variable can not be determined
    reliably. So, we set the start pointer of the current statement
    to NULL.
  */
  sp->m_parser_data.set_current_stmt_start_ptr(NULL);
  sp->m_parser_data.set_option_start_ptr(option_ptr);

  /* Inherit from outer lex. */
  lex->option_type= old_lex->option_type;
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param expr_end_ptr  Option-value-expression end pointer

  @return false if success, true otherwise.
*/

static bool sp_create_assignment_instr(THD *thd, const char *expr_end_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return false;
  }

  if (!lex->var_list.is_empty())
  {
    /* Extract expression string. */

    const char *expr_start_ptr= sp->m_parser_data.get_option_start_ptr();

    LEX_STRING expr;
    expr.str= (char *) expr_start_ptr;
    expr.length= expr_end_ptr - expr_start_ptr;

    /* Construct SET-statement query. */

    LEX_STRING set_stmt_query;

    set_stmt_query.length= expr.length + 3;
    set_stmt_query.str= (char *) thd->alloc(set_stmt_query.length + 1);

    if (!set_stmt_query.str)
      return true;

    strmake(strmake(set_stmt_query.str, "SET", 3),
            expr.str, expr.length);

    /*
      We have assignment to user or system variable or option setting, so we
      should construct sp_instr_stmt for it.
    */

    sp_instr_stmt *i=
      new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex, set_stmt_query);

    if (!i || sp->add_instr(thd, i))
      return true;
  }

  /* Remember option_type of the currently parsed LEX. */
  enum_var_type inner_option_type= lex->option_type;

  if (sp->restore_lex(thd))
    return true;

  /* Copy option_type to outer lex in case it has changed. */
  thd->lex->option_type= inner_option_type;

  return false;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}




/* Line 189 of yacc.c  */
#line 945 "/export/home/pb2/build/sb_0-11798678-1395226371.33/dist_GPL/sql/sql_yacc.cc"

/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYSE_SYM = 269,
     ANALYZE_SYM = 270,
     AND_AND_SYM = 271,
     AND_SYM = 272,
     ANY_SYM = 273,
     AS = 274,
     ASC = 275,
     ASCII_SYM = 276,
     ASENSITIVE_SYM = 277,
     AT_SYM = 278,
     AUTOEXTEND_SIZE_SYM = 279,
     AUTO_INC = 280,
     AVG_ROW_LENGTH = 281,
     AVG_SYM = 282,
     BACKUP_SYM = 283,
     BEFORE_SYM = 284,
     BEGIN_SYM = 285,
     BETWEEN_SYM = 286,
     BIGINT = 287,
     BINARY = 288,
     BINLOG_SYM = 289,
     BIN_NUM = 290,
     BIT_AND = 291,
     BIT_OR = 292,
     BIT_SYM = 293,
     BIT_XOR = 294,
     BLOB_SYM = 295,
     BLOCK_SYM = 296,
     BOOLEAN_SYM = 297,
     BOOL_SYM = 298,
     BOTH = 299,
     BTREE_SYM = 300,
     BY = 301,
     BYTE_SYM = 302,
     CACHE_SYM = 303,
     CALL_SYM = 304,
     CASCADE = 305,
     CASCADED = 306,
     CASE_SYM = 307,
     CAST_SYM = 308,
     CATALOG_NAME_SYM = 309,
     CHAIN_SYM = 310,
     CHANGE = 311,
     CHANGED = 312,
     CHARSET = 313,
     CHAR_SYM = 314,
     CHECKSUM_SYM = 315,
     CHECK_SYM = 316,
     CIPHER_SYM = 317,
     CLASS_ORIGIN_SYM = 318,
     CLIENT_SYM = 319,
     CLOSE_SYM = 320,
     COALESCE = 321,
     CODE_SYM = 322,
     COLLATE_SYM = 323,
     COLLATION_SYM = 324,
     COLUMNS = 325,
     COLUMN_SYM = 326,
     COLUMN_FORMAT_SYM = 327,
     COLUMN_NAME_SYM = 328,
     COMMENT_SYM = 329,
     COMMITTED_SYM = 330,
     COMMIT_SYM = 331,
     COMPACT_SYM = 332,
     COMPLETION_SYM = 333,
     COMPRESSED_SYM = 334,
     CONCURRENT = 335,
     CONDITION_SYM = 336,
     CONNECTION_SYM = 337,
     CONSISTENT_SYM = 338,
     CONSTRAINT = 339,
     CONSTRAINT_CATALOG_SYM = 340,
     CONSTRAINT_NAME_SYM = 341,
     CONSTRAINT_SCHEMA_SYM = 342,
     CONTAINS_SYM = 343,
     CONTEXT_SYM = 344,
     CONTINUE_SYM = 345,
     CONVERT_SYM = 346,
     COUNT_SYM = 347,
     CPU_SYM = 348,
     CREATE = 349,
     CROSS = 350,
     CUBE_SYM = 351,
     CURDATE = 352,
     CURRENT_SYM = 353,
     CURRENT_USER = 354,
     CURSOR_SYM = 355,
     CURSOR_NAME_SYM = 356,
     CURTIME = 357,
     DATABASE = 358,
     DATABASES = 359,
     DATAFILE_SYM = 360,
     DATA_SYM = 361,
     DATETIME = 362,
     DATE_ADD_INTERVAL = 363,
     DATE_SUB_INTERVAL = 364,
     DATE_SYM = 365,
     DAY_HOUR_SYM = 366,
     DAY_MICROSECOND_SYM = 367,
     DAY_MINUTE_SYM = 368,
     DAY_SECOND_SYM = 369,
     DAY_SYM = 370,
     DEALLOCATE_SYM = 371,
     DECIMAL_NUM = 372,
     DECIMAL_SYM = 373,
     DECLARE_SYM = 374,
     DEFAULT = 375,
     DEFAULT_AUTH_SYM = 376,
     DEFINER_SYM = 377,
     DELAYED_SYM = 378,
     DELAY_KEY_WRITE_SYM = 379,
     DELETE_SYM = 380,
     DESC = 381,
     DESCRIBE = 382,
     DES_KEY_FILE = 383,
     DETERMINISTIC_SYM = 384,
     DIAGNOSTICS_SYM = 385,
     DIRECTORY_SYM = 386,
     DISABLE_SYM = 387,
     DISCARD = 388,
     DISK_SYM = 389,
     DISTINCT = 390,
     DIV_SYM = 391,
     DOUBLE_SYM = 392,
     DO_SYM = 393,
     DROP = 394,
     DUAL_SYM = 395,
     DUMPFILE = 396,
     DUPLICATE_SYM = 397,
     DYNAMIC_SYM = 398,
     EACH_SYM = 399,
     ELSE = 400,
     ELSEIF_SYM = 401,
     ENABLE_SYM = 402,
     ENCLOSED = 403,
     END = 404,
     ENDS_SYM = 405,
     END_OF_INPUT = 406,
     ENGINES_SYM = 407,
     ENGINE_SYM = 408,
     ENUM = 409,
     EQ = 410,
     EQUAL_SYM = 411,
     ERROR_SYM = 412,
     ERRORS = 413,
     ESCAPED = 414,
     ESCAPE_SYM = 415,
     EVENTS_SYM = 416,
     EVENT_SYM = 417,
     EVERY_SYM = 418,
     EXCHANGE_SYM = 419,
     EXECUTE_SYM = 420,
     EXISTS = 421,
     EXIT_SYM = 422,
     EXPANSION_SYM = 423,
     EXPIRE_SYM = 424,
     EXPORT_SYM = 425,
     EXTENDED_SYM = 426,
     EXTENT_SIZE_SYM = 427,
     EXTRACT_SYM = 428,
     FALSE_SYM = 429,
     FAST_SYM = 430,
     FAULTS_SYM = 431,
     FETCH_SYM = 432,
     FILE_SYM = 433,
     FILTER_SYM = 434,
     FIRST_SYM = 435,
     FIXED_SYM = 436,
     FLOAT_NUM = 437,
     FLOAT_SYM = 438,
     FLUSH_SYM = 439,
     FOLLOWS_SYM = 440,
     FORCE_SYM = 441,
     FOREIGN = 442,
     FOR_SYM = 443,
     FORMAT_SYM = 444,
     FOUND_SYM = 445,
     FROM = 446,
     FULL = 447,
     FULLTEXT_SYM = 448,
     FUNCTION_SYM = 449,
     GE = 450,
     GENERAL = 451,
     GEOMETRYCOLLECTION = 452,
     GEOMETRY_SYM = 453,
     GET_FORMAT = 454,
     GET_SYM = 455,
     GLOBAL_SYM = 456,
     GRANT = 457,
     GRANTS = 458,
     GROUP_SYM = 459,
     GROUP_CONCAT_SYM = 460,
     GT_SYM = 461,
     HANDLER_SYM = 462,
     HASH_SYM = 463,
     HAVING = 464,
     HELP_SYM = 465,
     HEX_NUM = 466,
     HIGH_PRIORITY = 467,
     HOST_SYM = 468,
     HOSTS_SYM = 469,
     HOUR_MICROSECOND_SYM = 470,
     HOUR_MINUTE_SYM = 471,
     HOUR_SECOND_SYM = 472,
     HOUR_SYM = 473,
     IDENT = 474,
     IDENTIFIED_SYM = 475,
     IDENT_QUOTED = 476,
     IF = 477,
     IGNORE_SYM = 478,
     IGNORE_SERVER_IDS_SYM = 479,
     IMPORT = 480,
     INDEXES = 481,
     INDEX_SYM = 482,
     INFILE = 483,
     INITIAL_SIZE_SYM = 484,
     INNER_SYM = 485,
     INOUT_SYM = 486,
     INSENSITIVE_SYM = 487,
     INSERT = 488,
     INSERT_METHOD = 489,
     INSTALL_SYM = 490,
     INTERVAL_SYM = 491,
     INTO = 492,
     INT_SYM = 493,
     INVOKER_SYM = 494,
     IN_SYM = 495,
     IO_AFTER_GTIDS = 496,
     IO_BEFORE_GTIDS = 497,
     IO_SYM = 498,
     IPC_SYM = 499,
     IS = 500,
     ISOLATION = 501,
     ISSUER_SYM = 502,
     ITERATE_SYM = 503,
     JOIN_SYM = 504,
     KEYS = 505,
     KEY_BLOCK_SIZE = 506,
     KEY_SYM = 507,
     KILL_SYM = 508,
     LANGUAGE_SYM = 509,
     LAST_SYM = 510,
     LE = 511,
     LEADING = 512,
     LEAVES = 513,
     LEAVE_SYM = 514,
     LEFT = 515,
     LESS_SYM = 516,
     LEVEL_SYM = 517,
     LEX_HOSTNAME = 518,
     LIKE = 519,
     LIMIT = 520,
     LINEAR_SYM = 521,
     LINES = 522,
     LINESTRING = 523,
     LIST_SYM = 524,
     LOAD = 525,
     LOCAL_SYM = 526,
     LOCATOR_SYM = 527,
     LOCKS_SYM = 528,
     LOCK_SYM = 529,
     LOGFILE_SYM = 530,
     LOGS_SYM = 531,
     LONGBLOB = 532,
     LONGTEXT = 533,
     LONG_NUM = 534,
     LONG_SYM = 535,
     LOOP_SYM = 536,
     LOW_PRIORITY = 537,
     LT = 538,
     MASTER_AUTO_POSITION_SYM = 539,
     MASTER_BIND_SYM = 540,
     MASTER_CONNECT_RETRY_SYM = 541,
     MASTER_DELAY_SYM = 542,
     MASTER_HOST_SYM = 543,
     MASTER_LOG_FILE_SYM = 544,
     MASTER_LOG_POS_SYM = 545,
     MASTER_PASSWORD_SYM = 546,
     MASTER_PORT_SYM = 547,
     MASTER_RETRY_COUNT_SYM = 548,
     MASTER_SERVER_ID_SYM = 549,
     MASTER_SSL_CAPATH_SYM = 550,
     MASTER_SSL_CA_SYM = 551,
     MASTER_SSL_CERT_SYM = 552,
     MASTER_SSL_CIPHER_SYM = 553,
     MASTER_SSL_CRL_SYM = 554,
     MASTER_SSL_CRLPATH_SYM = 555,
     MASTER_SSL_KEY_SYM = 556,
     MASTER_SSL_SYM = 557,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 558,
     MASTER_SYM = 559,
     MASTER_USER_SYM = 560,
     MASTER_HEARTBEAT_PERIOD_SYM = 561,
     MATCH = 562,
     MAX_CONNECTIONS_PER_HOUR = 563,
     MAX_QUERIES_PER_HOUR = 564,
     MAX_STATEMENT_TIME_SYM = 565,
     MAX_ROWS = 566,
     MAX_SIZE_SYM = 567,
     MAX_SYM = 568,
     MAX_UPDATES_PER_HOUR = 569,
     MAX_USER_CONNECTIONS_SYM = 570,
     MAX_VALUE_SYM = 571,
     MEDIUMBLOB = 572,
     MEDIUMINT = 573,
     MEDIUMTEXT = 574,
     MEDIUM_SYM = 575,
     MEMORY_SYM = 576,
     MERGE_SYM = 577,
     MESSAGE_TEXT_SYM = 578,
     MICROSECOND_SYM = 579,
     MIGRATE_SYM = 580,
     MINUTE_MICROSECOND_SYM = 581,
     MINUTE_SECOND_SYM = 582,
     MINUTE_SYM = 583,
     MIN_ROWS = 584,
     MIN_SYM = 585,
     MODE_SYM = 586,
     MODIFIES_SYM = 587,
     MODIFY_SYM = 588,
     MOD_SYM = 589,
     MONTH_SYM = 590,
     MULTILINESTRING = 591,
     MULTIPOINT = 592,
     MULTIPOLYGON = 593,
     MUTEX_SYM = 594,
     MYSQL_ERRNO_SYM = 595,
     NAMES_SYM = 596,
     NAME_SYM = 597,
     NATIONAL_SYM = 598,
     NATURAL = 599,
     NCHAR_STRING = 600,
     NCHAR_SYM = 601,
     NDBCLUSTER_SYM = 602,
     NE = 603,
     NEG = 604,
     NEVER_SYM = 605,
     NEW_SYM = 606,
     NEXT_SYM = 607,
     NODEGROUP_SYM = 608,
     NONE_SYM = 609,
     NOT2_SYM = 610,
     NOT_SYM = 611,
     NOW_SYM = 612,
     NO_SYM = 613,
     NO_WAIT_SYM = 614,
     NO_WRITE_TO_BINLOG = 615,
     NULL_SYM = 616,
     NUM = 617,
     NUMBER_SYM = 618,
     NUMERIC_SYM = 619,
     NVARCHAR_SYM = 620,
     OFFSET_SYM = 621,
     OLD_PASSWORD = 622,
     ON = 623,
     ONE_SYM = 624,
     ONLY_SYM = 625,
     OPEN_SYM = 626,
     OPTIMIZE = 627,
     OPTIONS_SYM = 628,
     OPTION = 629,
     OPTIONALLY = 630,
     OR2_SYM = 631,
     ORDER_SYM = 632,
     OR_OR_SYM = 633,
     OR_SYM = 634,
     OUTER = 635,
     OUTFILE = 636,
     OUT_SYM = 637,
     OWNER_SYM = 638,
     PACK_KEYS_SYM = 639,
     PAGE_SYM = 640,
     PARAM_MARKER = 641,
     PARSER_SYM = 642,
     PARTIAL = 643,
     PARTITION_SYM = 644,
     PARTITIONS_SYM = 645,
     PARTITIONING_SYM = 646,
     PASSWORD = 647,
     PHASE_SYM = 648,
     PLUGIN_DIR_SYM = 649,
     PLUGIN_SYM = 650,
     PLUGINS_SYM = 651,
     POINT_SYM = 652,
     POLYGON = 653,
     PORT_SYM = 654,
     POSITION_SYM = 655,
     PRECEDES_SYM = 656,
     PRECISION = 657,
     PREPARE_SYM = 658,
     PRESERVE_SYM = 659,
     PREV_SYM = 660,
     PRIMARY_SYM = 661,
     PRIVILEGES = 662,
     PROCEDURE_SYM = 663,
     PROCESS = 664,
     PROCESSLIST_SYM = 665,
     PROFILE_SYM = 666,
     PROFILES_SYM = 667,
     PROXY_SYM = 668,
     PURGE = 669,
     QUARTER_SYM = 670,
     QUERY_SYM = 671,
     QUICK = 672,
     RANGE_SYM = 673,
     READS_SYM = 674,
     READ_ONLY_SYM = 675,
     READ_SYM = 676,
     READ_WRITE_SYM = 677,
     REAL = 678,
     REBUILD_SYM = 679,
     RECOVER_SYM = 680,
     REDOFILE_SYM = 681,
     REDO_BUFFER_SIZE_SYM = 682,
     REDUNDANT_SYM = 683,
     REFERENCES = 684,
     REGEXP = 685,
     RELAY = 686,
     RELAYLOG_SYM = 687,
     RELAY_LOG_FILE_SYM = 688,
     RELAY_LOG_POS_SYM = 689,
     RELAY_THREAD = 690,
     RELEASE_SYM = 691,
     RELOAD = 692,
     REMOVE_SYM = 693,
     RENAME = 694,
     REORGANIZE_SYM = 695,
     REPAIR = 696,
     REPEATABLE_SYM = 697,
     REPEAT_SYM = 698,
     REPLACE = 699,
     REPLICATION = 700,
     REPLICATE_DO_DB = 701,
     REPLICATE_IGNORE_DB = 702,
     REPLICATE_DO_TABLE = 703,
     REPLICATE_IGNORE_TABLE = 704,
     REPLICATE_WILD_DO_TABLE = 705,
     REPLICATE_WILD_IGNORE_TABLE = 706,
     REPLICATE_REWRITE_DB = 707,
     REQUIRE_SYM = 708,
     RESET_SYM = 709,
     RESIGNAL_SYM = 710,
     RESOURCES = 711,
     RESTORE_SYM = 712,
     RESTRICT = 713,
     RESUME_SYM = 714,
     RETURNED_SQLSTATE_SYM = 715,
     RETURNS_SYM = 716,
     RETURN_SYM = 717,
     REVERSE_SYM = 718,
     REVOKE = 719,
     RIGHT = 720,
     ROLLBACK_SYM = 721,
     ROLLUP_SYM = 722,
     ROUTINE_SYM = 723,
     ROWS_SYM = 724,
     ROW_FORMAT_SYM = 725,
     ROW_SYM = 726,
     ROW_COUNT_SYM = 727,
     RTREE_SYM = 728,
     SAVEPOINT_SYM = 729,
     SCHEDULE_SYM = 730,
     SCHEMA_NAME_SYM = 731,
     SECOND_MICROSECOND_SYM = 732,
     SECOND_SYM = 733,
     SECURITY_SYM = 734,
     SELECT_SYM = 735,
     SENSITIVE_SYM = 736,
     SEPARATOR_SYM = 737,
     SERIALIZABLE_SYM = 738,
     SERIAL_SYM = 739,
     SESSION_SYM = 740,
     SERVER_SYM = 741,
     SERVER_OPTIONS = 742,
     SET = 743,
     SET_VAR = 744,
     SHARE_SYM = 745,
     SHIFT_LEFT = 746,
     SHIFT_RIGHT = 747,
     SHOW = 748,
     SHUTDOWN = 749,
     SIGNAL_SYM = 750,
     SIGNED_SYM = 751,
     SIMPLE_SYM = 752,
     SLAVE = 753,
     SLOW = 754,
     SMALLINT = 755,
     SNAPSHOT_SYM = 756,
     SOCKET_SYM = 757,
     SONAME_SYM = 758,
     SOUNDS_SYM = 759,
     SOURCE_SYM = 760,
     SPATIAL_SYM = 761,
     SPECIFIC_SYM = 762,
     SQLEXCEPTION_SYM = 763,
     SQLSTATE_SYM = 764,
     SQLWARNING_SYM = 765,
     SQL_AFTER_GTIDS = 766,
     SQL_AFTER_MTS_GAPS = 767,
     SQL_BEFORE_GTIDS = 768,
     SQL_BIG_RESULT = 769,
     SQL_BUFFER_RESULT = 770,
     SQL_CACHE_SYM = 771,
     SQL_CALC_FOUND_ROWS = 772,
     SQL_NO_CACHE_SYM = 773,
     SQL_SMALL_RESULT = 774,
     SQL_SYM = 775,
     SQL_THREAD = 776,
     SSL_SYM = 777,
     STACKED_SYM = 778,
     STARTING = 779,
     STARTS_SYM = 780,
     START_SYM = 781,
     STATS_AUTO_RECALC_SYM = 782,
     STATS_PERSISTENT_SYM = 783,
     STATS_SAMPLE_PAGES_SYM = 784,
     STATUS_SYM = 785,
     NONBLOCKING_SYM = 786,
     STDDEV_SAMP_SYM = 787,
     STD_SYM = 788,
     STOP_SYM = 789,
     STORAGE_SYM = 790,
     STRAIGHT_JOIN = 791,
     STRING_SYM = 792,
     SUBCLASS_ORIGIN_SYM = 793,
     SUBDATE_SYM = 794,
     SUBJECT_SYM = 795,
     SUBPARTITIONS_SYM = 796,
     SUBPARTITION_SYM = 797,
     SUBSTRING = 798,
     SUM_SYM = 799,
     SUPER_SYM = 800,
     SUSPEND_SYM = 801,
     SWAPS_SYM = 802,
     SWITCHES_SYM = 803,
     SYSDATE = 804,
     TABLES = 805,
     TABLESPACE = 806,
     TABLE_REF_PRIORITY = 807,
     TABLE_SYM = 808,
     TABLE_CHECKSUM_SYM = 809,
     TABLE_NAME_SYM = 810,
     TEMPORARY = 811,
     TEMPTABLE_SYM = 812,
     TERMINATED = 813,
     TEXT_STRING = 814,
     TEXT_SYM = 815,
     THAN_SYM = 816,
     THEN_SYM = 817,
     TIMESTAMP = 818,
     TIMESTAMP_ADD = 819,
     TIMESTAMP_DIFF = 820,
     TIME_SYM = 821,
     TINYBLOB = 822,
     TINYINT = 823,
     TINYTEXT = 824,
     TO_SYM = 825,
     TRAILING = 826,
     TRANSACTION_SYM = 827,
     TRIGGERS_SYM = 828,
     TRIGGER_SYM = 829,
     TRIM = 830,
     TRUE_SYM = 831,
     TRUNCATE_SYM = 832,
     TYPES_SYM = 833,
     TYPE_SYM = 834,
     UDF_RETURNS_SYM = 835,
     ULONGLONG_NUM = 836,
     UNCOMMITTED_SYM = 837,
     UNDEFINED_SYM = 838,
     UNDERSCORE_CHARSET = 839,
     UNDOFILE_SYM = 840,
     UNDO_BUFFER_SIZE_SYM = 841,
     UNDO_SYM = 842,
     UNICODE_SYM = 843,
     UNINSTALL_SYM = 844,
     UNION_SYM = 845,
     UNIQUE_SYM = 846,
     UNKNOWN_SYM = 847,
     UNLOCK_SYM = 848,
     UNSIGNED = 849,
     UNTIL_SYM = 850,
     UPDATE_SYM = 851,
     UPGRADE_SYM = 852,
     USAGE = 853,
     USER = 854,
     USE_FRM = 855,
     USE_SYM = 856,
     USING = 857,
     UTC_DATE_SYM = 858,
     UTC_TIMESTAMP_SYM = 859,
     UTC_TIME_SYM = 860,
     VALUES = 861,
     VALUE_SYM = 862,
     VARBINARY = 863,
     VARCHAR = 864,
     VARIABLES = 865,
     VARIANCE_SYM = 866,
     VARYING = 867,
     VAR_SAMP_SYM = 868,
     VIEW_SYM = 869,
     WAIT_SYM = 870,
     WARNINGS = 871,
     WEEK_SYM = 872,
     WEIGHT_STRING_SYM = 873,
     WHEN_SYM = 874,
     WHERE = 875,
     WHILE_SYM = 876,
     WITH = 877,
     WITH_CUBE_SYM = 878,
     WITH_ROLLUP_SYM = 879,
     WORK_SYM = 880,
     WRAPPER_SYM = 881,
     WRITE_SYM = 882,
     X509_SYM = 883,
     XA_SYM = 884,
     XML_SYM = 885,
     XOR = 886,
     YEAR_MONTH_SYM = 887,
     YEAR_SYM = 888,
     ZEROFILL = 889
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYSE_SYM 269
#define ANALYZE_SYM 270
#define AND_AND_SYM 271
#define AND_SYM 272
#define ANY_SYM 273
#define AS 274
#define ASC 275
#define ASCII_SYM 276
#define ASENSITIVE_SYM 277
#define AT_SYM 278
#define AUTOEXTEND_SIZE_SYM 279
#define AUTO_INC 280
#define AVG_ROW_LENGTH 281
#define AVG_SYM 282
#define BACKUP_SYM 283
#define BEFORE_SYM 284
#define BEGIN_SYM 285
#define BETWEEN_SYM 286
#define BIGINT 287
#define BINARY 288
#define BINLOG_SYM 289
#define BIN_NUM 290
#define BIT_AND 291
#define BIT_OR 292
#define BIT_SYM 293
#define BIT_XOR 294
#define BLOB_SYM 295
#define BLOCK_SYM 296
#define BOOLEAN_SYM 297
#define BOOL_SYM 298
#define BOTH 299
#define BTREE_SYM 300
#define BY 301
#define BYTE_SYM 302
#define CACHE_SYM 303
#define CALL_SYM 304
#define CASCADE 305
#define CASCADED 306
#define CASE_SYM 307
#define CAST_SYM 308
#define CATALOG_NAME_SYM 309
#define CHAIN_SYM 310
#define CHANGE 311
#define CHANGED 312
#define CHARSET 313
#define CHAR_SYM 314
#define CHECKSUM_SYM 315
#define CHECK_SYM 316
#define CIPHER_SYM 317
#define CLASS_ORIGIN_SYM 318
#define CLIENT_SYM 319
#define CLOSE_SYM 320
#define COALESCE 321
#define CODE_SYM 322
#define COLLATE_SYM 323
#define COLLATION_SYM 324
#define COLUMNS 325
#define COLUMN_SYM 326
#define COLUMN_FORMAT_SYM 327
#define COLUMN_NAME_SYM 328
#define COMMENT_SYM 329
#define COMMITTED_SYM 330
#define COMMIT_SYM 331
#define COMPACT_SYM 332
#define COMPLETION_SYM 333
#define COMPRESSED_SYM 334
#define CONCURRENT 335
#define CONDITION_SYM 336
#define CONNECTION_SYM 337
#define CONSISTENT_SYM 338
#define CONSTRAINT 339
#define CONSTRAINT_CATALOG_SYM 340
#define CONSTRAINT_NAME_SYM 341
#define CONSTRAINT_SCHEMA_SYM 342
#define CONTAINS_SYM 343
#define CONTEXT_SYM 344
#define CONTINUE_SYM 345
#define CONVERT_SYM 346
#define COUNT_SYM 347
#define CPU_SYM 348
#define CREATE 349
#define CROSS 350
#define CUBE_SYM 351
#define CURDATE 352
#define CURRENT_SYM 353
#define CURRENT_USER 354
#define CURSOR_SYM 355
#define CURSOR_NAME_SYM 356
#define CURTIME 357
#define DATABASE 358
#define DATABASES 359
#define DATAFILE_SYM 360
#define DATA_SYM 361
#define DATETIME 362
#define DATE_ADD_INTERVAL 363
#define DATE_SUB_INTERVAL 364
#define DATE_SYM 365
#define DAY_HOUR_SYM 366
#define DAY_MICROSECOND_SYM 367
#define DAY_MINUTE_SYM 368
#define DAY_SECOND_SYM 369
#define DAY_SYM 370
#define DEALLOCATE_SYM 371
#define DECIMAL_NUM 372
#define DECIMAL_SYM 373
#define DECLARE_SYM 374
#define DEFAULT 375
#define DEFAULT_AUTH_SYM 376
#define DEFINER_SYM 377
#define DELAYED_SYM 378
#define DELAY_KEY_WRITE_SYM 379
#define DELETE_SYM 380
#define DESC 381
#define DESCRIBE 382
#define DES_KEY_FILE 383
#define DETERMINISTIC_SYM 384
#define DIAGNOSTICS_SYM 385
#define DIRECTORY_SYM 386
#define DISABLE_SYM 387
#define DISCARD 388
#define DISK_SYM 389
#define DISTINCT 390
#define DIV_SYM 391
#define DOUBLE_SYM 392
#define DO_SYM 393
#define DROP 394
#define DUAL_SYM 395
#define DUMPFILE 396
#define DUPLICATE_SYM 397
#define DYNAMIC_SYM 398
#define EACH_SYM 399
#define ELSE 400
#define ELSEIF_SYM 401
#define ENABLE_SYM 402
#define ENCLOSED 403
#define END 404
#define ENDS_SYM 405
#define END_OF_INPUT 406
#define ENGINES_SYM 407
#define ENGINE_SYM 408
#define ENUM 409
#define EQ 410
#define EQUAL_SYM 411
#define ERROR_SYM 412
#define ERRORS 413
#define ESCAPED 414
#define ESCAPE_SYM 415
#define EVENTS_SYM 416
#define EVENT_SYM 417
#define EVERY_SYM 418
#define EXCHANGE_SYM 419
#define EXECUTE_SYM 420
#define EXISTS 421
#define EXIT_SYM 422
#define EXPANSION_SYM 423
#define EXPIRE_SYM 424
#define EXPORT_SYM 425
#define EXTENDED_SYM 426
#define EXTENT_SIZE_SYM 427
#define EXTRACT_SYM 428
#define FALSE_SYM 429
#define FAST_SYM 430
#define FAULTS_SYM 431
#define FETCH_SYM 432
#define FILE_SYM 433
#define FILTER_SYM 434
#define FIRST_SYM 435
#define FIXED_SYM 436
#define FLOAT_NUM 437
#define FLOAT_SYM 438
#define FLUSH_SYM 439
#define FOLLOWS_SYM 440
#define FORCE_SYM 441
#define FOREIGN 442
#define FOR_SYM 443
#define FORMAT_SYM 444
#define FOUND_SYM 445
#define FROM 446
#define FULL 447
#define FULLTEXT_SYM 448
#define FUNCTION_SYM 449
#define GE 450
#define GENERAL 451
#define GEOMETRYCOLLECTION 452
#define GEOMETRY_SYM 453
#define GET_FORMAT 454
#define GET_SYM 455
#define GLOBAL_SYM 456
#define GRANT 457
#define GRANTS 458
#define GROUP_SYM 459
#define GROUP_CONCAT_SYM 460
#define GT_SYM 461
#define HANDLER_SYM 462
#define HASH_SYM 463
#define HAVING 464
#define HELP_SYM 465
#define HEX_NUM 466
#define HIGH_PRIORITY 467
#define HOST_SYM 468
#define HOSTS_SYM 469
#define HOUR_MICROSECOND_SYM 470
#define HOUR_MINUTE_SYM 471
#define HOUR_SECOND_SYM 472
#define HOUR_SYM 473
#define IDENT 474
#define IDENTIFIED_SYM 475
#define IDENT_QUOTED 476
#define IF 477
#define IGNORE_SYM 478
#define IGNORE_SERVER_IDS_SYM 479
#define IMPORT 480
#define INDEXES 481
#define INDEX_SYM 482
#define INFILE 483
#define INITIAL_SIZE_SYM 484
#define INNER_SYM 485
#define INOUT_SYM 486
#define INSENSITIVE_SYM 487
#define INSERT 488
#define INSERT_METHOD 489
#define INSTALL_SYM 490
#define INTERVAL_SYM 491
#define INTO 492
#define INT_SYM 493
#define INVOKER_SYM 494
#define IN_SYM 495
#define IO_AFTER_GTIDS 496
#define IO_BEFORE_GTIDS 497
#define IO_SYM 498
#define IPC_SYM 499
#define IS 500
#define ISOLATION 501
#define ISSUER_SYM 502
#define ITERATE_SYM 503
#define JOIN_SYM 504
#define KEYS 505
#define KEY_BLOCK_SIZE 506
#define KEY_SYM 507
#define KILL_SYM 508
#define LANGUAGE_SYM 509
#define LAST_SYM 510
#define LE 511
#define LEADING 512
#define LEAVES 513
#define LEAVE_SYM 514
#define LEFT 515
#define LESS_SYM 516
#define LEVEL_SYM 517
#define LEX_HOSTNAME 518
#define LIKE 519
#define LIMIT 520
#define LINEAR_SYM 521
#define LINES 522
#define LINESTRING 523
#define LIST_SYM 524
#define LOAD 525
#define LOCAL_SYM 526
#define LOCATOR_SYM 527
#define LOCKS_SYM 528
#define LOCK_SYM 529
#define LOGFILE_SYM 530
#define LOGS_SYM 531
#define LONGBLOB 532
#define LONGTEXT 533
#define LONG_NUM 534
#define LONG_SYM 535
#define LOOP_SYM 536
#define LOW_PRIORITY 537
#define LT 538
#define MASTER_AUTO_POSITION_SYM 539
#define MASTER_BIND_SYM 540
#define MASTER_CONNECT_RETRY_SYM 541
#define MASTER_DELAY_SYM 542
#define MASTER_HOST_SYM 543
#define MASTER_LOG_FILE_SYM 544
#define MASTER_LOG_POS_SYM 545
#define MASTER_PASSWORD_SYM 546
#define MASTER_PORT_SYM 547
#define MASTER_RETRY_COUNT_SYM 548
#define MASTER_SERVER_ID_SYM 549
#define MASTER_SSL_CAPATH_SYM 550
#define MASTER_SSL_CA_SYM 551
#define MASTER_SSL_CERT_SYM 552
#define MASTER_SSL_CIPHER_SYM 553
#define MASTER_SSL_CRL_SYM 554
#define MASTER_SSL_CRLPATH_SYM 555
#define MASTER_SSL_KEY_SYM 556
#define MASTER_SSL_SYM 557
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 558
#define MASTER_SYM 559
#define MASTER_USER_SYM 560
#define MASTER_HEARTBEAT_PERIOD_SYM 561
#define MATCH 562
#define MAX_CONNECTIONS_PER_HOUR 563
#define MAX_QUERIES_PER_HOUR 564
#define MAX_STATEMENT_TIME_SYM 565
#define MAX_ROWS 566
#define MAX_SIZE_SYM 567
#define MAX_SYM 568
#define MAX_UPDATES_PER_HOUR 569
#define MAX_USER_CONNECTIONS_SYM 570
#define MAX_VALUE_SYM 571
#define MEDIUMBLOB 572
#define MEDIUMINT 573
#define MEDIUMTEXT 574
#define MEDIUM_SYM 575
#define MEMORY_SYM 576
#define MERGE_SYM 577
#define MESSAGE_TEXT_SYM 578
#define MICROSECOND_SYM 579
#define MIGRATE_SYM 580
#define MINUTE_MICROSECOND_SYM 581
#define MINUTE_SECOND_SYM 582
#define MINUTE_SYM 583
#define MIN_ROWS 584
#define MIN_SYM 585
#define MODE_SYM 586
#define MODIFIES_SYM 587
#define MODIFY_SYM 588
#define MOD_SYM 589
#define MONTH_SYM 590
#define MULTILINESTRING 591
#define MULTIPOINT 592
#define MULTIPOLYGON 593
#define MUTEX_SYM 594
#define MYSQL_ERRNO_SYM 595
#define NAMES_SYM 596
#define NAME_SYM 597
#define NATIONAL_SYM 598
#define NATURAL 599
#define NCHAR_STRING 600
#define NCHAR_SYM 601
#define NDBCLUSTER_SYM 602
#define NE 603
#define NEG 604
#define NEVER_SYM 605
#define NEW_SYM 606
#define NEXT_SYM 607
#define NODEGROUP_SYM 608
#define NONE_SYM 609
#define NOT2_SYM 610
#define NOT_SYM 611
#define NOW_SYM 612
#define NO_SYM 613
#define NO_WAIT_SYM 614
#define NO_WRITE_TO_BINLOG 615
#define NULL_SYM 616
#define NUM 617
#define NUMBER_SYM 618
#define NUMERIC_SYM 619
#define NVARCHAR_SYM 620
#define OFFSET_SYM 621
#define OLD_PASSWORD 622
#define ON 623
#define ONE_SYM 624
#define ONLY_SYM 625
#define OPEN_SYM 626
#define OPTIMIZE 627
#define OPTIONS_SYM 628
#define OPTION 629
#define OPTIONALLY 630
#define OR2_SYM 631
#define ORDER_SYM 632
#define OR_OR_SYM 633
#define OR_SYM 634
#define OUTER 635
#define OUTFILE 636
#define OUT_SYM 637
#define OWNER_SYM 638
#define PACK_KEYS_SYM 639
#define PAGE_SYM 640
#define PARAM_MARKER 641
#define PARSER_SYM 642
#define PARTIAL 643
#define PARTITION_SYM 644
#define PARTITIONS_SYM 645
#define PARTITIONING_SYM 646
#define PASSWORD 647
#define PHASE_SYM 648
#define PLUGIN_DIR_SYM 649
#define PLUGIN_SYM 650
#define PLUGINS_SYM 651
#define POINT_SYM 652
#define POLYGON 653
#define PORT_SYM 654
#define POSITION_SYM 655
#define PRECEDES_SYM 656
#define PRECISION 657
#define PREPARE_SYM 658
#define PRESERVE_SYM 659
#define PREV_SYM 660
#define PRIMARY_SYM 661
#define PRIVILEGES 662
#define PROCEDURE_SYM 663
#define PROCESS 664
#define PROCESSLIST_SYM 665
#define PROFILE_SYM 666
#define PROFILES_SYM 667
#define PROXY_SYM 668
#define PURGE 669
#define QUARTER_SYM 670
#define QUERY_SYM 671
#define QUICK 672
#define RANGE_SYM 673
#define READS_SYM 674
#define READ_ONLY_SYM 675
#define READ_SYM 676
#define READ_WRITE_SYM 677
#define REAL 678
#define REBUILD_SYM 679
#define RECOVER_SYM 680
#define REDOFILE_SYM 681
#define REDO_BUFFER_SIZE_SYM 682
#define REDUNDANT_SYM 683
#define REFERENCES 684
#define REGEXP 685
#define RELAY 686
#define RELAYLOG_SYM 687
#define RELAY_LOG_FILE_SYM 688
#define RELAY_LOG_POS_SYM 689
#define RELAY_THREAD 690
#define RELEASE_SYM 691
#define RELOAD 692
#define REMOVE_SYM 693
#define RENAME 694
#define REORGANIZE_SYM 695
#define REPAIR 696
#define REPEATABLE_SYM 697
#define REPEAT_SYM 698
#define REPLACE 699
#define REPLICATION 700
#define REPLICATE_DO_DB 701
#define REPLICATE_IGNORE_DB 702
#define REPLICATE_DO_TABLE 703
#define REPLICATE_IGNORE_TABLE 704
#define REPLICATE_WILD_DO_TABLE 705
#define REPLICATE_WILD_IGNORE_TABLE 706
#define REPLICATE_REWRITE_DB 707
#define REQUIRE_SYM 708
#define RESET_SYM 709
#define RESIGNAL_SYM 710
#define RESOURCES 711
#define RESTORE_SYM 712
#define RESTRICT 713
#define RESUME_SYM 714
#define RETURNED_SQLSTATE_SYM 715
#define RETURNS_SYM 716
#define RETURN_SYM 717
#define REVERSE_SYM 718
#define REVOKE 719
#define RIGHT 720
#define ROLLBACK_SYM 721
#define ROLLUP_SYM 722
#define ROUTINE_SYM 723
#define ROWS_SYM 724
#define ROW_FORMAT_SYM 725
#define ROW_SYM 726
#define ROW_COUNT_SYM 727
#define RTREE_SYM 728
#define SAVEPOINT_SYM 729
#define SCHEDULE_SYM 730
#define SCHEMA_NAME_SYM 731
#define SECOND_MICROSECOND_SYM 732
#define SECOND_SYM 733
#define SECURITY_SYM 734
#define SELECT_SYM 735
#define SENSITIVE_SYM 736
#define SEPARATOR_SYM 737
#define SERIALIZABLE_SYM 738
#define SERIAL_SYM 739
#define SESSION_SYM 740
#define SERVER_SYM 741
#define SERVER_OPTIONS 742
#define SET 743
#define SET_VAR 744
#define SHARE_SYM 745
#define SHIFT_LEFT 746
#define SHIFT_RIGHT 747
#define SHOW 748
#define SHUTDOWN 749
#define SIGNAL_SYM 750
#define SIGNED_SYM 751
#define SIMPLE_SYM 752
#define SLAVE 753
#define SLOW 754
#define SMALLINT 755
#define SNAPSHOT_SYM 756
#define SOCKET_SYM 757
#define SONAME_SYM 758
#define SOUNDS_SYM 759
#define SOURCE_SYM 760
#define SPATIAL_SYM 761
#define SPECIFIC_SYM 762
#define SQLEXCEPTION_SYM 763
#define SQLSTATE_SYM 764
#define SQLWARNING_SYM 765
#define SQL_AFTER_GTIDS 766
#define SQL_AFTER_MTS_GAPS 767
#define SQL_BEFORE_GTIDS 768
#define SQL_BIG_RESULT 769
#define SQL_BUFFER_RESULT 770
#define SQL_CACHE_SYM 771
#define SQL_CALC_FOUND_ROWS 772
#define SQL_NO_CACHE_SYM 773
#define SQL_SMALL_RESULT 774
#define SQL_SYM 775
#define SQL_THREAD 776
#define SSL_SYM 777
#define STACKED_SYM 778
#define STARTING 779
#define STARTS_SYM 780
#define START_SYM 781
#define STATS_AUTO_RECALC_SYM 782
#define STATS_PERSISTENT_SYM 783
#define STATS_SAMPLE_PAGES_SYM 784
#define STATUS_SYM 785
#define NONBLOCKING_SYM 786
#define STDDEV_SAMP_SYM 787
#define STD_SYM 788
#define STOP_SYM 789
#define STORAGE_SYM 790
#define STRAIGHT_JOIN 791
#define STRING_SYM 792
#define SUBCLASS_ORIGIN_SYM 793
#define SUBDATE_SYM 794
#define SUBJECT_SYM 795
#define SUBPARTITIONS_SYM 796
#define SUBPARTITION_SYM 797
#define SUBSTRING 798
#define SUM_SYM 799
#define SUPER_SYM 800
#define SUSPEND_SYM 801
#define SWAPS_SYM 802
#define SWITCHES_SYM 803
#define SYSDATE 804
#define TABLES 805
#define TABLESPACE 806
#define TABLE_REF_PRIORITY 807
#define TABLE_SYM 808
#define TABLE_CHECKSUM_SYM 809
#define TABLE_NAME_SYM 810
#define TEMPORARY 811
#define TEMPTABLE_SYM 812
#define TERMINATED 813
#define TEXT_STRING 814
#define TEXT_SYM 815
#define THAN_SYM 816
#define THEN_SYM 817
#define TIMESTAMP 818
#define TIMESTAMP_ADD 819
#define TIMESTAMP_DIFF 820
#define TIME_SYM 821
#define TINYBLOB 822
#define TINYINT 823
#define TINYTEXT 824
#define TO_SYM 825
#define TRAILING 826
#define TRANSACTION_SYM 827
#define TRIGGERS_SYM 828
#define TRIGGER_SYM 829
#define TRIM 830
#define TRUE_SYM 831
#define TRUNCATE_SYM 832
#define TYPES_SYM 833
#define TYPE_SYM 834
#define UDF_RETURNS_SYM 835
#define ULONGLONG_NUM 836
#define UNCOMMITTED_SYM 837
#define UNDEFINED_SYM 838
#define UNDERSCORE_CHARSET 839
#define UNDOFILE_SYM 840
#define UNDO_BUFFER_SIZE_SYM 841
#define UNDO_SYM 842
#define UNICODE_SYM 843
#define UNINSTALL_SYM 844
#define UNION_SYM 845
#define UNIQUE_SYM 846
#define UNKNOWN_SYM 847
#define UNLOCK_SYM 848
#define UNSIGNED 849
#define UNTIL_SYM 850
#define UPDATE_SYM 851
#define UPGRADE_SYM 852
#define USAGE 853
#define USER 854
#define USE_FRM 855
#define USE_SYM 856
#define USING 857
#define UTC_DATE_SYM 858
#define UTC_TIMESTAMP_SYM 859
#define UTC_TIME_SYM 860
#define VALUES 861
#define VALUE_SYM 862
#define VARBINARY 863
#define VARCHAR 864
#define VARIABLES 865
#define VARIANCE_SYM 866
#define VARYING 867
#define VAR_SAMP_SYM 868
#define VIEW_SYM 869
#define WAIT_SYM 870
#define WARNINGS 871
#define WEEK_SYM 872
#define WEIGHT_STRING_SYM 873
#define WHEN_SYM 874
#define WHERE 875
#define WHILE_SYM 876
#define WITH 877
#define WITH_CUBE_SYM 878
#define WITH_ROLLUP_SYM 879
#define WORK_SYM 880
#define WRAPPER_SYM 881
#define WRITE_SYM 882
#define X509_SYM 883
#define XA_SYM 884
#define XML_SYM 885
#define XOR 886
#define YEAR_MONTH_SYM 887
#define YEAR_SYM 888
#define ZEROFILL 889




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
{

/* Line 214 of yacc.c  */
#line 886 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_ha_read_modes ha_read_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  const CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  class sp_condition_value *spcondvalue;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  enum_condition_item_name da_condition_item_name;
  Diagnostics_information::Which_area diag_area;
  Diagnostics_information *diag_info;
  Statement_information_item *stmt_info_item;
  Statement_information_item::Name stmt_info_item_name;
  List<Statement_information_item> *stmt_info_list;
  Condition_information_item *cond_info_item;
  Condition_information_item::Name cond_info_item_name;
  List<Condition_information_item> *cond_info_list;
  bool is_not_empty;
  Set_signal_information *signal_item_list;
  enum enum_trigger_order_type trigger_action_order_type;
  struct
  {
    enum enum_trigger_order_type ordering_clause;
    LEX_STRING anchor_trigger_name;
  } trg_characteristics;
  struct
  {
    bool set_password_expire_flag;    /* true if password expires */
    bool use_default_password_expiry; /* true if password_lifetime is NULL*/
    uint16 expire_after_days;
  } user_password_expiration;



/* Line 214 of yacc.c  */
#line 2322 "/export/home/pb2/build/sb_0-11798678-1395226371.33/dist_GPL/sql/sql_yacc.cc"
} YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */

/* Line 264 of yacc.c  */
#line 957 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);


/* Line 264 of yacc.c  */
#line 2352 "/export/home/pb2/build/sb_0-11798678-1395226371.33/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  611
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   60021

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  654
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  972
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2729
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4630

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   889

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   647,     2,     2,     2,   641,   636,     2,
     644,   645,   639,   638,   646,   637,   652,   640,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   653,   650,
       2,     2,     2,     2,   651,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   642,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   648,   635,   649,   643,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   129,   131,   133,   138,   140,   143,   144,
     149,   150,   153,   157,   159,   162,   163,   167,   168,   174,
     175,   181,   183,   187,   191,   195,   199,   203,   207,   211,
     215,   218,   222,   224,   228,   230,   233,   237,   243,   251,
     254,   258,   260,   264,   268,   271,   275,   277,   281,   283,
     285,   289,   293,   297,   301,   305,   309,   313,   317,   321,
     325,   329,   333,   337,   341,   345,   349,   353,   357,   361,
     367,   371,   373,   374,   376,   380,   382,   386,   390,   394,
     398,   399,   407,   408,   409,   424,   425,   426,   441,   442,
     443,   458,   459,   466,   467,   471,   476,   481,   485,   497,
     499,   503,   506,   509,   512,   515,   518,   521,   524,   525,
     538,   539,   546,   549,   550,   552,   556,   558,   559,   562,
     563,   566,   567,   569,   573,   578,   579,   582,   583,   586,
     588,   590,   592,   594,   596,   598,   600,   602,   604,   606,
     608,   610,   612,   613,   617,   619,   620,   623,   624,   627,
     630,   633,   636,   639,   643,   647,   649,   651,   653,   656,
     660,   664,   665,   670,   671,   675,   676,   678,   682,   684,
     685,   687,   691,   693,   694,   698,   699,   701,   705,   707,
     712,   713,   715,   717,   719,   720,   724,   727,   731,   732,
     736,   737,   743,   749,   750,   758,   759,   766,   768,   770,
     772,   776,   778,   780,   782,   786,   787,   789,   791,   793,
     795,   798,   800,   804,   806,   808,   809,   811,   812,   815,
     819,   825,   827,   829,   831,   833,   835,   837,   839,   841,
     843,   845,   847,   849,   851,   853,   855,   859,   864,   865,
     867,   869,   871,   875,   877,   881,   885,   887,   890,   892,
     894,   896,   898,   902,   906,   908,   910,   912,   914,   916,
     918,   920,   922,   924,   926,   928,   930,   932,   934,   938,
     939,   940,   944,   946,   948,   950,   952,   954,   956,   958,
     960,   962,   964,   966,   968,   970,   971,   977,   978,   981,
     982,   986,   987,   990,   993,   996,   999,  1000,  1007,  1010,
    1011,  1014,  1016,  1018,  1022,  1023,  1024,  1025,  1033,  1034,
    1037,  1040,  1042,  1044,  1045,  1046,  1055,  1056,  1063,  1065,
    1068,  1070,  1073,  1074,  1075,  1082,  1083,  1084,  1091,  1092,
    1095,  1096,  1102,  1103,  1105,  1106,  1112,  1113,  1116,  1117,
    1123,  1128,  1129,  1130,  1139,  1140,  1141,  1150,  1152,  1154,
    1156,  1158,  1160,  1163,  1168,  1174,  1175,  1180,  1185,  1190,
    1194,  1198,  1201,  1204,  1205,  1208,  1210,  1213,  1217,  1219,
    1221,  1223,  1224,  1226,  1228,  1231,  1235,  1237,  1239,  1241,
    1243,  1245,  1247,  1249,  1251,  1252,  1254,  1256,  1259,  1263,
    1265,  1267,  1269,  1271,  1273,  1274,  1276,  1278,  1281,  1285,
    1287,  1289,  1291,  1293,  1295,  1297,  1299,  1300,  1302,  1304,
    1307,  1311,  1313,  1315,  1317,  1320,  1323,  1326,  1328,  1330,
    1332,  1334,  1337,  1341,  1345,  1349,  1353,  1357,  1361,  1365,
    1369,  1374,  1376,  1378,  1380,  1382,  1385,  1389,  1392,  1397,
    1403,  1404,  1410,  1411,  1412,  1418,  1419,  1427,  1429,  1430,
    1432,  1433,  1438,  1439,  1440,  1444,  1450,  1457,  1458,  1463,
    1466,  1469,  1472,  1475,  1476,  1478,  1479,  1483,  1484,  1486,
    1488,  1492,  1494,  1499,  1503,  1507,  1508,  1511,  1512,  1513,
    1521,  1522,  1533,  1535,  1539,  1541,  1543,  1544,  1547,  1548,
    1552,  1554,  1558,  1559,  1566,  1568,  1569,  1570,  1576,  1577,
    1582,  1584,  1586,  1588,  1592,  1594,  1598,  1599,  1600,  1606,
    1608,  1612,  1614,  1616,  1617,  1621,  1623,  1627,  1628,  1633,
    1635,  1636,  1638,  1641,  1643,  1647,  1652,  1656,  1660,  1664,
    1669,  1674,  1678,  1679,  1680,  1687,  1688,  1690,  1691,  1693,
    1695,  1698,  1700,  1702,  1703,  1705,  1707,  1710,  1712,  1713,
    1717,  1718,  1720,  1722,  1725,  1727,  1730,  1734,  1738,  1742,
    1746,  1750,  1754,  1758,  1762,  1766,  1770,  1774,  1778,  1782,
    1786,  1790,  1794,  1798,  1802,  1806,  1810,  1811,  1818,  1820,
    1822,  1826,  1831,  1836,  1839,  1842,  1845,  1849,  1853,  1858,
    1863,  1865,  1867,  1869,  1871,  1873,  1875,  1877,  1879,  1881,
    1883,  1885,  1887,  1889,  1891,  1893,  1895,  1897,  1901,  1903,
    1905,  1908,  1911,  1919,  1928,  1937,  1946,  1955,  1958,  1959,
    1961,  1966,  1967,  1969,  1972,  1973,  1978,  1982,  1986,  1990,
    1992,  1995,  1997,  1999,  2003,  2006,  2010,  2013,  2016,  2018,
    2022,  2026,  2029,  2033,  2035,  2038,  2041,  2044,  2046,  2049,
    2051,  2053,  2055,  2058,  2062,  2065,  2069,  2072,  2075,  2079,
    2083,  2087,  2088,  2095,  2096,  2103,  2106,  2108,  2110,  2112,
    2114,  2116,  2118,  2120,  2122,  2124,  2126,  2128,  2131,  2134,
    2136,  2139,  2141,  2144,  2148,  2151,  2153,  2155,  2157,  2159,
    2161,  2163,  2165,  2168,  2169,  2171,  2173,  2179,  2180,  2184,
    2185,  2188,  2192,  2193,  2195,  2198,  2200,  2202,  2204,  2206,
    2210,  2214,  2218,  2222,  2223,  2225,  2226,  2228,  2229,  2231,
    2234,  2236,  2238,  2241,  2244,  2248,  2250,  2254,  2257,  2259,
    2262,  2265,  2268,  2271,  2274,  2277,  2280,  2283,  2286,  2289,
    2292,  2294,  2296,  2299,  2301,  2303,  2305,  2307,  2309,  2310,
    2313,  2315,  2317,  2319,  2321,  2323,  2324,  2327,  2329,  2331,
    2332,  2334,  2336,  2339,  2342,  2344,  2347,  2350,  2351,  2353,
    2355,  2357,  2361,  2363,  2367,  2368,  2370,  2371,  2376,  2378,
    2380,  2382,  2383,  2385,  2388,  2390,  2392,  2395,  2397,  2401,
    2405,  2407,  2409,  2410,  2413,  2414,  2416,  2422,  2423,  2427,
    2431,  2433,  2434,  2437,  2440,  2443,  2444,  2448,  2452,  2459,
    2466,  2468,  2470,  2473,  2476,  2479,  2481,  2484,  2487,  2489,
    2491,  2492,  2494,  2496,  2498,  2500,  2501,  2503,  2505,  2507,
    2508,  2510,  2513,  2514,  2516,  2517,  2519,  2520,  2522,  2524,
    2527,  2529,  2532,  2534,  2537,  2540,  2543,  2547,  2550,  2552,
    2554,  2556,  2558,  2562,  2564,  2566,  2568,  2573,  2576,  2578,
    2583,  2584,  2586,  2587,  2590,  2592,  2596,  2597,  2603,  2604,
    2610,  2618,  2619,  2625,  2626,  2632,  2633,  2639,  2640,  2645,
    2646,  2657,  2661,  2666,  2670,  2674,  2682,  2687,  2689,  2693,
    2698,  2699,  2703,  2705,  2707,  2708,  2712,  2714,  2719,  2720,
    2724,  2725,  2728,  2729,  2731,  2732,  2735,  2738,  2741,  2744,
    2746,  2748,  2750,  2754,  2759,  2760,  2767,  2772,  2773,  2779,
    2780,  2787,  2792,  2796,  2798,  2806,  2812,  2818,  2822,  2824,
    2826,  2827,  2833,  2834,  2838,  2841,  2842,  2848,  2849,  2850,
    2857,  2859,  2863,  2865,  2867,  2871,  2874,  2878,  2881,  2886,
    2887,  2894,  2895,  2896,  2905,  2910,  2915,  2919,  2923,  2926,
    2929,  2936,  2942,  2946,  2952,  2958,  2960,  2962,  2964,  2966,
    2968,  2969,  2971,  2973,  2976,  2979,  2983,  2987,  2991,  2995,
    2996,  2998,  2999,  3001,  3002,  3004,  3006,  3007,  3010,  3012,
    3013,  3015,  3017,  3019,  3020,  3027,  3031,  3035,  3036,  3038,
    3040,  3044,  3048,  3051,  3054,  3059,  3060,  3064,  3065,  3069,
    3070,  3074,  3075,  3079,  3080,  3082,  3084,  3088,  3090,  3092,
    3093,  3096,  3098,  3102,  3106,  3110,  3112,  3113,  3119,  3120,
    3122,  3124,  3125,  3132,  3133,  3135,  3137,  3140,  3142,  3144,
    3146,  3147,  3153,  3156,  3157,  3163,  3164,  3166,  3168,  3171,
    3173,  3175,  3177,  3179,  3181,  3184,  3185,  3191,  3192,  3194,
    3196,  3197,  3202,  3207,  3211,  3217,  3219,  3223,  3227,  3228,
    3235,  3237,  3239,  3241,  3245,  3248,  3252,  3254,  3256,  3257,
    3264,  3266,  3268,  3270,  3274,  3278,  3283,  3284,  3291,  3292,
    3295,  3296,  3301,  3302,  3305,  3307,  3310,  3315,  3316,  3320,
    3324,  3325,  3330,  3334,  3335,  3339,  3344,  3348,  3360,  3361,
    3365,  3374,  3377,  3378,  3380,  3382,  3384,  3385,  3387,  3390,
    3392,  3394,  3396,  3398,  3402,  3403,  3406,  3411,  3415,  3417,
    3419,  3421,  3424,  3425,  3428,  3431,  3433,  3435,  3436,  3439,
    3443,  3447,  3451,  3454,  3458,  3463,  3467,  3472,  3476,  3481,
    3483,  3487,  3492,  3496,  3500,  3507,  3509,  3515,  3522,  3528,
    3536,  3543,  3552,  3558,  3565,  3570,  3575,  3581,  3585,  3590,
    3592,  3596,  3600,  3604,  3608,  3612,  3616,  3622,  3628,  3632,
    3636,  3640,  3644,  3648,  3652,  3654,  3656,  3658,  3660,  3662,
    3664,  3666,  3668,  3670,  3672,  3674,  3676,  3678,  3680,  3682,
    3684,  3686,  3688,  3690,  3692,  3694,  3696,  3700,  3702,  3704,
    3706,  3708,  3712,  3715,  3718,  3721,  3724,  3728,  3732,  3738,
    3745,  3750,  3755,  3763,  3766,  3773,  3779,  3786,  3793,  3798,
    3803,  3809,  3814,  3821,  3824,  3829,  3834,  3839,  3850,  3857,
    3866,  3873,  3878,  3883,  3890,  3895,  3900,  3905,  3912,  3917,
    3925,  3933,  3941,  3948,  3955,  3962,  3969,  3973,  3978,  3985,
    3994,  3997,  4000,  4009,  4018,  4025,  4032,  4034,  4041,  4048,
    4057,  4066,  4073,  4082,  4089,  4092,  4101,  4110,  4113,  4116,
    4119,  4124,  4129,  4134,  4139,  4143,  4152,  4159,  4168,  4173,
    4180,  4185,  4190,  4195,  4202,  4211,  4216,  4220,  4227,  4232,
    4239,  4245,  4254,  4262,  4273,  4275,  4282,  4287,  4292,  4297,
    4302,  4307,  4314,  4319,  4320,  4326,  4333,  4336,  4340,  4341,
    4346,  4347,  4351,  4352,  4354,  4356,  4360,  4363,  4368,  4374,
    4379,  4384,  4389,  4395,  4400,  4401,  4402,  4410,  4415,  4421,
    4426,  4432,  4437,  4442,  4447,  4452,  4457,  4463,  4464,  4473,
    4474,  4478,  4482,  4484,  4489,  4490,  4492,  4493,  4496,  4497,
    4498,  4503,  4508,  4511,  4512,  4516,  4519,  4523,  4526,  4528,
    4531,  4533,  4536,  4538,  4541,  4544,  4547,  4548,  4550,  4552,
    4556,  4558,  4562,  4564,  4568,  4569,  4571,  4572,  4575,  4580,
    4586,  4588,  4590,  4592,  4594,  4599,  4601,  4605,  4609,  4613,
    4614,  4621,  4622,  4629,  4630,  4639,  4644,  4645,  4654,  4655,
    4666,  4673,  4674,  4683,  4684,  4695,  4702,  4704,  4707,  4710,
    4711,  4713,  4719,  4720,  4726,  4730,  4736,  4739,  4740,  4746,
    4748,  4749,  4753,  4754,  4758,  4759,  4760,  4766,  4767,  4769,
    4770,  4772,  4773,  4776,  4780,  4784,  4786,  4788,  4789,  4797,
    4798,  4806,  4808,  4811,  4812,  4813,  4816,  4817,  4820,  4821,
    4823,  4825,  4827,  4829,  4833,  4835,  4839,  4841,  4843,  4845,
    4847,  4849,  4851,  4853,  4855,  4857,  4859,  4861,  4863,  4865,
    4867,  4869,  4871,  4873,  4875,  4877,  4879,  4881,  4883,  4885,
    4887,  4889,  4890,  4892,  4894,  4895,  4898,  4899,  4901,  4902,
    4903,  4907,  4908,  4909,  4913,  4916,  4917,  4918,  4919,  4920,
    4927,  4932,  4935,  4936,  4938,  4940,  4944,  4948,  4950,  4953,
    4954,  4956,  4957,  4962,  4967,  4970,  4971,  4973,  4975,  4976,
    4978,  4979,  4983,  4985,  4989,  4993,  4995,  4997,  4999,  5001,
    5003,  5004,  5007,  5009,  5011,  5013,  5015,  5017,  5019,  5021,
    5023,  5025,  5027,  5029,  5031,  5033,  5035,  5037,  5039,  5041,
    5043,  5045,  5047,  5049,  5051,  5053,  5054,  5055,  5062,  5063,
    5065,  5069,  5071,  5072,  5075,  5079,  5081,  5084,  5086,  5087,
    5089,  5090,  5094,  5095,  5096,  5104,  5107,  5109,  5110,  5114,
    5115,  5123,  5124,  5125,  5134,  5139,  5146,  5151,  5156,  5161,
    5162,  5169,  5174,  5179,  5184,  5190,  5195,  5197,  5201,  5203,
    5206,  5208,  5212,  5214,  5215,  5218,  5219,  5221,  5222,  5224,
    5226,  5229,  5233,  5235,  5237,  5238,  5239,  5248,  5249,  5250,
    5257,  5258,  5260,  5262,  5264,  5266,  5268,  5271,  5273,  5275,
    5277,  5281,  5286,  5287,  5291,  5295,  5297,  5300,  5303,  5304,
    5308,  5309,  5315,  5319,  5321,  5325,  5327,  5331,  5333,  5335,
    5336,  5338,  5339,  5344,  5345,  5347,  5351,  5353,  5355,  5357,
    5358,  5359,  5360,  5368,  5369,  5370,  5371,  5384,  5388,  5390,
    5394,  5398,  5400,  5404,  5405,  5407,  5408,  5413,  5414,  5422,
    5423,  5429,  5430,  5437,  5439,  5443,  5446,  5451,  5452,  5455,
    5456,  5459,  5461,  5463,  5465,  5466,  5471,  5472,  5474,  5475,
    5477,  5479,  5483,  5485,  5487,  5490,  5493,  5496,  5498,  5500,
    5502,  5504,  5505,  5509,  5510,  5514,  5517,  5522,  5527,  5531,
    5536,  5541,  5543,  5547,  5551,  5558,  5561,  5564,  5565,  5572,
    5573,  5580,  5586,  5589,  5591,  5597,  5603,  5606,  5609,  5611,
    5616,  5620,  5623,  5627,  5630,  5633,  5635,  5639,  5644,  5648,
    5652,  5655,  5659,  5662,  5666,  5670,  5674,  5678,  5682,  5686,
    5690,  5694,  5696,  5698,  5700,  5702,  5704,  5705,  5707,  5708,
    5711,  5712,  5714,  5716,  5718,  5719,  5722,  5723,  5726,  5727,
    5730,  5733,  5734,  5739,  5740,  5745,  5747,  5749,  5751,  5753,
    5755,  5759,  5761,  5763,  5764,  5766,  5768,  5772,  5773,  5775,
    5777,  5778,  5783,  5784,  5785,  5791,  5793,  5794,  5798,  5799,
    5803,  5807,  5809,  5812,  5815,  5818,  5821,  5824,  5827,  5830,
    5832,  5834,  5836,  5838,  5840,  5842,  5843,  5845,  5846,  5850,
    5854,  5856,  5857,  5861,  5863,  5866,  5867,  5869,  5870,  5874,
    5878,  5881,  5884,  5888,  5889,  5891,  5893,  5896,  5897,  5898,
    5899,  5900,  5923,  5925,  5927,  5928,  5930,  5931,  5933,  5935,
    5936,  5938,  5940,  5941,  5944,  5947,  5949,  5953,  5958,  5962,
    5966,  5967,  5970,  5973,  5975,  5979,  5983,  5984,  5989,  5990,
    5994,  5996,  5998,  5999,  6003,  6006,  6010,  6012,  6014,  6017,
    6018,  6021,  6025,  6027,  6031,  6033,  6035,  6038,  6041,  6043,
    6045,  6047,  6049,  6051,  6054,  6057,  6059,  6061,  6063,  6065,
    6067,  6069,  6071,  6073,  6076,  6079,  6081,  6083,  6085,  6087,
    6089,  6092,  6095,  6098,  6100,  6102,  6106,  6112,  6114,  6116,
    6118,  6120,  6122,  6126,  6131,  6137,  6139,  6145,  6149,  6152,
    6154,  6158,  6161,  6164,  6169,  6171,  6173,  6175,  6177,  6179,
    6181,  6183,  6185,  6187,  6189,  6191,  6193,  6195,  6197,  6199,
    6203,  6206,  6208,  6210,  6212,  6214,  6216,  6218,  6220,  6222,
    6224,  6226,  6228,  6230,  6232,  6234,  6236,  6238,  6240,  6242,
    6244,  6246,  6248,  6250,  6252,  6254,  6256,  6258,  6260,  6262,
    6264,  6266,  6268,  6270,  6272,  6274,  6276,  6278,  6280,  6282,
    6284,  6286,  6288,  6290,  6292,  6294,  6296,  6298,  6300,  6302,
    6304,  6306,  6308,  6310,  6312,  6314,  6316,  6318,  6320,  6322,
    6324,  6326,  6328,  6330,  6332,  6334,  6336,  6338,  6340,  6342,
    6344,  6346,  6348,  6350,  6352,  6354,  6356,  6358,  6360,  6362,
    6364,  6366,  6368,  6370,  6372,  6374,  6376,  6378,  6380,  6382,
    6384,  6386,  6388,  6390,  6392,  6394,  6396,  6398,  6400,  6402,
    6404,  6406,  6408,  6410,  6412,  6414,  6416,  6418,  6420,  6422,
    6424,  6426,  6428,  6430,  6432,  6434,  6436,  6438,  6440,  6442,
    6444,  6446,  6448,  6450,  6452,  6454,  6456,  6458,  6460,  6462,
    6464,  6466,  6468,  6470,  6472,  6474,  6476,  6478,  6480,  6482,
    6484,  6486,  6488,  6490,  6492,  6494,  6496,  6498,  6500,  6502,
    6504,  6506,  6508,  6510,  6512,  6514,  6516,  6518,  6520,  6522,
    6524,  6526,  6528,  6530,  6532,  6534,  6536,  6538,  6540,  6542,
    6544,  6546,  6548,  6550,  6552,  6554,  6556,  6558,  6560,  6562,
    6564,  6566,  6568,  6570,  6572,  6574,  6576,  6578,  6580,  6582,
    6584,  6586,  6588,  6590,  6592,  6594,  6596,  6598,  6600,  6602,
    6604,  6606,  6608,  6610,  6612,  6614,  6616,  6618,  6620,  6622,
    6624,  6626,  6628,  6630,  6632,  6634,  6636,  6638,  6640,  6642,
    6644,  6646,  6648,  6650,  6652,  6654,  6656,  6658,  6660,  6662,
    6664,  6666,  6668,  6670,  6672,  6674,  6676,  6678,  6680,  6682,
    6684,  6686,  6688,  6690,  6692,  6694,  6696,  6698,  6700,  6702,
    6704,  6706,  6708,  6710,  6712,  6714,  6716,  6718,  6720,  6722,
    6724,  6726,  6728,  6730,  6732,  6734,  6736,  6738,  6740,  6742,
    6744,  6746,  6748,  6750,  6752,  6754,  6756,  6758,  6760,  6762,
    6764,  6766,  6768,  6770,  6772,  6774,  6776,  6778,  6780,  6782,
    6784,  6786,  6788,  6790,  6792,  6794,  6796,  6798,  6800,  6802,
    6804,  6806,  6808,  6810,  6812,  6814,  6816,  6818,  6820,  6822,
    6824,  6826,  6828,  6830,  6832,  6834,  6836,  6838,  6840,  6842,
    6844,  6846,  6848,  6850,  6852,  6854,  6856,  6858,  6860,  6862,
    6864,  6866,  6868,  6870,  6872,  6874,  6876,  6878,  6880,  6882,
    6884,  6886,  6888,  6890,  6892,  6894,  6896,  6898,  6900,  6902,
    6904,  6906,  6908,  6910,  6912,  6914,  6916,  6918,  6920,  6922,
    6924,  6926,  6928,  6930,  6932,  6934,  6935,  6939,  6940,  6944,
    6945,  6949,  6950,  6954,  6958,  6964,  6965,  6969,  6972,  6973,
    6976,  6977,  6980,  6981,  6986,  6987,  6991,  6993,  6995,  6997,
    6999,  7000,  7002,  7004,  7006,  7007,  7010,  7013,  7016,  7020,
    7021,  7026,  7031,  7038,  7041,  7045,  7049,  7051,  7055,  7059,
    7061,  7063,  7067,  7071,  7073,  7077,  7080,  7083,  7086,  7089,
    7092,  7094,  7096,  7101,  7106,  7108,  7110,  7112,  7114,  7116,
    7117,  7122,  7124,  7126,  7128,  7132,  7136,  7138,  7140,  7143,
    7146,  7147,  7151,  7156,  7160,  7161,  7169,  7171,  7174,  7176,
    7178,  7180,  7182,  7184,  7186,  7187,  7193,  7195,  7197,  7199,
    7201,  7203,  7204,  7209,  7216,  7223,  7230,  7238,  7244,  7245,
    7250,  7259,  7268,  7277,  7284,  7285,  7287,  7289,  7292,  7293,
    7295,  7297,  7301,  7302,  7306,  7307,  7311,  7312,  7316,  7317,
    7321,  7323,  7325,  7327,  7329,  7331,  7333,  7335,  7337,  7339,
    7341,  7343,  7346,  7349,  7351,  7355,  7358,  7361,  7364,  7367,
    7370,  7373,  7376,  7379,  7381,  7383,  7386,  7387,  7389,  7393,
    7395,  7398,  7401,  7404,  7406,  7410,  7414,  7416,  7418,  7422,
    7424,  7428,  7433,  7439,  7444,  7451,  7453,  7454,  7458,  7462,
    7464,  7466,  7467,  7470,  7473,  7476,  7479,  7480,  7483,  7484,
    7488,  7491,  7493,  7496,  7499,  7502,  7505,  7508,  7509,  7513,
    7514,  7516,  7517,  7521,  7524,  7525,  7527,  7530,  7531,  7533,
    7538,  7543,  7549,  7552,  7556,  7557,  7559,  7560,  7565,  7566,
    7568,  7570,  7571,  7573,  7574,  7577,  7580,  7582,  7583,  7585,
    7587,  7591,  7596,  7598,  7599,  7605,  7609,  7610,  7611,  7612,
    7614,  7617,  7619,  7621,  7623,  7625,  7627,  7629,  7631,  7633,
    7635,  7638,  7641,  7645,  7647,  7649,  7651,  7653,  7655,  7657,
    7659,  7661,  7663,  7665,  7667,  7669,  7671,  7672,  7676,  7678,
    7681,  7683,  7686,  7690,  7694,  7698,  7699,  7703,  7707,  7708,
    7716,  7717,  7721,  7723,  7727,  7728,  7732,  7733,  7737,  7742,
    7743,  7746,  7750,  7751,  7755,  7756,  7760,  7765,  7770,  7772,
    7774,  7775,  7778,  7779,  7792,  7800,  7807,  7808,  7809,  7810,
    7811,  7812,  7827,  7828,  7829,  7830,  7831,  7843,  7848,  7853,
    7857,  7862,  7866,  7869,  7871,  7875,  7881,  7883,  7885,  7886,
    7888,  7890,  7891,  7894,  7895,  7896,  7900,  7901,  7904,  7910
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     655,     0,    -1,   151,    -1,    -1,   658,   656,   650,   657,
      -1,   658,   151,    -1,    -1,   151,    -1,   659,    -1,  1549,
      -1,  1042,    -1,  1110,    -1,  1112,    -1,   724,    -1,   671,
      -1,  1113,    -1,  1102,    -1,  1555,    -1,   692,    -1,   660,
      -1,  1362,    -1,  1394,    -1,  1307,    -1,  1309,    -1,   664,
      -1,  1401,    -1,   759,    -1,  1522,    -1,  1512,    -1,   669,
      -1,  1324,    -1,  1624,    -1,  1421,    -1,  1424,    -1,  1504,
      -1,  1118,    -1,  1126,    -1,   878,    -1,  1133,    -1,   662,
      -1,  1417,    -1,  1558,    -1,  1121,    -1,  1105,    -1,  1327,
      -1,  1411,    -1,   758,    -1,  1519,    -1,  1556,    -1,  1557,
      -1,  1145,    -1,  1476,    -1,   751,    -1,  1380,    -1,  1086,
      -1,  1088,    -1,  1373,    -1,  1625,    -1,  1510,    -1,  1353,
      -1,  1423,    -1,  1616,    -1,   661,   403,  1470,    -1,   116,
      -1,   139,    -1,   403,  1470,   191,   663,    -1,  1467,    -1,
     651,  1472,    -1,    -1,   165,  1470,   665,   666,    -1,    -1,
     602,   667,    -1,   667,   646,   668,    -1,   668,    -1,   651,
    1472,    -1,    -1,   210,   670,  1472,    -1,    -1,    56,   304,
     570,   672,   687,    -1,    -1,    56,   445,   179,   673,   674,
      -1,   675,    -1,   674,   646,   675,    -1,   446,   155,   676,
      -1,   447,   155,   676,    -1,   448,   155,   681,    -1,   449,
     155,   681,    -1,   450,   155,   684,    -1,   451,   155,   684,
      -1,   452,   155,   679,    -1,   644,   645,    -1,   644,   677,
     645,    -1,   678,    -1,   677,   646,   678,    -1,  1470,    -1,
     644,   645,    -1,   644,   680,   645,    -1,   644,   678,   646,
     678,   645,    -1,   680,   646,   644,   678,   646,   678,   645,
      -1,   644,   645,    -1,   644,   682,   645,    -1,   683,    -1,
     682,   646,   683,    -1,  1470,   652,  1470,    -1,   644,   645,
      -1,   644,   685,   645,    -1,   686,    -1,   685,   646,   686,
      -1,  1466,    -1,   688,    -1,   687,   646,   688,    -1,   288,
     155,  1466,    -1,   285,   155,  1466,    -1,   305,   155,  1466,
      -1,   291,   155,  1466,    -1,   292,   155,  1287,    -1,   286,
     155,  1287,    -1,   293,   155,  1287,    -1,   287,   155,  1287,
      -1,   302,   155,  1287,    -1,   296,   155,  1466,    -1,   295,
     155,  1466,    -1,   297,   155,  1466,    -1,   298,   155,  1466,
      -1,   301,   155,  1466,    -1,   303,   155,  1287,    -1,   299,
     155,  1466,    -1,   300,   155,  1466,    -1,   306,   155,  1453,
      -1,   224,   155,   644,   689,   645,    -1,   284,   155,  1287,
      -1,   691,    -1,    -1,   690,    -1,   689,   646,   690,    -1,
    1287,    -1,   289,   155,  1466,    -1,   290,   155,  1289,    -1,
     433,   155,  1466,    -1,   434,   155,  1287,    -1,    -1,    94,
     930,   553,   933,  1462,   693,   867,    -1,    -1,    -1,    94,
    1020,   227,  1470,  1024,   368,  1462,   694,   644,  1037,   645,
    1025,   695,  1078,    -1,    -1,    -1,    94,  1021,   227,  1470,
    1023,   368,  1462,   696,   644,  1037,   645,  1026,   697,  1078,
      -1,    -1,    -1,    94,  1022,   227,  1470,  1023,   368,  1462,
     698,   644,  1037,   645,  1027,   699,  1078,    -1,    -1,    94,
     103,   933,  1470,   700,   927,    -1,    -1,    94,   701,  1577,
      -1,    94,   599,   717,  1539,    -1,    94,   275,   204,   831,
      -1,    94,   551,   828,    -1,    94,   486,  1472,   187,   106,
     626,  1472,   373,   644,   702,   645,    -1,   703,    -1,   702,
     646,   703,    -1,   599,  1467,    -1,   213,  1467,    -1,   103,
    1467,    -1,   383,  1467,    -1,   392,  1467,    -1,   502,  1467,
      -1,   399,  1287,    -1,    -1,   162,   933,   718,   705,   368,
     475,   706,   711,   708,   713,   138,   714,    -1,    -1,   163,
    1168,  1257,   707,   709,   710,    -1,    23,  1168,    -1,    -1,
     147,    -1,   132,   368,   498,    -1,   132,    -1,    -1,   525,
    1168,    -1,    -1,   150,  1168,    -1,    -1,   712,    -1,   368,
      78,   404,    -1,   368,    78,   356,   404,    -1,    -1,    74,
    1467,    -1,    -1,   715,   716,    -1,   776,    -1,   778,    -1,
     774,    -1,   795,    -1,   813,    -1,   815,    -1,   810,    -1,
     780,    -1,   782,    -1,   783,    -1,   784,    -1,   785,    -1,
     787,    -1,    -1,  1470,   652,  1470,    -1,  1470,    -1,    -1,
     719,   721,    -1,    -1,   720,   722,    -1,    74,  1467,    -1,
     254,   520,    -1,   358,   520,    -1,    88,   520,    -1,   419,
     520,   106,    -1,   332,   520,   106,    -1,   723,    -1,   721,
      -1,   129,    -1,  1174,   129,    -1,   520,   479,   122,    -1,
     520,   479,   239,    -1,    -1,    49,   718,   725,   726,    -1,
      -1,   644,   727,   645,    -1,    -1,   728,    -1,   728,   646,
    1168,    -1,  1168,    -1,    -1,   730,    -1,   730,   646,   732,
      -1,   732,    -1,    -1,  1470,   731,   980,    -1,    -1,   734,
      -1,   734,   646,   735,    -1,   735,    -1,   736,   731,  1470,
     980,    -1,    -1,   240,    -1,   382,    -1,   231,    -1,    -1,
     737,   773,   650,    -1,   773,   650,    -1,   738,   773,   650,
      -1,    -1,   739,   740,   650,    -1,    -1,   119,   770,   741,
     980,   771,    -1,   119,  1470,    81,   188,   747,    -1,    -1,
     119,   744,   207,   188,   742,   745,   773,    -1,    -1,   119,
    1470,   100,   188,   743,  1145,    -1,   167,    -1,    90,    -1,
     746,    -1,   745,   646,   746,    -1,   750,    -1,  1287,    -1,
     748,    -1,   509,   749,  1468,    -1,    -1,   607,    -1,   747,
      -1,  1470,    -1,   510,    -1,  1174,   190,    -1,   508,    -1,
     495,   752,   754,    -1,  1470,    -1,   748,    -1,    -1,   752,
      -1,    -1,   488,   755,    -1,   757,   155,   756,    -1,   755,
     646,   757,   155,   756,    -1,  1452,    -1,  1195,    -1,  1458,
      -1,    63,    -1,   538,    -1,    85,    -1,    87,    -1,    86,
      -1,    54,    -1,   476,    -1,   555,    -1,    73,    -1,   101,
      -1,   323,    -1,   340,    -1,   455,   753,   754,    -1,   200,
     760,   130,   761,    -1,    -1,    98,    -1,   523,    -1,   762,
      -1,    81,   766,   767,    -1,   763,    -1,   762,   646,   763,
      -1,   764,   155,   765,    -1,  1470,    -1,   651,  1472,    -1,
     363,    -1,   472,    -1,   756,    -1,   768,    -1,   767,   646,
     768,    -1,   764,   155,   769,    -1,    63,    -1,   538,    -1,
      85,    -1,    87,    -1,    86,    -1,    54,    -1,   476,    -1,
     555,    -1,    73,    -1,   101,    -1,   323,    -1,   340,    -1,
     460,    -1,  1470,    -1,   770,   646,  1470,    -1,    -1,    -1,
     120,   772,  1168,    -1,   776,    -1,   778,    -1,   774,    -1,
     795,    -1,   813,    -1,   815,    -1,   810,    -1,   780,    -1,
     782,    -1,   783,    -1,   784,    -1,   785,    -1,   787,    -1,
      -1,   222,   775,   790,   149,   222,    -1,    -1,   777,   659,
      -1,    -1,   462,   779,  1168,    -1,    -1,   781,   819,    -1,
     259,  1471,    -1,   248,  1471,    -1,   371,  1470,    -1,    -1,
     177,   788,  1470,   237,   786,   789,    -1,    65,  1470,    -1,
      -1,   352,   191,    -1,   191,    -1,  1470,    -1,   789,   646,
    1470,    -1,    -1,    -1,    -1,   791,  1168,   792,   562,   738,
     793,   794,    -1,    -1,   146,   790,    -1,   145,   738,    -1,
     796,    -1,   799,    -1,    -1,    -1,    52,   797,  1168,   798,
     801,   809,   149,    52,    -1,    -1,    52,   800,   802,   809,
     149,    52,    -1,   803,    -1,   801,   803,    -1,   806,    -1,
     802,   806,    -1,    -1,    -1,   619,   804,  1168,   805,   562,
     738,    -1,    -1,    -1,   619,   807,  1168,   808,   562,   738,
      -1,    -1,   145,   738,    -1,    -1,  1471,   653,   811,   819,
     812,    -1,    -1,  1471,    -1,    -1,  1471,   653,   814,   817,
     812,    -1,    -1,   816,   817,    -1,    -1,    30,   818,   739,
     737,   149,    -1,   281,   738,   149,   281,    -1,    -1,    -1,
     621,   820,  1168,   821,   138,   738,   149,   621,    -1,    -1,
      -1,   443,   738,   595,   822,  1168,   823,   149,   443,    -1,
      29,    -1,     8,    -1,   233,    -1,   596,    -1,   125,    -1,
     853,   855,    -1,   853,    56,   850,   834,    -1,   853,     6,
     850,   829,   838,    -1,    -1,   601,   275,   204,  1470,    -1,
     853,     6,   850,   841,    -1,   853,   139,   850,   841,    -1,
     854,   833,   844,    -1,   854,   833,   847,    -1,     6,   851,
      -1,     6,   852,    -1,    -1,   835,   836,    -1,   837,    -1,
     836,   837,    -1,   836,   646,   837,    -1,   856,    -1,   857,
      -1,   858,    -1,    -1,   839,    -1,   840,    -1,   839,   840,
      -1,   839,   646,   840,    -1,   856,    -1,   857,    -1,   858,
      -1,   859,    -1,   862,    -1,   864,    -1,   865,    -1,   863,
      -1,    -1,   842,    -1,   843,    -1,   842,   843,    -1,   842,
     646,   843,    -1,   856,    -1,   857,    -1,   858,    -1,   864,
      -1,   865,    -1,    -1,   845,    -1,   846,    -1,   845,   846,
      -1,   845,   646,   846,    -1,   856,    -1,   860,    -1,   861,
      -1,   862,    -1,   864,    -1,   865,    -1,   863,    -1,    -1,
     848,    -1,   849,    -1,   848,   849,    -1,   848,   646,   849,
      -1,   856,    -1,   864,    -1,   865,    -1,   105,  1467,    -1,
     585,  1467,    -1,   426,  1467,    -1,  1470,    -1,  1470,    -1,
     420,    -1,   422,    -1,   356,     4,    -1,   229,  1344,   866,
      -1,    24,  1344,   866,    -1,   312,  1344,   866,    -1,   172,
    1344,   866,    -1,   586,  1344,   866,    -1,   427,  1344,   866,
      -1,   353,  1344,  1288,    -1,    74,  1344,  1467,    -1,  1387,
     153,  1344,   941,    -1,   615,    -1,   359,    -1,  1290,    -1,
    1465,    -1,   644,   868,    -1,   934,   873,   870,    -1,   264,
    1462,    -1,   644,   264,  1462,   645,    -1,   946,   645,   934,
     873,   870,    -1,    -1,   873,   923,   645,   869,  1562,    -1,
      -1,    -1,  1432,   926,   923,   871,  1559,    -1,    -1,  1432,
     926,   644,   923,   645,   872,  1562,    -1,   874,    -1,    -1,
     875,    -1,    -1,   389,   877,   876,   880,    -1,    -1,    -1,
     389,   879,   880,    -1,    46,   881,   891,   892,   899,    -1,
     883,   252,   884,   644,   885,   645,    -1,    -1,   883,   208,
     882,   889,    -1,   418,   889,    -1,   418,   888,    -1,   269,
     889,    -1,   269,   888,    -1,    -1,   266,    -1,    -1,    11,
     155,  1288,    -1,    -1,   886,    -1,   887,    -1,   886,   646,
     887,    -1,  1470,    -1,    70,   644,   885,   645,    -1,   644,
     897,   645,    -1,   644,   897,   645,    -1,    -1,   390,  1288,
      -1,    -1,    -1,   542,    46,   883,   208,   890,   893,   898,
      -1,    -1,   542,    46,   883,   252,   884,   644,   895,   645,
     894,   898,    -1,   896,    -1,   895,   646,   896,    -1,  1470,
      -1,  1171,    -1,    -1,   541,  1288,    -1,    -1,   644,   900,
     645,    -1,   901,    -1,   900,   646,   901,    -1,    -1,   389,
     902,   903,   904,   920,   915,    -1,  1470,    -1,    -1,    -1,
     606,   261,   561,   905,   907,    -1,    -1,   606,   240,   906,
     908,    -1,   316,    -1,   910,    -1,   910,    -1,   644,   909,
     645,    -1,   910,    -1,   909,   646,   910,    -1,    -1,    -1,
     644,   911,   913,   912,   645,    -1,   914,    -1,   913,   646,
     914,    -1,   316,    -1,  1171,    -1,    -1,   644,   916,   645,
      -1,   917,    -1,   916,   646,   917,    -1,    -1,   542,   918,
     919,   920,    -1,  1472,    -1,    -1,   921,    -1,   921,   922,
      -1,   922,    -1,   551,  1344,  1472,    -1,  1387,   153,  1344,
     941,    -1,   353,  1344,  1288,    -1,   311,  1344,  1290,    -1,
     329,  1344,  1290,    -1,   106,   131,  1344,  1467,    -1,   227,
     131,  1344,  1467,    -1,    74,  1344,  1467,    -1,    -1,    -1,
     480,   924,  1160,  1164,   925,  1156,    -1,    -1,    19,    -1,
      -1,   928,    -1,   929,    -1,   928,   929,    -1,   940,    -1,
     939,    -1,    -1,   931,    -1,   932,    -1,   932,   931,    -1,
     556,    -1,    -1,   222,  1174,   166,    -1,    -1,   936,    -1,
     937,    -1,   937,   935,    -1,   937,    -1,   937,   936,    -1,
     937,   646,   936,    -1,   153,  1344,   941,    -1,   311,  1344,
    1289,    -1,   329,  1344,  1289,    -1,    26,  1344,  1287,    -1,
     392,  1344,  1467,    -1,    74,  1344,  1467,    -1,    25,  1344,
    1289,    -1,   384,  1344,  1287,    -1,   384,  1344,   120,    -1,
     527,  1344,  1287,    -1,   527,  1344,   120,    -1,   528,  1344,
    1287,    -1,   528,  1344,   120,    -1,   529,  1344,  1287,    -1,
     529,  1344,   120,    -1,    60,  1344,  1287,    -1,   554,  1344,
    1287,    -1,   124,  1344,  1287,    -1,   470,  1344,   943,    -1,
      -1,   590,  1344,   938,   644,  1410,   645,    -1,   939,    -1,
     940,    -1,   234,  1344,   944,    -1,   106,   131,  1344,  1467,
      -1,   227,   131,  1344,  1467,    -1,   551,  1470,    -1,   535,
     134,    -1,   535,   321,    -1,    82,  1344,  1467,    -1,   251,
    1344,  1287,    -1,   992,   983,  1344,   985,    -1,   992,    68,
    1344,   991,    -1,  1472,    -1,  1472,    -1,   120,    -1,   181,
      -1,   143,    -1,    79,    -1,   428,    -1,    77,    -1,   358,
      -1,   180,    -1,   255,    -1,   537,    -1,   423,    -1,   118,
      -1,   238,    -1,   947,    -1,   948,    -1,   947,   646,   948,
      -1,   949,    -1,   950,    -1,   955,   951,    -1,   955,  1009,
      -1,  1015,  1039,  1024,   644,  1037,   645,  1025,    -1,  1021,
    1018,  1039,  1023,   644,  1037,   645,  1026,    -1,  1022,  1018,
    1039,  1023,   644,  1037,   645,  1027,    -1,   953,  1016,  1039,
    1024,   644,  1037,   645,  1025,    -1,   953,   187,   252,  1039,
     644,  1037,   645,  1009,    -1,   953,   952,    -1,    -1,   952,
      -1,    61,   644,  1168,   645,    -1,    -1,   954,    -1,    84,
    1039,    -1,    -1,  1461,   956,   957,   977,    -1,   965,   975,
     971,    -1,   966,   976,   971,    -1,   183,   967,   971,    -1,
      38,    -1,    38,   974,    -1,    43,    -1,    42,    -1,   961,
     974,   995,    -1,   961,   995,    -1,   962,   974,   996,    -1,
     962,   996,    -1,    33,   974,    -1,    33,    -1,   963,   974,
     995,    -1,   964,   974,   996,    -1,   608,   974,    -1,   633,
     975,   971,    -1,   110,    -1,   566,   969,    -1,   563,   969,
      -1,   107,   969,    -1,   567,    -1,    40,   975,    -1,   960,
      -1,   317,    -1,   277,    -1,   280,   608,    -1,   280,   963,
     995,    -1,   569,   995,    -1,   560,   975,   995,    -1,   319,
     995,    -1,   278,   995,    -1,   118,   967,   971,    -1,   364,
     967,   971,    -1,   181,   967,   971,    -1,    -1,   154,   958,
     644,  1041,   645,   995,    -1,    -1,   488,   959,   644,  1041,
     645,   995,    -1,   280,   995,    -1,   484,    -1,   198,    -1,
     197,    -1,   397,    -1,   337,    -1,   268,    -1,   336,    -1,
     398,    -1,   338,    -1,    59,    -1,   346,    -1,   343,    59,
      -1,   961,   612,    -1,   609,    -1,   343,   609,    -1,   365,
      -1,   346,   609,    -1,   343,    59,   612,    -1,   346,   612,
      -1,   238,    -1,   568,    -1,   500,    -1,   318,    -1,    32,
      -1,   423,    -1,   137,    -1,   137,   402,    -1,    -1,   974,
      -1,   968,    -1,   644,   362,   646,   362,   645,    -1,    -1,
     644,   362,   645,    -1,    -1,   644,   645,    -1,   644,   362,
     645,    -1,    -1,   972,    -1,   972,   973,    -1,   973,    -1,
     496,    -1,   594,    -1,   634,    -1,   644,   279,   645,    -1,
     644,   581,   645,    -1,   644,   117,   645,    -1,   644,   362,
     645,    -1,    -1,   974,    -1,    -1,   968,    -1,    -1,   978,
      -1,   978,   979,    -1,   979,    -1,   361,    -1,  1174,   361,
      -1,   120,   982,    -1,   368,   596,   981,    -1,    25,    -1,
     484,   120,   607,    -1,  1008,   252,    -1,   591,    -1,   591,
     252,    -1,    74,  1467,    -1,    68,   989,    -1,    72,   120,
      -1,    72,   181,    -1,    72,   143,    -1,   535,   120,    -1,
     535,   134,    -1,   535,   321,    -1,   957,   990,    -1,   357,
     970,    -1,   981,    -1,  1451,    -1,    59,   488,    -1,    58,
      -1,  1472,    -1,    33,    -1,   984,    -1,   120,    -1,    -1,
     983,   985,    -1,  1472,    -1,    33,    -1,   987,    -1,   120,
      -1,  1472,    -1,    -1,    68,   991,    -1,   989,    -1,   120,
      -1,    -1,   120,    -1,    21,    -1,    33,    21,    -1,    21,
      33,    -1,   588,    -1,   588,    33,    -1,    33,   588,    -1,
      -1,   993,    -1,   994,    -1,    47,    -1,   983,   984,   996,
      -1,    33,    -1,    33,   983,   984,    -1,    -1,    33,    -1,
      -1,   644,  1288,   998,   645,    -1,    20,    -1,   126,    -1,
     463,    -1,    -1,   999,    -1,   999,  1000,    -1,  1000,    -1,
    1288,    -1,  1002,  1001,    -1,  1003,    -1,  1004,   646,  1003,
      -1,  1002,   637,  1002,    -1,  1004,    -1,  1005,    -1,    -1,
     262,  1006,    -1,    -1,   406,    -1,   429,  1462,  1010,  1012,
    1013,    -1,    -1,   644,  1011,   645,    -1,  1011,   646,  1470,
      -1,  1470,    -1,    -1,   307,   192,    -1,   307,   388,    -1,
     307,   497,    -1,    -1,   368,   596,  1014,    -1,   368,   125,
    1014,    -1,   368,   596,  1014,   368,   125,  1014,    -1,   368,
     125,  1014,   368,   596,  1014,    -1,   458,    -1,    50,    -1,
     488,   361,    -1,   358,     5,    -1,   488,   120,    -1,  1017,
      -1,   406,   252,    -1,   591,  1018,    -1,   252,    -1,   227,
      -1,    -1,  1017,    -1,   250,    -1,   227,    -1,   226,    -1,
      -1,   591,    -1,   193,    -1,   506,    -1,    -1,  1023,    -1,
    1023,  1031,    -1,    -1,  1028,    -1,    -1,  1030,    -1,    -1,
    1029,    -1,  1033,    -1,  1028,  1033,    -1,  1034,    -1,  1029,
    1034,    -1,  1035,    -1,  1030,  1035,    -1,   602,  1036,    -1,
     579,  1036,    -1,   251,  1344,  1287,    -1,    74,  1467,    -1,
    1032,    -1,  1031,    -1,  1032,    -1,  1032,    -1,   622,   387,
    1465,    -1,    45,    -1,   473,    -1,   208,    -1,  1037,   646,
    1038,  1280,    -1,  1038,  1280,    -1,  1470,    -1,  1470,   644,
     362,   645,    -1,    -1,  1461,    -1,    -1,   652,  1470,    -1,
    1449,    -1,  1041,   646,  1449,    -1,    -1,    13,   553,  1462,
    1043,  1057,    -1,    -1,    13,   103,  1056,  1044,   928,    -1,
      13,   103,  1470,   597,   106,   131,   342,    -1,    -1,    13,
     408,   718,  1045,   719,    -1,    -1,    13,   194,   718,  1046,
     719,    -1,    -1,    13,  1585,  1580,  1047,  1587,    -1,    -1,
      13,  1580,  1048,  1587,    -1,    -1,    13,  1580,   162,   718,
    1049,  1053,  1054,   708,   713,  1055,    -1,    13,   551,   830,
      -1,    13,   275,   204,   832,    -1,    13,   551,   827,    -1,
      13,   551,   826,    -1,    13,   486,  1472,   373,   644,   702,
     645,    -1,    13,   599,   717,  1050,    -1,  1051,    -1,  1050,
     646,  1051,    -1,  1473,   392,   169,  1052,    -1,    -1,   236,
    1288,   115,    -1,   350,    -1,   120,    -1,    -1,   368,   475,
     706,    -1,   712,    -1,   368,   475,   706,   712,    -1,    -1,
     439,   570,   718,    -1,    -1,   138,   714,    -1,    -1,  1470,
      -1,    -1,   133,   551,    -1,   225,   551,    -1,  1072,   874,
      -1,  1072,  1061,    -1,  1061,    -1,   875,    -1,  1063,    -1,
     139,   389,  1070,    -1,   424,   389,  1120,  1062,    -1,    -1,
     372,   389,  1120,  1062,  1058,  1120,    -1,    15,   389,  1120,
    1062,    -1,    -1,    61,   389,  1062,  1059,  1115,    -1,    -1,
     441,   389,  1120,  1062,  1060,  1107,    -1,    66,   389,  1120,
    1288,    -1,   577,   389,  1062,    -1,  1066,    -1,   164,   389,
    1071,   622,   553,  1462,   877,    -1,   133,   389,   877,  1062,
     551,    -1,   225,   389,   877,  1062,   551,    -1,   438,   391,
     877,    -1,    12,    -1,  1070,    -1,    -1,     6,   389,  1120,
    1064,  1065,    -1,    -1,   644,   900,   645,    -1,   390,  1288,
      -1,    -1,   440,   389,  1120,  1067,  1068,    -1,    -1,    -1,
    1070,  1069,   237,   644,   900,   645,    -1,  1071,    -1,  1070,
     646,  1071,    -1,  1470,    -1,  1074,    -1,  1072,   646,  1074,
      -1,     6,  1081,    -1,  1073,   949,  1084,    -1,     6,   950,
      -1,  1073,   644,   946,   645,    -1,    -1,    56,  1081,  1461,
    1075,   955,  1084,    -1,    -1,    -1,   333,  1081,  1461,  1076,
     957,   977,  1077,  1084,    -1,   139,  1081,  1461,  1083,    -1,
     139,   187,   252,  1461,    -1,   139,   406,   252,    -1,   139,
    1017,  1461,    -1,   132,   250,    -1,   147,   250,    -1,    13,
    1081,  1461,   488,   120,  1451,    -1,    13,  1081,  1461,   139,
     120,    -1,   439,  1085,  1462,    -1,   439,  1017,  1461,   570,
    1461,    -1,    91,   570,   983,   985,   990,    -1,   935,    -1,
     186,    -1,  1273,    -1,  1079,    -1,  1080,    -1,    -1,  1080,
      -1,  1079,    -1,  1080,  1079,    -1,  1079,  1080,    -1,    11,
    1344,   120,    -1,    11,  1344,  1470,    -1,   274,  1344,   120,
      -1,   274,  1344,  1470,    -1,    -1,    71,    -1,    -1,   223,
      -1,    -1,   458,    -1,    50,    -1,    -1,     8,  1470,    -1,
     180,    -1,    -1,   570,    -1,   155,    -1,    19,    -1,    -1,
     526,   498,  1097,  1087,  1100,  1092,    -1,   534,   498,  1097,
      -1,   526,   572,  1089,    -1,    -1,  1090,    -1,  1091,    -1,
    1090,   646,  1091,    -1,   622,    83,   501,    -1,   421,   370,
      -1,   421,   627,    -1,  1093,  1094,  1095,  1096,    -1,    -1,
     599,   155,  1467,    -1,    -1,   392,   155,  1467,    -1,    -1,
     121,   155,  1467,    -1,    -1,   394,   155,  1467,    -1,    -1,
    1098,    -1,  1099,    -1,  1098,   646,  1099,    -1,   521,    -1,
     435,    -1,    -1,   595,  1101,    -1,   691,    -1,  1101,   646,
     691,    -1,   513,   155,  1467,    -1,   511,   155,  1467,    -1,
     512,    -1,    -1,    60,  1506,  1103,  1314,  1104,    -1,    -1,
     417,    -1,   171,    -1,    -1,   441,  1120,  1506,  1106,  1314,
    1107,    -1,    -1,  1108,    -1,  1109,    -1,  1109,  1108,    -1,
     417,    -1,   171,    -1,   600,    -1,    -1,    15,  1120,  1506,
    1111,  1314,    -1,    34,  1467,    -1,    -1,    61,  1506,  1114,
    1314,  1115,    -1,    -1,  1116,    -1,  1117,    -1,  1117,  1116,
      -1,   417,    -1,   175,    -1,   320,    -1,   171,    -1,    57,
      -1,   188,   597,    -1,    -1,   372,  1120,  1506,  1119,  1314,
      -1,    -1,   360,    -1,   271,    -1,    -1,   439,  1506,  1122,
    1124,    -1,   439,   599,   717,  1123,    -1,  1473,   570,  1473,
      -1,  1123,   646,  1473,   570,  1473,    -1,  1125,    -1,  1124,
     646,  1125,    -1,  1462,   570,  1462,    -1,    -1,    48,   227,
    1127,  1128,   240,  1132,    -1,  1129,    -1,  1131,    -1,  1130,
      -1,  1129,   646,  1130,    -1,  1462,  1141,    -1,  1462,  1139,
    1141,    -1,  1470,    -1,   120,    -1,    -1,   270,   227,   237,
      48,  1134,  1135,    -1,  1138,    -1,  1136,    -1,  1137,    -1,
    1136,   646,  1137,    -1,  1462,  1141,  1144,    -1,  1462,  1139,
    1141,  1144,    -1,    -1,   389,   877,  1140,   644,  1062,   645,
      -1,    -1,  1142,  1143,    -1,    -1,  1017,   644,  1253,   645,
      -1,    -1,   223,   258,    -1,  1146,    -1,   480,  1151,    -1,
     644,  1147,   645,  1562,    -1,    -1,  1148,   480,  1153,    -1,
     644,  1147,   645,    -1,    -1,  1150,   480,  1233,  1156,    -1,
     644,  1149,   645,    -1,    -1,  1153,  1152,  1559,    -1,  1154,
    1276,  1281,  1163,    -1,  1154,  1302,  1163,    -1,  1154,  1301,
    1157,  1263,  1268,  1265,  1276,  1281,  1293,  1301,  1163,    -1,
      -1,  1155,  1160,  1164,    -1,  1158,  1263,  1268,  1265,  1276,
    1281,  1293,  1163,    -1,   191,  1159,    -1,    -1,  1157,    -1,
    1214,    -1,   140,    -1,    -1,  1161,    -1,  1161,  1162,    -1,
    1162,    -1,  1576,    -1,   518,    -1,   516,    -1,   310,   155,
    1288,    -1,    -1,   188,   596,    -1,   274,   240,   490,   331,
      -1,  1164,   646,  1165,    -1,  1165,    -1,   639,    -1,  1456,
      -1,  1168,  1166,    -1,    -1,    19,  1470,    -1,    19,  1467,
      -1,  1470,    -1,  1467,    -1,    -1,   644,   645,    -1,  1168,
    1172,  1168,    -1,  1168,   631,  1168,    -1,  1168,  1173,  1168,
      -1,   356,  1168,    -1,  1169,   245,   576,    -1,  1169,   245,
    1174,   576,    -1,  1169,   245,   174,    -1,  1169,   245,  1174,
     174,    -1,  1169,   245,   592,    -1,  1169,   245,  1174,   592,
      -1,  1169,    -1,  1169,   245,   361,    -1,  1169,   245,  1174,
     361,    -1,  1169,   156,  1170,    -1,  1169,  1176,  1170,    -1,
    1169,  1176,  1177,   644,  1571,   645,    -1,  1170,    -1,  1171,
     240,   644,  1571,   645,    -1,  1171,  1174,   240,   644,  1571,
     645,    -1,  1171,   240,   644,  1168,   645,    -1,  1171,   240,
     644,  1168,   646,  1207,   645,    -1,  1171,  1174,   240,   644,
    1168,   645,    -1,  1171,  1174,   240,   644,  1168,   646,  1207,
     645,    -1,  1171,    31,  1171,    17,  1170,    -1,  1171,  1174,
      31,  1171,    17,  1170,    -1,  1171,   504,   264,  1171,    -1,
    1171,   264,  1178,  1267,    -1,  1171,  1174,   264,  1178,  1267,
      -1,  1171,   430,  1171,    -1,  1171,  1174,   430,  1171,    -1,
    1171,    -1,  1171,   635,  1171,    -1,  1171,   636,  1171,    -1,
    1171,   491,  1171,    -1,  1171,   492,  1171,    -1,  1171,   638,
    1171,    -1,  1171,   637,  1171,    -1,  1171,   638,   236,  1168,
    1257,    -1,  1171,   637,   236,  1168,  1257,    -1,  1171,   639,
    1171,    -1,  1171,   640,  1171,    -1,  1171,   641,  1171,    -1,
    1171,   136,  1171,    -1,  1171,   334,  1171,    -1,  1171,   642,
    1171,    -1,  1178,    -1,   379,    -1,   376,    -1,    17,    -1,
      16,    -1,   356,    -1,   355,    -1,   647,    -1,   355,    -1,
     155,    -1,   195,    -1,   206,    -1,   256,    -1,   283,    -1,
     348,    -1,    12,    -1,    18,    -1,  1458,    -1,  1179,    -1,
    1180,    -1,  1183,    -1,  1181,    -1,  1178,    68,  1472,    -1,
    1452,    -1,  1450,    -1,  1195,    -1,  1191,    -1,  1178,   378,
    1178,    -1,   638,  1178,    -1,   637,  1178,    -1,   643,  1178,
      -1,  1175,  1178,    -1,   644,  1571,   645,    -1,   644,  1168,
     645,    -1,   644,  1168,   646,  1207,   645,    -1,   471,   644,
    1168,   646,  1207,   645,    -1,   166,   644,  1571,   645,    -1,
     648,  1470,  1168,   649,    -1,   307,  1208,     9,   644,  1171,
    1185,   645,    -1,    33,  1178,    -1,    53,   644,  1168,    19,
    1205,   645,    -1,    52,  1210,  1212,  1211,   149,    -1,    91,
     644,  1168,   646,  1205,   645,    -1,    91,   644,  1168,   602,
     984,   645,    -1,   120,   644,  1458,   645,    -1,   606,   644,
    1459,   645,    -1,   236,  1168,  1257,   638,  1168,    -1,    59,
     644,  1207,   645,    -1,    59,   644,  1207,   602,   984,   645,
      -1,    99,  1167,    -1,   110,   644,  1168,   645,    -1,   115,
     644,  1168,   645,    -1,   218,   644,  1168,   645,    -1,   233,
     644,  1168,   646,  1168,   646,  1168,   646,  1168,   645,    -1,
     236,   644,  1168,   646,  1168,   645,    -1,   236,   644,  1168,
     646,  1168,   646,  1207,   645,    -1,   260,   644,  1168,   646,
    1168,   645,    -1,   328,   644,  1168,   645,    -1,   335,   644,
    1168,   645,    -1,   465,   644,  1168,   646,  1168,   645,    -1,
     478,   644,  1168,   645,    -1,   566,   644,  1168,   645,    -1,
     563,   644,  1168,   645,    -1,   563,   644,  1168,   646,  1168,
     645,    -1,   575,   644,  1168,   645,    -1,   575,   644,   257,
    1168,   191,  1168,   645,    -1,   575,   644,   571,  1168,   191,
    1168,   645,    -1,   575,   644,    44,  1168,   191,  1168,   645,
      -1,   575,   644,   257,   191,  1168,   645,    -1,   575,   644,
     571,   191,  1168,   645,    -1,   575,   644,    44,   191,  1168,
     645,    -1,   575,   644,  1168,   191,  1168,   645,    -1,   599,
     644,   645,    -1,   633,   644,  1168,   645,    -1,     7,   644,
    1168,   646,  1168,   645,    -1,     7,   644,  1168,   646,   236,
    1168,  1257,   645,    -1,    97,  1167,    -1,   102,   970,    -1,
     108,   644,  1168,   646,   236,  1168,  1257,   645,    -1,   109,
     644,  1168,   646,   236,  1168,  1257,   645,    -1,   173,   644,
    1257,   191,  1168,   645,    -1,   199,   644,  1259,   646,  1168,
     645,    -1,   981,    -1,   400,   644,  1171,   240,  1168,   645,
      -1,   539,   644,  1168,   646,  1168,   645,    -1,   539,   644,
    1168,   646,   236,  1168,  1257,   645,    -1,   543,   644,  1168,
     646,  1168,   646,  1168,   645,    -1,   543,   644,  1168,   646,
    1168,   645,    -1,   543,   644,  1168,   191,  1168,   188,  1168,
     645,    -1,   543,   644,  1168,   191,  1168,   645,    -1,   549,
     970,    -1,   564,   644,  1258,   646,  1168,   646,  1168,   645,
      -1,   565,   644,  1258,   646,  1168,   646,  1168,   645,    -1,
     603,  1167,    -1,   605,   970,    -1,   604,   970,    -1,    21,
     644,  1168,   645,    -1,    58,   644,  1168,   645,    -1,    66,
     644,  1207,   645,    -1,    69,   644,  1168,   645,    -1,   103,
     644,   645,    -1,   222,   644,  1168,   646,  1168,   646,  1168,
     645,    -1,   189,   644,  1168,   646,  1168,   645,    -1,   189,
     644,  1168,   646,  1168,   646,  1168,   645,    -1,   324,   644,
    1168,   645,    -1,   334,   644,  1168,   646,  1168,   645,    -1,
     367,   644,  1168,   645,    -1,   392,   644,  1168,   645,    -1,
     415,   644,  1168,   645,    -1,   443,   644,  1168,   646,  1168,
     645,    -1,   444,   644,  1168,   646,  1168,   646,  1168,   645,
      -1,   463,   644,  1168,   645,    -1,   472,   644,   645,    -1,
     577,   644,  1168,   646,  1168,   645,    -1,   617,   644,  1168,
     645,    -1,   617,   644,  1168,   646,  1168,   645,    -1,   618,
     644,  1168,  1007,   645,    -1,   618,   644,  1168,    19,    59,
     997,  1007,   645,    -1,   618,   644,  1168,    19,    33,   997,
     645,    -1,   618,   644,  1168,   646,  1287,   646,  1287,   646,
    1287,   645,    -1,  1182,    -1,    88,   644,  1168,   646,  1168,
     645,    -1,   197,   644,  1207,   645,    -1,   268,   644,  1207,
     645,    -1,   336,   644,  1207,   645,    -1,   337,   644,  1207,
     645,    -1,   338,   644,  1207,   645,    -1,   397,   644,  1168,
     646,  1168,   645,    -1,   398,   644,  1207,   645,    -1,    -1,
    1465,   644,  1184,  1188,   645,    -1,  1470,   652,  1470,   644,
    1206,   645,    -1,  1186,  1187,    -1,   240,    42,   331,    -1,
      -1,   240,   344,   254,   331,    -1,    -1,   622,   416,   168,
      -1,    -1,  1189,    -1,  1190,    -1,  1189,   646,  1190,    -1,
    1168,  1166,    -1,    27,   644,  1203,   645,    -1,    27,   644,
     135,  1203,   645,    -1,    36,   644,  1203,   645,    -1,    37,
     644,  1203,   645,    -1,    39,   644,  1203,   645,    -1,    92,
     644,  1262,   639,   645,    -1,    92,   644,  1203,   645,    -1,
      -1,    -1,    92,   644,   135,  1192,  1207,  1193,   645,    -1,
     330,   644,  1203,   645,    -1,   330,   644,   135,  1203,   645,
      -1,   313,   644,  1203,   645,    -1,   313,   644,   135,  1203,
     645,    -1,   533,   644,  1203,   645,    -1,   611,   644,  1203,
     645,    -1,   532,   644,  1203,   645,    -1,   613,   644,  1203,
     645,    -1,   544,   644,  1203,   645,    -1,   544,   644,   135,
    1203,   645,    -1,    -1,   205,   644,  1198,  1194,  1207,  1200,
    1199,   645,    -1,    -1,   651,  1196,  1197,    -1,  1472,   489,
    1168,    -1,  1472,    -1,   651,  1492,  1472,  1040,    -1,    -1,
     135,    -1,    -1,   482,  1449,    -1,    -1,    -1,   377,    46,
    1201,  1202,    -1,  1202,   646,  1457,  1280,    -1,  1457,  1280,
      -1,    -1,  1262,  1204,  1168,    -1,    33,   975,    -1,    59,
     975,   995,    -1,   346,   975,    -1,   496,    -1,   496,   238,
      -1,   594,    -1,   594,   238,    -1,   110,    -1,   566,   969,
      -1,   107,   969,    -1,   118,   967,    -1,    -1,  1207,    -1,
    1168,    -1,  1207,   646,  1168,    -1,  1209,    -1,   644,  1209,
     645,    -1,  1458,    -1,  1209,   646,  1458,    -1,    -1,  1168,
      -1,    -1,   145,  1168,    -1,   619,  1168,   562,  1168,    -1,
    1212,   619,  1168,   562,  1168,    -1,  1228,    -1,  1217,    -1,
    1216,    -1,  1213,    -1,   648,  1470,  1213,   649,    -1,  1215,
      -1,  1216,   646,  1215,    -1,  1213,  1225,  1213,    -1,  1213,
     536,  1228,    -1,    -1,  1213,  1225,  1213,   368,  1218,  1168,
      -1,    -1,  1213,   536,  1228,   368,  1219,  1168,    -1,    -1,
    1213,  1225,  1213,   602,  1220,   644,  1256,   645,    -1,  1213,
     344,   249,  1228,    -1,    -1,  1213,   260,  1242,   249,  1213,
     368,  1221,  1168,    -1,    -1,  1213,   260,  1242,   249,  1228,
    1222,   602,   644,  1256,   645,    -1,  1213,   344,   260,  1242,
     249,  1228,    -1,    -1,  1213,   465,  1242,   249,  1213,   368,
    1223,  1168,    -1,    -1,  1213,   465,  1242,   249,  1228,  1224,
     602,   644,  1256,   645,    -1,  1213,   344,   465,  1242,   249,
    1228,    -1,   249,    -1,   230,   249,    -1,    95,   249,    -1,
      -1,  1227,    -1,   389,   644,  1256,   645,   877,    -1,    -1,
    1229,  1462,  1226,  1261,  1251,    -1,  1241,  1240,  1237,    -1,
     644,  1240,  1230,   645,  1261,    -1,  1235,  1563,    -1,    -1,
    1230,   590,  1567,  1231,  1568,    -1,  1233,    -1,    -1,  1234,
    1574,  1164,    -1,    -1,  1240,  1236,  1216,    -1,    -1,    -1,
    1238,  1160,  1164,  1239,  1156,    -1,    -1,   480,    -1,    -1,
     380,    -1,    -1,   188,   249,    -1,   188,   377,    46,    -1,
     188,   204,    46,    -1,   186,    -1,   223,    -1,    -1,  1244,
    1017,  1243,  1246,   644,  1255,   645,    -1,    -1,   601,  1017,
    1243,  1247,   644,  1253,   645,    -1,  1245,    -1,  1248,  1245,
      -1,    -1,    -1,  1250,  1248,    -1,    -1,  1252,  1249,    -1,
      -1,  1255,    -1,  1470,    -1,   406,    -1,  1254,    -1,  1255,
     646,  1254,    -1,  1470,    -1,  1256,   646,  1470,    -1,  1258,
      -1,   111,    -1,   112,    -1,   113,    -1,   114,    -1,   215,
      -1,   216,    -1,   217,    -1,   326,    -1,   327,    -1,   477,
      -1,   632,    -1,   115,    -1,   617,    -1,   218,    -1,   328,
      -1,   335,    -1,   415,    -1,   478,    -1,   324,    -1,   633,
      -1,   110,    -1,   566,    -1,   563,    -1,   107,    -1,    -1,
      19,    -1,   155,    -1,    -1,  1260,  1470,    -1,    -1,    12,
      -1,    -1,    -1,   620,  1264,  1168,    -1,    -1,    -1,   209,
    1266,  1168,    -1,   160,  1178,    -1,    -1,    -1,    -1,    -1,
     204,    46,  1269,  1271,  1270,  1272,    -1,  1271,   646,  1457,
    1280,    -1,  1457,  1280,    -1,    -1,   623,    -1,   624,    -1,
     377,    46,  1274,    -1,  1274,   646,  1275,    -1,  1275,    -1,
    1459,  1280,    -1,    -1,  1277,    -1,    -1,   377,    46,  1278,
    1279,    -1,  1279,   646,  1457,  1280,    -1,  1457,  1280,    -1,
      -1,    20,    -1,   126,    -1,    -1,  1282,    -1,    -1,   265,
    1283,  1284,    -1,  1285,    -1,  1285,   646,  1285,    -1,  1285,
     366,  1285,    -1,  1470,    -1,  1450,    -1,   581,    -1,   279,
      -1,   362,    -1,    -1,   265,  1285,    -1,   362,    -1,   211,
      -1,   279,    -1,   581,    -1,   117,    -1,   182,    -1,   362,
      -1,   211,    -1,   279,    -1,   581,    -1,  1291,    -1,   362,
      -1,   581,    -1,   279,    -1,   117,    -1,   182,    -1,   362,
      -1,   581,    -1,   279,    -1,  1291,    -1,  1292,    -1,   117,
      -1,   182,    -1,    -1,    -1,   408,    14,  1294,   644,  1295,
     645,    -1,    -1,  1296,    -1,  1296,   646,  1296,    -1,   362,
      -1,    -1,  1298,  1299,    -1,  1299,   646,  1300,    -1,  1300,
      -1,   651,  1472,    -1,  1472,    -1,    -1,  1302,    -1,    -1,
     237,  1303,  1304,    -1,    -1,    -1,   381,  1469,  1305,   986,
    1306,  1433,  1436,    -1,   141,  1469,    -1,  1297,    -1,    -1,
     138,  1308,  1207,    -1,    -1,   139,  1320,  1506,  1319,  1310,
    1314,  1083,    -1,    -1,    -1,   139,   227,  1470,   368,  1462,
    1311,  1312,  1078,    -1,   139,   103,  1319,  1470,    -1,   139,
     194,  1319,  1470,   652,  1470,    -1,   139,   194,  1319,  1470,
      -1,   139,   408,  1319,   718,    -1,   139,   599,   717,  1538,
      -1,    -1,   139,   614,  1319,  1313,  1314,  1083,    -1,   139,
     162,  1319,   718,    -1,   139,   574,  1319,   718,    -1,   139,
     551,   853,  1321,    -1,   139,   275,   204,   854,  1321,    -1,
     139,   486,  1319,  1472,    -1,  1315,    -1,  1314,   646,  1315,
      -1,  1462,    -1,  1462,  1226,    -1,  1318,    -1,  1317,   646,
    1318,    -1,  1463,    -1,    -1,   222,   166,    -1,    -1,   556,
      -1,    -1,  1322,    -1,  1323,    -1,  1322,  1323,    -1,  1321,
     646,  1323,    -1,   864,    -1,   865,    -1,    -1,    -1,   233,
    1325,  1330,  1082,  1332,  1326,  1334,  1350,    -1,    -1,    -1,
     444,  1328,  1331,  1332,  1329,  1334,    -1,    -1,   282,    -1,
     123,    -1,   212,    -1,  1361,    -1,   123,    -1,   237,  1333,
      -1,  1333,    -1,  1316,    -1,  1337,    -1,   644,   645,  1337,
      -1,   644,  1336,   645,  1337,    -1,    -1,   488,  1335,  1341,
      -1,  1336,   646,  1455,    -1,  1455,    -1,   606,  1340,    -1,
     607,  1340,    -1,    -1,   923,  1338,  1559,    -1,    -1,   644,
     923,   645,  1339,  1562,    -1,  1340,   646,  1345,    -1,  1345,
      -1,  1341,   646,  1342,    -1,  1342,    -1,  1459,  1343,  1349,
      -1,   155,    -1,   489,    -1,    -1,  1343,    -1,    -1,   644,
    1346,  1347,   645,    -1,    -1,  1348,    -1,  1348,   646,  1349,
      -1,  1349,    -1,  1168,    -1,   120,    -1,    -1,    -1,    -1,
     368,   142,  1351,   252,   596,  1352,  1359,    -1,    -1,    -1,
      -1,   596,  1354,  1361,  1082,  1214,   488,  1355,  1357,  1356,
    1263,  1276,  1286,    -1,  1357,   646,  1358,    -1,  1358,    -1,
    1459,  1343,  1349,    -1,  1359,   646,  1360,    -1,  1360,    -1,
    1459,  1343,  1349,    -1,    -1,   282,    -1,    -1,   125,  1363,
    1371,  1364,    -1,    -1,   191,  1462,  1226,  1365,  1263,  1276,
    1286,    -1,    -1,  1368,  1366,   191,  1214,  1263,    -1,    -1,
     191,  1317,  1367,   602,  1214,  1263,    -1,  1369,    -1,  1368,
     646,  1369,    -1,  1470,  1370,    -1,  1470,   652,  1470,  1370,
      -1,    -1,   652,   639,    -1,    -1,  1372,  1371,    -1,   417,
      -1,   282,    -1,   223,    -1,    -1,   577,  1375,  1374,  1315,
      -1,    -1,   553,    -1,    -1,  1377,    -1,  1378,    -1,  1377,
     646,  1378,    -1,    93,    -1,   321,    -1,    41,   243,    -1,
      89,   548,    -1,   385,   176,    -1,   244,    -1,   547,    -1,
     505,    -1,    12,    -1,    -1,   188,   416,   362,    -1,    -1,
     493,  1381,  1382,    -1,   104,  1393,    -1,  1389,   550,  1388,
    1393,    -1,  1389,   573,  1388,  1393,    -1,   161,  1388,  1393,
      -1,   553,   530,  1388,  1393,    -1,   371,   550,  1388,  1393,
      -1,   396,    -1,   153,   942,  1385,    -1,   153,    12,  1385,
      -1,  1389,    70,  1390,  1462,  1388,  1393,    -1,  1386,   276,
      -1,   498,   214,    -1,    -1,    34,   161,  1391,  1392,  1383,
    1281,    -1,    -1,   432,   161,  1391,  1392,  1384,  1281,    -1,
    1019,  1390,  1462,  1388,  1263,    -1,  1387,   152,    -1,   407,
      -1,    92,   644,   639,   645,   616,    -1,    92,   644,   639,
     645,   158,    -1,   616,  1281,    -1,   158,  1281,    -1,   412,
      -1,   411,  1376,  1379,  1281,    -1,  1491,   530,  1393,    -1,
    1389,   410,    -1,  1491,   610,  1393,    -1,   983,  1393,    -1,
      69,  1393,    -1,   203,    -1,   203,   188,  1473,    -1,    94,
     103,   933,  1470,    -1,    94,   553,  1462,    -1,    94,   614,
    1462,    -1,   304,   530,    -1,   498,   530,   531,    -1,   498,
     530,    -1,    94,   408,   718,    -1,    94,   194,   718,    -1,
      94,   574,   718,    -1,   408,   530,  1393,    -1,   194,   530,
    1393,    -1,   408,    67,   718,    -1,   194,    67,   718,    -1,
      94,   162,   718,    -1,   530,    -1,   339,    -1,   276,    -1,
     304,    -1,    33,    -1,    -1,   535,    -1,    -1,  1390,  1470,
      -1,    -1,   192,    -1,   191,    -1,   240,    -1,    -1,   240,
    1467,    -1,    -1,   191,  1289,    -1,    -1,   264,  1467,    -1,
     620,  1168,    -1,    -1,  1398,  1462,  1395,  1400,    -1,    -1,
    1398,  1399,  1396,  1397,    -1,  1145,    -1,  1324,    -1,  1327,
      -1,  1353,    -1,  1362,    -1,   188,    82,  1288,    -1,   126,
      -1,   127,    -1,    -1,   171,    -1,   390,    -1,   189,   155,
    1472,    -1,    -1,  1449,    -1,  1470,    -1,    -1,   184,  1120,
    1402,  1403,    -1,    -1,    -1,  1506,  1404,  1410,  1405,  1406,
      -1,  1408,    -1,    -1,   622,   421,   274,    -1,    -1,   188,
    1407,   170,    -1,  1408,   646,  1409,    -1,  1409,    -1,   157,
     276,    -1,   153,   276,    -1,   196,   276,    -1,   499,   276,
      -1,    33,   276,    -1,   431,   276,    -1,   416,    48,    -1,
     214,    -1,   407,    -1,   276,    -1,   530,    -1,   128,    -1,
     456,    -1,    -1,  1314,    -1,    -1,   454,  1412,  1413,    -1,
    1413,   646,  1414,    -1,  1414,    -1,    -1,   498,  1415,  1416,
      -1,   304,    -1,   416,    48,    -1,    -1,    12,    -1,    -1,
     414,  1418,  1419,    -1,  1386,   276,  1420,    -1,   570,  1467,
      -1,    29,  1168,    -1,   253,  1422,  1168,    -1,    -1,    82,
      -1,   416,    -1,   601,  1470,    -1,    -1,    -1,    -1,    -1,
     270,  1429,  1425,  1431,  1430,   228,  1469,  1426,  1432,   237,
     553,  1462,  1226,  1427,   986,  1428,  1439,  1433,  1436,  1440,
    1442,  1445,    -1,   106,    -1,   630,    -1,    -1,   271,    -1,
      -1,    80,    -1,   282,    -1,    -1,   444,    -1,   223,    -1,
      -1,    70,  1434,    -1,  1434,  1435,    -1,  1435,    -1,   558,
      46,  1449,    -1,   375,   148,    46,  1449,    -1,   148,    46,
    1449,    -1,   159,    46,  1449,    -1,    -1,   267,  1437,    -1,
    1437,  1438,    -1,  1438,    -1,   558,    46,  1449,    -1,   524,
      46,  1449,    -1,    -1,   469,   220,    46,  1449,    -1,    -1,
     223,   362,  1441,    -1,   267,    -1,   469,    -1,    -1,   644,
    1443,   645,    -1,   644,   645,    -1,  1443,   646,  1444,    -1,
    1444,    -1,  1459,    -1,   651,  1472,    -1,    -1,   488,  1446,
      -1,  1446,   646,  1447,    -1,  1447,    -1,  1459,  1343,  1349,
      -1,   559,    -1,   345,    -1,   584,   559,    -1,  1448,  1468,
      -1,  1468,    -1,   211,    -1,    35,    -1,   386,    -1,  1452,
      -1,   638,  1453,    -1,   637,  1453,    -1,  1448,    -1,  1453,
      -1,  1454,    -1,   361,    -1,   174,    -1,   576,    -1,   211,
      -1,    35,    -1,   584,   211,    -1,   584,    35,    -1,   362,
      -1,   279,    -1,   581,    -1,   117,    -1,   182,    -1,   110,
     559,    -1,   566,   559,    -1,   563,   559,    -1,  1459,    -1,
    1456,    -1,  1470,   652,   639,    -1,  1470,   652,  1470,   652,
     639,    -1,  1168,    -1,  1470,    -1,  1460,    -1,  1470,    -1,
    1460,    -1,  1470,   652,  1470,    -1,   652,  1470,   652,  1470,
      -1,  1470,   652,  1470,   652,  1470,    -1,  1470,    -1,  1470,
     652,  1470,   652,  1470,    -1,  1470,   652,  1470,    -1,   652,
    1470,    -1,  1470,    -1,  1470,   652,  1470,    -1,   652,  1470,
      -1,  1470,  1370,    -1,  1470,   652,  1470,  1370,    -1,  1470,
      -1,   219,    -1,   221,    -1,  1467,    -1,   559,    -1,   559,
      -1,   559,    -1,  1465,    -1,  1474,    -1,  1465,    -1,  1475,
      -1,  1470,    -1,  1467,    -1,   263,    -1,  1472,    -1,  1472,
     651,  1472,    -1,    99,  1167,    -1,  1475,    -1,    21,    -1,
      28,    -1,    30,    -1,    47,    -1,    48,    -1,    58,    -1,
      60,    -1,    65,    -1,    74,    -1,    76,    -1,    88,    -1,
     116,    -1,   138,    -1,   149,    -1,   165,    -1,   184,    -1,
     185,    -1,   189,    -1,   207,    -1,   210,    -1,   213,    -1,
     235,    -1,   254,    -1,   358,    -1,   371,    -1,   373,    -1,
     383,    -1,   387,    -1,   399,    -1,   401,    -1,   403,    -1,
     438,    -1,   441,    -1,   454,    -1,   457,    -1,   466,    -1,
     474,    -1,   479,    -1,   486,    -1,   496,    -1,   502,    -1,
     498,    -1,   503,    -1,   526,    -1,   534,    -1,   577,    -1,
     588,    -1,   589,    -1,   626,    -1,   629,    -1,   597,    -1,
       5,    -1,     7,    -1,     8,    -1,     9,    -1,    10,    -1,
      11,    -1,    14,    -1,    18,    -1,    23,    -1,    25,    -1,
      24,    -1,    26,    -1,    27,    -1,    34,    -1,    38,    -1,
      41,    -1,    43,    -1,    42,    -1,    45,    -1,    51,    -1,
      54,    -1,    55,    -1,    57,    -1,    62,    -1,    64,    -1,
      63,    -1,    66,    -1,    67,    -1,    69,    -1,    73,    -1,
      72,    -1,    70,    -1,    75,    -1,    77,    -1,    78,    -1,
      79,    -1,    80,    -1,    82,    -1,    83,    -1,    85,    -1,
      87,    -1,    86,    -1,    89,    -1,    93,    -1,    96,    -1,
      98,    -1,   101,    -1,   106,    -1,   105,    -1,   107,    -1,
     110,    -1,   115,    -1,   121,    -1,   122,    -1,   124,    -1,
     128,    -1,   130,    -1,   131,    -1,   132,    -1,   133,    -1,
     134,    -1,   141,    -1,   142,    -1,   143,    -1,   150,    -1,
     154,    -1,   153,    -1,   152,    -1,   157,    -1,   158,    -1,
     160,    -1,   162,    -1,   161,    -1,   163,    -1,   164,    -1,
     168,    -1,   169,    -1,   170,    -1,   171,    -1,   172,    -1,
     176,    -1,   175,    -1,   190,    -1,   147,    -1,   192,    -1,
     178,    -1,   179,    -1,   180,    -1,   181,    -1,   196,    -1,
     198,    -1,   197,    -1,   199,    -1,   203,    -1,   201,    -1,
     208,    -1,   214,    -1,   218,    -1,   220,    -1,   224,    -1,
     239,    -1,   225,    -1,   226,    -1,   229,    -1,   243,    -1,
     244,    -1,   246,    -1,   247,    -1,   234,    -1,   251,    -1,
     255,    -1,   258,    -1,   261,    -1,   262,    -1,   268,    -1,
     269,    -1,   271,    -1,   273,    -1,   275,    -1,   276,    -1,
     311,    -1,   304,    -1,   306,    -1,   288,    -1,   292,    -1,
     289,    -1,   290,    -1,   305,    -1,   291,    -1,   294,    -1,
     286,    -1,   293,    -1,   287,    -1,   302,    -1,   296,    -1,
     295,    -1,   297,    -1,   298,    -1,   299,    -1,   300,    -1,
     301,    -1,   284,    -1,   308,    -1,   309,    -1,   310,    -1,
     312,    -1,   314,    -1,   315,    -1,   320,    -1,   321,    -1,
     322,    -1,   323,    -1,   324,    -1,   325,    -1,   328,    -1,
     329,    -1,   333,    -1,   331,    -1,   335,    -1,   336,    -1,
     337,    -1,   338,    -1,   339,    -1,   340,    -1,   342,    -1,
     341,    -1,   343,    -1,   346,    -1,   347,    -1,   350,    -1,
     352,    -1,   351,    -1,   359,    -1,   353,    -1,   354,    -1,
     363,    -1,   365,    -1,   366,    -1,   367,    -1,   369,    -1,
     370,    -1,   384,    -1,   385,    -1,   388,    -1,   391,    -1,
     390,    -1,   392,    -1,   393,    -1,   394,    -1,   395,    -1,
     396,    -1,   397,    -1,   398,    -1,   404,    -1,   405,    -1,
     407,    -1,   409,    -1,   410,    -1,   411,    -1,   412,    -1,
     413,    -1,   415,    -1,   416,    -1,   417,    -1,   420,    -1,
     424,    -1,   425,    -1,   427,    -1,   426,    -1,   428,    -1,
     431,    -1,   432,    -1,   433,    -1,   434,    -1,   435,    -1,
     437,    -1,   440,    -1,   442,    -1,   445,    -1,   446,    -1,
     447,    -1,   448,    -1,   449,    -1,   450,    -1,   451,    -1,
     452,    -1,   456,    -1,   459,    -1,   460,    -1,   461,    -1,
     463,    -1,   467,    -1,   468,    -1,   469,    -1,   472,    -1,
     470,    -1,   471,    -1,   473,    -1,   475,    -1,   476,    -1,
     478,    -1,   484,    -1,   483,    -1,   485,    -1,   497,    -1,
     490,    -1,   494,    -1,   499,    -1,   501,    -1,   504,    -1,
     505,    -1,   511,    -1,   512,    -1,   513,    -1,   516,    -1,
     515,    -1,   518,    -1,   521,    -1,   523,    -1,   525,    -1,
     527,    -1,   528,    -1,   529,    -1,   530,    -1,   535,    -1,
     537,    -1,   538,    -1,   539,    -1,   540,    -1,   542,    -1,
     541,    -1,   545,    -1,   546,    -1,   547,    -1,   548,    -1,
     555,    -1,   550,    -1,   554,    -1,   551,    -1,   556,    -1,
     557,    -1,   560,    -1,   561,    -1,   572,    -1,   573,    -1,
     563,    -1,   564,    -1,   565,    -1,   566,    -1,   578,    -1,
     579,    -1,   580,    -1,   194,    -1,   582,    -1,   583,    -1,
     586,    -1,   585,    -1,   592,    -1,   595,    -1,   599,    -1,
     600,    -1,   610,    -1,   614,    -1,   607,    -1,   616,    -1,
     615,    -1,   617,    -1,   625,    -1,   618,    -1,   628,    -1,
     630,    -1,   633,    -1,    -1,   488,  1477,  1478,    -1,    -1,
    1494,  1479,  1484,    -1,    -1,   572,  1480,  1497,    -1,    -1,
    1490,  1481,  1482,    -1,   392,  1343,  1502,    -1,   392,   188,
    1473,  1343,  1502,    -1,    -1,  1493,  1483,  1484,    -1,   572,
    1497,    -1,    -1,   646,  1485,    -1,    -1,  1486,  1488,    -1,
      -1,  1485,   646,  1487,  1488,    -1,    -1,  1490,  1489,  1493,
      -1,  1494,    -1,   201,    -1,   271,    -1,   485,    -1,    -1,
     201,    -1,   271,    -1,   485,    -1,    -1,   201,   652,    -1,
     271,   652,    -1,   485,   652,    -1,  1496,  1343,  1503,    -1,
      -1,  1496,  1343,  1495,  1503,    -1,   651,  1472,  1343,  1168,
      -1,   651,   651,  1492,  1496,  1343,  1503,    -1,   983,   988,
      -1,   341,  1343,  1168,    -1,   341,   985,   990,    -1,  1470,
      -1,  1470,   652,  1470,    -1,   120,   652,  1470,    -1,  1498,
      -1,  1499,    -1,  1498,   646,  1499,    -1,  1499,   646,  1498,
      -1,  1500,    -1,   246,   262,  1501,    -1,   421,   370,    -1,
     421,   627,    -1,   421,   582,    -1,   421,    75,    -1,   442,
     421,    -1,   483,    -1,   559,    -1,   392,   644,   559,   645,
      -1,   367,   644,   559,   645,    -1,  1168,    -1,   120,    -1,
     368,    -1,    12,    -1,    33,    -1,    -1,   274,  1506,  1505,
    1507,    -1,   553,    -1,   550,    -1,  1508,    -1,  1507,   646,
    1508,    -1,  1462,  1261,  1509,    -1,   421,    -1,   627,    -1,
     282,   627,    -1,   421,   271,    -1,    -1,   593,  1511,  1506,
      -1,   207,  1462,   371,  1261,    -1,   207,  1464,    65,    -1,
      -1,   207,  1464,   421,  1513,  1514,  1263,  1281,    -1,  1515,
      -1,  1470,  1516,    -1,   180,    -1,   352,    -1,   180,    -1,
     352,    -1,   405,    -1,   255,    -1,    -1,  1518,  1517,   644,
    1348,   645,    -1,   155,    -1,   195,    -1,   256,    -1,   206,
      -1,   283,    -1,    -1,   464,   717,  1520,  1521,    -1,  1526,
     368,  1525,  1537,   191,  1539,    -1,  1526,   368,   194,  1537,
     191,  1539,    -1,  1526,   368,   408,  1537,   191,  1539,    -1,
      12,  1527,   646,   202,   374,   191,  1539,    -1,   413,   368,
    1473,   191,  1539,    -1,    -1,   202,   717,  1523,  1524,    -1,
    1526,   368,  1525,  1537,   570,  1539,  1544,  1545,    -1,  1526,
     368,   194,  1537,   570,  1539,  1544,  1545,    -1,  1526,   368,
     408,  1537,   570,  1539,  1544,  1545,    -1,   413,   368,  1473,
     570,  1539,  1546,    -1,    -1,   553,    -1,  1528,    -1,    12,
    1527,    -1,    -1,   407,    -1,  1529,    -1,  1528,   646,  1529,
      -1,    -1,   480,  1530,  1541,    -1,    -1,   233,  1531,  1541,
      -1,    -1,   596,  1532,  1541,    -1,    -1,   429,  1533,  1541,
      -1,   125,    -1,   598,    -1,   227,    -1,    13,    -1,    94,
      -1,   139,    -1,   165,    -1,   437,    -1,   494,    -1,   409,
      -1,   178,    -1,   202,   374,    -1,   493,   104,    -1,   545,
      -1,    94,   556,   550,    -1,   274,   550,    -1,   445,   498,
      -1,   445,    64,    -1,    94,   614,    -1,   493,   614,    -1,
      94,   468,    -1,    13,   468,    -1,    94,   599,    -1,   162,
      -1,   574,    -1,    94,   551,    -1,    -1,    17,    -1,  1536,
    1534,  1535,    -1,  1536,    -1,   540,   559,    -1,   247,   559,
      -1,    62,   559,    -1,   639,    -1,  1470,   652,   639,    -1,
     639,   652,   639,    -1,  1462,    -1,  1473,    -1,  1538,   646,
    1473,    -1,  1540,    -1,  1539,   646,  1540,    -1,  1473,   220,
      46,   559,    -1,  1473,   220,    46,   392,   559,    -1,  1473,
     220,   622,  1472,    -1,  1473,   220,   622,  1472,    19,  1467,
      -1,  1473,    -1,    -1,   644,  1542,   645,    -1,  1542,   646,
    1543,    -1,  1543,    -1,  1470,    -1,    -1,   453,  1535,    -1,
     453,   522,    -1,   453,   628,    -1,   453,   354,    -1,    -1,
     622,  1547,    -1,    -1,   622,   202,   374,    -1,  1547,  1548,
      -1,  1548,    -1,   202,   374,    -1,   309,  1287,    -1,   314,
    1287,    -1,   308,  1287,    -1,   315,  1287,    -1,    -1,    30,
    1550,  1551,    -1,    -1,   625,    -1,    -1,    17,   358,    55,
      -1,    17,    55,    -1,    -1,   436,    -1,   358,   436,    -1,
      -1,   474,    -1,    76,  1551,  1552,  1553,    -1,   466,  1551,
    1552,  1553,    -1,   466,  1551,   570,  1554,  1470,    -1,   474,
    1470,    -1,   436,   474,  1470,    -1,    -1,  1560,    -1,    -1,
     590,  1567,  1561,  1146,    -1,    -1,  1560,    -1,  1564,    -1,
      -1,  1564,    -1,    -1,  1565,  1566,    -1,  1277,  1281,    -1,
    1282,    -1,    -1,   135,    -1,    12,    -1,   480,  1232,  1156,
      -1,   644,  1149,   645,  1563,    -1,  1568,    -1,    -1,  1569,
     590,  1567,  1570,  1568,    -1,  1572,  1569,  1573,    -1,    -1,
      -1,    -1,  1575,    -1,  1575,  1576,    -1,  1576,    -1,   536,
      -1,   212,    -1,   135,    -1,   519,    -1,   514,    -1,   515,
      -1,   517,    -1,    12,    -1,  1582,  1578,    -1,  1581,  1579,
      -1,  1583,  1580,  1587,    -1,  1587,    -1,  1602,    -1,  1611,
      -1,  1605,    -1,   704,    -1,  1587,    -1,  1602,    -1,  1611,
      -1,  1605,    -1,  1604,    -1,   704,    -1,  1581,    -1,  1582,
      -1,    -1,   122,   155,  1473,    -1,  1584,    -1,  1584,  1585,
      -1,  1585,    -1,   379,   444,    -1,    11,   155,   583,    -1,
      11,   155,   322,    -1,    11,   155,   557,    -1,    -1,   520,
     479,   122,    -1,   520,   479,   239,    -1,    -1,  1586,   614,
    1462,  1588,  1589,    19,  1591,    -1,    -1,   644,  1590,   645,
      -1,  1470,    -1,  1590,   646,  1470,    -1,    -1,  1592,  1593,
    1599,    -1,    -1,  1597,  1594,  1559,    -1,   644,  1595,   645,
    1562,    -1,    -1,  1596,  1597,    -1,   644,  1595,   645,    -1,
      -1,   480,  1598,  1153,    -1,    -1,   622,    61,   374,    -1,
     622,    51,    61,   374,    -1,   622,   271,    61,   374,    -1,
     185,    -1,   401,    -1,    -1,  1600,  1472,    -1,    -1,   574,
     718,   824,   825,   368,  1462,   188,   144,   471,  1601,  1603,
     773,    -1,    10,   194,  1470,   461,   945,   503,  1467,    -1,
     194,  1470,   461,   945,   503,  1467,    -1,    -1,    -1,    -1,
      -1,    -1,   194,   718,   644,  1606,   729,   645,  1607,   461,
    1608,   980,  1609,   720,  1610,   773,    -1,    -1,    -1,    -1,
      -1,   408,   718,  1612,   644,  1613,   733,   645,  1614,   720,
    1615,   773,    -1,   629,  1618,  1617,  1619,    -1,   629,   149,
    1617,  1621,    -1,   629,   403,  1617,    -1,   629,    76,  1617,
    1620,    -1,   629,   466,  1617,    -1,   629,   425,    -1,  1449,
      -1,  1449,   646,  1449,    -1,  1449,   646,  1449,   646,  1287,
      -1,    30,    -1,   526,    -1,    -1,   249,    -1,   459,    -1,
      -1,   369,   393,    -1,    -1,    -1,   546,  1622,  1623,    -1,
      -1,   188,   325,    -1,   235,   395,  1470,   503,  1467,    -1,
     589,   395,  1470,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1929,  1929,  1942,  1941,  1966,  1973,  1975,  1979,  1980,
    1985,  1986,  1987,  1988,  1989,  1990,  1991,  1992,  1993,  1994,
    1995,  1996,  1997,  1998,  1999,  2000,  2001,  2002,  2003,  2004,
    2005,  2006,  2007,  2008,  2009,  2010,  2011,  2012,  2013,  2014,
    2015,  2016,  2017,  2018,  2019,  2020,  2021,  2022,  2023,  2024,
    2025,  2026,  2027,  2028,  2029,  2030,  2031,  2032,  2033,  2034,
    2035,  2036,  2040,  2050,  2051,  2055,  2075,  2082,  2093,  2092,
    2103,  2105,  2109,  2110,  2114,  2127,  2126,  2146,  2145,  2161,
    2160,  2175,  2176,  2179,  2186,  2193,  2200,  2207,  2214,  2222,
    2231,  2237,  2244,  2251,  2259,  2269,  2275,  2281,  2289,  2297,
    2303,  2310,  2317,  2325,  2338,  2344,  2351,  2358,  2366,  2377,
    2378,  2382,  2386,  2390,  2394,  2399,  2403,  2407,  2412,  2423,
    2428,  2432,  2436,  2440,  2444,  2448,  2453,  2457,  2462,  2493,
    2498,  2505,  2508,  2510,  2511,  2515,  2529,  2533,  2549,  2553,
    2566,  2565,  2611,  2616,  2610,  2623,  2628,  2621,  2635,  2640,
    2633,  2646,  2645,  2658,  2657,  2665,  2669,  2673,  2677,  2689,
    2690,  2694,  2698,  2702,  2706,  2710,  2715,  2719,  2727,  2726,
    2758,  2757,  2764,  2771,  2772,  2778,  2784,  2794,  2800,  2806,
    2808,  2815,  2816,  2820,  2826,  2835,  2836,  2844,  2844,  2902,
    2903,  2904,  2905,  2906,  2907,  2908,  2909,  2910,  2911,  2912,
    2913,  2914,  2919,  2933,  2947,  2966,  2967,  2971,  2972,  2977,
    2979,  2981,  2983,  2985,  2987,  2989,  2995,  2996,  2997,  3001,
    3005,  3013,  3012,  3025,  3027,  3030,  3032,  3036,  3040,  3047,
    3049,  3053,  3054,  3059,  3078,  3108,  3110,  3114,  3115,  3119,
    3148,  3149,  3150,  3151,  3155,  3156,  3160,  3161,  3166,  3169,
    3197,  3195,  3280,  3298,  3297,  3377,  3373,  3449,  3450,  3455,
    3457,  3462,  3485,  3496,  3500,  3522,  3523,  3527,  3531,  3544,
    3550,  3556,  3565,  3578,  3604,  3610,  3611,  3617,  3618,  3623,
    3629,  3642,  3644,  3662,  3668,  3670,  3672,  3674,  3676,  3678,
    3680,  3682,  3684,  3686,  3688,  3690,  3695,  3709,  3726,  3727,
    3729,  3734,  3740,  3749,  3755,  3764,  3772,  3800,  3809,  3811,
    3820,  3825,  3831,  3840,  3848,  3850,  3852,  3854,  3856,  3858,
    3860,  3862,  3864,  3866,  3868,  3870,  3872,  3877,  3897,  3921,
    3923,  3922,  3929,  3930,  3931,  3932,  3933,  3934,  3935,  3936,
    3937,  3938,  3939,  3940,  3941,  3946,  3945,  3956,  3956,  4012,
    4011,  4068,  4068,  4090,  4149,  4199,  4224,  4223,  4249,  4272,
    4274,  4275,  4279,  4297,  4318,  4327,  4364,  4318,  4393,  4395,
    4396,  4400,  4401,  4406,  4417,  4405,  4468,  4467,  4481,  4482,
    4486,  4487,  4492,  4501,  4491,  4550,  4559,  4549,  4603,  4616,
    4621,  4620,  4658,  4659,  4664,  4663,  4697,  4697,  4716,  4715,
    4765,  4782,  4791,  4781,  4848,  4857,  4845,  4898,  4900,  4905,
    4907,  4909,  4926,  4931,  4937,  4944,  4945,  4953,  4959,  4968,
    4974,  4980,  4981,  4985,  4985,  4990,  4991,  4992,  4996,  4997,
    4998,  5001,  5003,  5007,  5008,  5009,  5013,  5014,  5015,  5016,
    5017,  5018,  5019,  5020,  5023,  5025,  5029,  5030,  5031,  5035,
    5036,  5037,  5038,  5039,  5042,  5044,  5048,  5049,  5050,  5054,
    5055,  5056,  5057,  5058,  5059,  5060,  5063,  5065,  5069,  5070,
    5071,  5075,  5076,  5077,  5082,  5090,  5098,  5106,  5118,  5130,
    5135,  5140,  5148,  5156,  5164,  5172,  5180,  5188,  5196,  5209,
    5222,  5236,  5241,  5254,  5255,  5306,  5307,  5310,  5325,  5343,
    5348,  5346,  5353,  5355,  5354,  5358,  5357,  5363,  5400,  5401,
    5406,  5405,  5424,  5443,  5442,  5459,  5463,  5471,  5470,  5473,
    5475,  5477,  5479,  5484,  5485,  5491,  5492,  5509,  5510,  5514,
    5515,  5519,  5538,  5548,  5564,  5578,  5579,  5595,  5597,  5596,
    5601,  5599,  5610,  5611,  5615,  5633,  5649,  5650,  5666,  5681,
    5703,  5704,  5709,  5708,  5732,  5742,  5764,  5763,  5781,  5780,
    5800,  5822,  5826,  5855,  5867,  5868,  5873,  5884,  5872,  5909,
    5910,  5914,  5927,  5948,  5961,  5987,  5988,  5993,  5992,  6029,
    6034,  6035,  6039,  6040,  6044,  6046,  6052,  6054,  6056,  6058,
    6060,  6062,  6072,  6086,  6071,  6102,  6103,  6107,  6108,  6112,
    6113,  6117,  6118,  6122,  6123,  6127,  6128,  6132,  6136,  6137,
    6140,  6142,  6146,  6147,  6151,  6152,  6153,  6157,  6162,  6167,
    6172,  6177,  6182,  6187,  6192,  6207,  6213,  6228,  6233,  6248,
    6254,  6272,  6277,  6282,  6287,  6292,  6298,  6297,  6323,  6324,
    6325,  6330,  6335,  6340,  6342,  6344,  6346,  6352,  6360,  6378,
    6395,  6421,  6439,  6440,  6441,  6442,  6443,  6444,  6448,  6449,
    6450,  6454,  6455,  6456,  6457,  6462,  6469,  6470,  6474,  6475,
    6479,  6480,  6487,  6492,  6498,  6504,  6510,  6529,  6535,  6537,
    6541,  6545,  6546,  6550,  6555,  6554,  6577,  6578,  6579,  6580,
    6585,  6589,  6594,  6599,  6603,  6608,  6613,  6619,  6624,  6630,
    6634,  6639,  6644,  6662,  6664,  6666,  6682,  6684,  6689,  6694,
    6700,  6705,  6710,  6715,  6717,  6719,  6721,  6723,  6725,  6727,
    6729,  6732,  6731,  6736,  6735,  6739,  6741,  6750,  6751,  6752,
    6757,  6758,  6759,  6760,  6761,  6765,  6769,  6770,  6774,  6775,
    6779,  6780,  6781,  6782,  6783,  6787,  6788,  6789,  6790,  6791,
    6795,  6800,  6802,  6808,  6809,  6811,  6816,  6826,  6827,  6831,
    6832,  6833,  6841,  6842,  6846,  6847,  6851,  6852,  6853,  6857,
    6858,  6859,  6860,  6863,  6864,  6868,  6869,  6873,  6874,  6878,
    6879,  6883,  6888,  6889,  6890,  6891,  6892,  6898,  6904,  6910,
    6916,  6917,  6930,  6936,  6942,  6948,  6953,  6958,  6967,  6988,
    6996,  6997,  7002,  7003,  7007,  7015,  7019,  7020,  7024,  7025,
    7029,  7038,  7042,  7043,  7047,  7055,  7056,  7060,  7061,  7065,
    7066,  7071,  7072,  7076,  7083,  7092,  7097,  7105,  7106,  7107,
    7108,  7109,  7110,  7115,  7123,  7124,  7129,  7128,  7141,  7142,
    7146,  7149,  7150,  7151,  7152,  7156,  7164,  7171,  7172,  7176,
    7186,  7187,  7191,  7192,  7195,  7197,  7201,  7213,  7214,  7218,
    7225,  7238,  7239,  7241,  7243,  7249,  7254,  7260,  7266,  7273,
    7283,  7284,  7285,  7286,  7287,  7291,  7295,  7296,  7300,  7301,
    7305,  7306,  7310,  7311,  7312,  7316,  7317,  7321,  7325,  7332,
    7344,  7345,  7349,  7350,  7354,  7355,  7359,  7360,  7364,  7365,
    7369,  7370,  7374,  7375,  7379,  7380,  7384,  7386,  7390,  7391,
    7395,  7399,  7400,  7413,  7414,  7415,  7419,  7420,  7424,  7430,
    7444,  7445,  7449,  7450,  7454,  7455,  7463,  7462,  7501,  7500,
    7514,  7526,  7525,  7544,  7543,  7562,  7561,  7580,  7574,  7594,
    7593,  7626,  7631,  7636,  7641,  7646,  7654,  7661,  7662,  7666,
    7682,  7685,  7698,  7704,  7712,  7713,  7714,  7715,  7719,  7720,
    7732,  7733,  7737,  7738,  7741,  7743,  7751,  7759,  7761,  7763,
    7764,  7772,  7773,  7777,  7786,  7784,  7798,  7812,  7811,  7825,
    7823,  7837,  7844,  7855,  7856,  7881,  7890,  7902,  7909,  7913,
    7918,  7917,  7933,  7935,  7940,  7948,  7947,  7963,  7967,  7966,
    7978,  7979,  7983,  8003,  8004,  8008,  8017,  8021,  8026,  8032,
    8031,  8042,  8051,  8041,  8066,  8075,  8084,  8093,  8102,  8108,
    8114,  8123,  8132,  8160,  8170,  8191,  8201,  8205,  8210,  8211,
    8214,  8216,  8217,  8218,  8219,  8222,  8227,  8238,  8243,  8254,
    8255,  8259,  8260,  8264,  8265,  8266,  8270,  8271,  8276,  8284,
    8285,  8286,  8287,  8292,  8291,  8320,  8330,  8347,  8350,  8357,
    8361,  8368,  8372,  8376,  8383,  8388,  8391,  8398,  8401,  8408,
    8411,  8418,  8421,  8429,  8432,  8439,  8443,  8450,  8454,  8461,
    8462,  8487,  8488,  8489,  8494,  8499,  8507,  8506,  8518,  8519,
    8520,  8525,  8524,  8546,  8547,  8551,  8552,  8556,  8557,  8558,
    8563,  8562,  8584,  8593,  8592,  8619,  8620,  8624,  8625,  8629,
    8630,  8631,  8632,  8633,  8634,  8639,  8638,  8660,  8661,  8662,
    8667,  8666,  8672,  8679,  8684,  8692,  8693,  8697,  8711,  8710,
    8723,  8724,  8728,  8729,  8733,  8743,  8753,  8754,  8759,  8758,
    8769,  8770,  8774,  8775,  8779,  8789,  8800,  8799,  8807,  8807,
    8818,  8819,  8824,  8825,  8834,  8843,  8844,  8848,  8848,  8860,
    8865,  8865,  8874,  8879,  8878,  8893,  8897,  8898,  8926,  8926,
    8940,  8951,  8954,  8956,  8960,  8966,  8973,  8975,  8986,  8987,
    8991,  8992,  9020,  9048,  9070,  9072,  9078,  9088,  9089,  9090,
    9105,  9112,  9137,  9138,  9139,  9140,  9141,  9145,  9146,  9151,
    9202,  9209,  9252,  9258,  9264,  9270,  9276,  9282,  9288,  9294,
    9298,  9304,  9310,  9316,  9322,  9328,  9332,  9338,  9348,  9354,
    9362,  9368,  9378,  9384,  9393,  9403,  9409,  9419,  9425,  9434,
    9438,  9444,  9450,  9456,  9462,  9468,  9474,  9480,  9486,  9492,
    9498,  9504,  9510,  9516,  9522,  9526,  9527,  9531,  9532,  9536,
    9537,  9541,  9542,  9546,  9547,  9548,  9549,  9550,  9551,  9555,
    9556,  9560,  9561,  9562,  9563,  9564,  9565,  9577,  9578,  9579,
    9580,  9581,  9587,  9591,  9597,  9603,  9609,  9615,  9617,  9624,
    9631,  9637,  9678,  9688,  9695,  9703,  9709,  9716,  9722,  9736,
    9743,  9759,  9765,  9771,  9779,  9785,  9791,  9797,  9803,  9818,
    9830,  9836,  9842,  9848,  9854,  9860,  9866,  9872,  9878,  9884,
    9890,  9896,  9902,  9908,  9914,  9920,  9926,  9934,  9955,  9962,
    9968,  9975,  9982,  9989,  9996, 10002, 10008, 10013, 10019, 10026,
   10032, 10038, 10044, 10050, 10056, 10074, 10080, 10086, 10093, 10100,
   10115, 10121, 10127, 10133, 10139, 10146, 10152, 10158, 10164, 10170,
   10176, 10183, 10196, 10202, 10208, 10214, 10220, 10228, 10234, 10246,
   10252, 10258, 10266, 10276, 10282, 10292, 10298, 10305, 10312, 10319,
   10326, 10333, 10337, 10357, 10356, 10429, 10469, 10471, 10476, 10477,
   10481, 10482, 10486, 10487, 10491, 10498, 10506, 10532, 10538, 10544,
   10550, 10556, 10562, 10571, 10578, 10580, 10577, 10587, 10598, 10604,
   10610, 10616, 10622, 10628, 10634, 10640, 10646, 10653, 10652, 10672,
   10671, 10686, 10697, 10705, 10732, 10733, 10738, 10743, 10746, 10749,
   10748, 10765, 10767, 10773, 10772, 10789, 10791, 10793, 10795, 10797,
   10799, 10801, 10803, 10805, 10807, 10809, 10814, 10815, 10819, 10826,
   10834, 10835, 10839, 10846, 10854, 10855, 10859, 10860, 10864, 10872,
   10883, 10884, 10893, 10904, 10905, 10911, 10912, 10932, 10934, 10938,
   10936, 10955, 10953, 10973, 10971, 10978, 10987, 10985, 11005, 11004,
   11014, 11025, 11023, 11044, 11043, 11054, 11065, 11066, 11067, 11075,
   11076, 11080, 11095, 11095, 11110, 11146, 11217, 11228, 11225, 11250,
   11260, 11260, 11275, 11274, 11297, 11317, 11297, 11326, 11330, 11356,
   11357, 11362, 11365, 11366, 11367, 11371, 11372, 11377, 11376, 11382,
   11381, 11389, 11390, 11393, 11395, 11395, 11399, 11399, 11404, 11405,
   11409, 11411, 11416, 11417, 11421, 11432, 11445, 11446, 11447, 11448,
   11449, 11450, 11451, 11452, 11453, 11454, 11455, 11456, 11460, 11461,
   11462, 11463, 11464, 11465, 11466, 11467, 11468, 11472, 11473, 11474,
   11475, 11478, 11480, 11481, 11485, 11486, 11494, 11496, 11500, 11502,
   11501, 11517, 11520, 11519, 11536, 11542, 11557, 11560, 11564, 11559,
   11573, 11575, 11580, 11581, 11601, 11632, 11636, 11637, 11641, 11654,
   11656, 11661, 11660, 11720, 11722, 11727, 11728, 11729, 11733, 11734,
   11739, 11738, 11755, 11762, 11769, 11779, 11805, 11809, 11815, 11821,
   11831, 11835, 11845, 11846, 11847, 11848, 11849, 11850, 11854, 11855,
   11856, 11857, 11858, 11862, 11863, 11864, 11865, 11866, 11870, 11871,
   11872, 11873, 11877, 11882, 11883, 11887, 11889, 11888, 11920, 11921,
   11925, 11933, 11946, 11946, 11956, 11957, 11961, 11980, 12019, 12020,
   12025, 12024, 12037, 12045, 12036, 12047, 12059, 12071, 12070, 12087,
   12086, 12097, 12098, 12097, 12114, 12121, 12142, 12163, 12175, 12180,
   12179, 12189, 12195, 12202, 12207, 12212, 12221, 12222, 12226, 12237,
   12250, 12251, 12255, 12266, 12267, 12271, 12272, 12275, 12277, 12280,
   12281, 12282, 12286, 12287, 12295, 12302, 12294, 12312, 12318, 12311,
   12327, 12328, 12329, 12338, 12342, 12343, 12355, 12356, 12360, 12369,
   12370, 12371, 12373, 12372, 12383, 12384, 12388, 12389, 12391, 12390,
   12394, 12393, 12399, 12400, 12404, 12405, 12409, 12419, 12420, 12424,
   12425, 12430, 12429, 12443, 12444, 12448, 12453, 12461, 12462, 12470,
   12473, 12481, 12472, 12496, 12503, 12507, 12495, 12532, 12533, 12537,
   12545, 12546, 12550, 12560, 12561, 12568, 12567, 12582, 12581, 12595,
   12594, 12606, 12605, 12619, 12620, 12624, 12637, 12653, 12654, 12658,
   12659, 12663, 12664, 12665, 12670, 12669, 12688, 12690, 12693, 12695,
   12698, 12699, 12702, 12706, 12710, 12714, 12718, 12722, 12726, 12730,
   12734, 12742, 12745, 12758, 12757, 12766, 12773, 12781, 12789, 12797,
   12805, 12813, 12820, 12822, 12824, 12833, 12837, 12842, 12841, 12848,
   12847, 12853, 12862, 12869, 12874, 12879, 12884, 12889, 12894, 12902,
   12909, 12917, 12919, 12927, 12934, 12941, 12951, 12958, 12964, 12973,
   12981, 12985, 12989, 12993, 13000, 13007, 13013, 13020, 13027, 13032,
   13037, 13045, 13047, 13049, 13054, 13055, 13058, 13060, 13064, 13065,
   13069, 13070, 13074, 13075, 13079, 13080, 13084, 13085, 13088, 13090,
   13097, 13108, 13107, 13124, 13123, 13131, 13132, 13133, 13134, 13135,
   13136, 13150, 13151, 13156, 13160, 13166, 13172, 13193, 13194, 13195,
   13210, 13209, 13222, 13231, 13221, 13233, 13237, 13238, 13250, 13249,
   13271, 13272, 13277, 13279, 13281, 13283, 13285, 13287, 13289, 13291,
   13293, 13295, 13297, 13299, 13301, 13306, 13307, 13312, 13311, 13321,
   13322, 13326, 13326, 13328, 13329, 13333, 13334, 13339, 13338, 13349,
   13353, 13357, 13369, 13379, 13380, 13381, 13387, 13399, 13411, 13421,
   13434, 13398, 13442, 13443, 13447, 13448, 13452, 13453, 13454, 13458,
   13459, 13460, 13463, 13465, 13469, 13470, 13474, 13479, 13486, 13491,
   13498, 13500, 13504, 13505, 13509, 13514, 13522, 13523, 13526, 13528,
   13536, 13538, 13542, 13543, 13544, 13548, 13550, 13555, 13556, 13565,
   13566, 13570, 13571, 13575, 13595, 13619, 13631, 13642, 13661, 13669,
   13681, 13696, 13717, 13718, 13719, 13728, 13729, 13730, 13731, 13739,
   13745, 13751, 13757, 13763, 13792, 13823, 13833, 13843, 13849, 13858,
   13870, 13876, 13882, 13898, 13899, 13903, 13912, 13928, 13932, 13982,
   13986, 14004, 14008, 14086, 14111, 14142, 14143, 14159, 14169, 14173,
   14179, 14185, 14195, 14201, 14210, 14220, 14221, 14251, 14264, 14280,
   14296, 14313, 14314, 14325, 14326, 14337, 14338, 14339, 14343, 14370,
   14403, 14418, 14419, 14420, 14421, 14422, 14423, 14424, 14425, 14426,
   14427, 14428, 14429, 14430, 14431, 14432, 14433, 14434, 14435, 14436,
   14437, 14438, 14439, 14440, 14441, 14442, 14443, 14444, 14445, 14446,
   14447, 14448, 14449, 14450, 14451, 14452, 14453, 14454, 14455, 14456,
   14457, 14458, 14459, 14460, 14461, 14462, 14463, 14464, 14465, 14466,
   14467, 14468, 14469, 14479, 14480, 14481, 14482, 14483, 14484, 14485,
   14486, 14487, 14488, 14489, 14490, 14491, 14492, 14493, 14494, 14495,
   14496, 14497, 14498, 14499, 14500, 14501, 14502, 14503, 14504, 14505,
   14506, 14507, 14508, 14509, 14510, 14511, 14512, 14513, 14514, 14515,
   14516, 14517, 14518, 14519, 14520, 14521, 14522, 14523, 14528, 14529,
   14530, 14531, 14532, 14533, 14534, 14535, 14536, 14537, 14538, 14539,
   14540, 14541, 14542, 14543, 14544, 14545, 14546, 14547, 14548, 14549,
   14550, 14551, 14552, 14553, 14554, 14555, 14556, 14557, 14558, 14559,
   14560, 14561, 14562, 14563, 14564, 14565, 14566, 14567, 14568, 14569,
   14570, 14571, 14572, 14573, 14574, 14575, 14576, 14577, 14578, 14579,
   14580, 14581, 14582, 14583, 14584, 14585, 14586, 14587, 14588, 14589,
   14590, 14591, 14592, 14593, 14594, 14595, 14596, 14597, 14598, 14599,
   14600, 14601, 14602, 14603, 14604, 14605, 14606, 14607, 14608, 14609,
   14610, 14611, 14612, 14613, 14614, 14615, 14616, 14617, 14618, 14619,
   14620, 14621, 14622, 14623, 14624, 14625, 14626, 14627, 14628, 14629,
   14630, 14631, 14632, 14633, 14634, 14635, 14636, 14637, 14638, 14639,
   14640, 14641, 14642, 14643, 14644, 14645, 14646, 14647, 14648, 14649,
   14650, 14651, 14652, 14653, 14654, 14655, 14656, 14657, 14658, 14659,
   14660, 14661, 14662, 14663, 14664, 14665, 14666, 14667, 14668, 14669,
   14670, 14671, 14672, 14673, 14674, 14675, 14676, 14677, 14678, 14679,
   14680, 14681, 14682, 14683, 14684, 14685, 14686, 14687, 14688, 14689,
   14690, 14691, 14692, 14693, 14694, 14695, 14696, 14697, 14698, 14699,
   14700, 14701, 14702, 14703, 14704, 14705, 14706, 14707, 14708, 14709,
   14710, 14711, 14712, 14713, 14714, 14715, 14716, 14717, 14718, 14719,
   14720, 14721, 14722, 14723, 14724, 14725, 14726, 14727, 14728, 14729,
   14730, 14731, 14732, 14733, 14734, 14735, 14736, 14737, 14738, 14739,
   14740, 14741, 14742, 14743, 14744, 14745, 14746, 14747, 14748, 14749,
   14750, 14751, 14752, 14753, 14754, 14755, 14756, 14757, 14758, 14759,
   14760, 14761, 14762, 14763, 14764, 14765, 14766, 14767, 14768, 14769,
   14770, 14771, 14772, 14773, 14774, 14775, 14776, 14777, 14778, 14779,
   14780, 14781, 14782, 14783, 14784, 14785, 14786, 14787, 14788, 14789,
   14790, 14791, 14792, 14793, 14794, 14806, 14805, 14824, 14823, 14830,
   14829, 14839, 14838, 14843, 14880, 14904, 14903, 14909, 14917, 14919,
   14924, 14924, 14933, 14932, 14946, 14945, 14950, 14954, 14955, 14956,
   14960, 14961, 14962, 14963, 14967, 14968, 14969, 14970, 14975, 15002,
   15000, 15101, 15112, 15125, 15141, 15154, 15179, 15207, 15253, 15267,
   15268, 15269, 15270, 15274, 15292, 15310, 15311, 15315, 15316, 15317,
   15318, 15322, 15323, 15341, 15354, 15355, 15356, 15362, 15368, 15380,
   15379, 15395, 15396, 15400, 15401, 15405, 15418, 15419, 15420, 15425,
   15430, 15429, 15449, 15465, 15482, 15481, 15520, 15521, 15525, 15526,
   15530, 15531, 15532, 15533, 15535, 15534, 15548, 15549, 15550, 15551,
   15552, 15558, 15558, 15563, 15568, 15578, 15588, 15592, 15601, 15601,
   15606, 15612, 15623, 15634, 15642, 15644, 15648, 15655, 15662, 15664,
   15668, 15669, 15674, 15673, 15677, 15676, 15680, 15679, 15683, 15682,
   15685, 15686, 15687, 15688, 15689, 15690, 15691, 15692, 15693, 15694,
   15695, 15696, 15697, 15698, 15699, 15700, 15701, 15702, 15703, 15704,
   15705, 15706, 15707, 15708, 15709, 15710, 15714, 15715, 15719, 15720,
   15724, 15734, 15744, 15757, 15772, 15785, 15798, 15810, 15815, 15823,
   15828, 15836, 15854, 15874, 15886, 15899, 15908, 15912, 15916, 15917,
   15921, 15948, 15950, 15954, 15958, 15962, 15969, 15970, 15974, 15975,
   15979, 15980, 15984, 15985, 15991, 15997, 16003, 16013, 16012, 16022,
   16023, 16028, 16029, 16030, 16035, 16036, 16037, 16041, 16042, 16046,
   16058, 16067, 16077, 16086, 16100, 16101, 16106, 16105, 16121, 16122,
   16123, 16127, 16128, 16132, 16132, 16155, 16156, 16160, 16161, 16162,
   16166, 16171, 16179, 16182, 16180, 16200, 16207, 16228, 16244, 16246,
   16250, 16251, 16255, 16256, 16264, 16265, 16266, 16267, 16273, 16279,
   16289, 16291, 16293, 16298, 16299, 16300, 16301, 16302, 16306, 16307,
   16308, 16309, 16310, 16311, 16321, 16322, 16327, 16340, 16353, 16355,
   16357, 16362, 16367, 16369, 16371, 16377, 16378, 16380, 16386, 16385,
   16403, 16404, 16408, 16413, 16421, 16421, 16448, 16447, 16464, 16468,
   16468, 16476, 16481, 16480, 16492, 16493, 16495, 16497, 16508, 16510,
   16516, 16522, 16540, 16530, 16623, 16641, 16665, 16689, 16693, 16701,
   16724, 16662, 16791, 16811, 16816, 16824, 16789, 16845, 16849, 16853,
   16857, 16861, 16865, 16872, 16879, 16886, 16896, 16897, 16901, 16902,
   16903, 16907, 16908, 16913, 16915, 16914, 16920, 16921, 16925, 16935
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYSE_SYM", "ANALYZE_SYM",
  "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS", "ASC", "ASCII_SYM",
  "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC",
  "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM",
  "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND",
  "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET",
  "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM",
  "CONVERT_SYM", "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM",
  "CURDATE", "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM",
  "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL",
  "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FILTER_SYM", "FIRST_SYM", "FIXED_SYM",
  "FLOAT_NUM", "FLOAT_SYM", "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM",
  "FOREIGN", "FOR_SYM", "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL",
  "FULLTEXT_SYM", "FUNCTION_SYM", "GE", "GENERAL", "GEOMETRYCOLLECTION",
  "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS",
  "GROUP_SYM", "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM",
  "HAVING", "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM",
  "HOSTS_SYM", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM",
  "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED",
  "IF", "IGNORE_SYM", "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES",
  "INDEX_SYM", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM",
  "INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM", "KEYS",
  "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM",
  "LE", "LEADING", "LEAVES", "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING",
  "LIST_SYM", "LOAD", "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM",
  "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM",
  "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_STATEMENT_TIME_SYM", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_SYM", "MAX_UPDATES_PER_HOUR",
  "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM", "MEDIUMBLOB", "MEDIUMINT",
  "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEVER_SYM", "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOT2_SYM", "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM",
  "NO_WRITE_TO_BINLOG", "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM",
  "NVARCHAR_SYM", "OFFSET_SYM", "OLD_PASSWORD", "ON", "ONE_SYM",
  "ONLY_SYM", "OPEN_SYM", "OPTIMIZE", "OPTIONS_SYM", "OPTION",
  "OPTIONALLY", "OR2_SYM", "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER",
  "OUTFILE", "OUT_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM",
  "PARAM_MARKER", "PARSER_SYM", "PARTIAL", "PARTITION_SYM",
  "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM",
  "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON",
  "PORT_SYM", "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "REBUILD_SYM",
  "RECOVER_SYM", "REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM",
  "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM",
  "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM", "RELOAD",
  "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM",
  "REPEAT_SYM", "REPLACE", "REPLICATION", "REPLICATE_DO_DB",
  "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE", "REPLICATE_IGNORE_TABLE",
  "REPLICATE_WILD_DO_TABLE", "REPLICATE_WILD_IGNORE_TABLE",
  "REPLICATE_REWRITE_DB", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM",
  "RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM",
  "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM",
  "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STACKED_SYM",
  "STARTING", "STARTS_SYM", "START_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "NONBLOCKING_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM",
  "STORAGE_SYM", "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY",
  "TABLE_SYM", "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY",
  "TEMPTABLE_SYM", "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM",
  "THEN_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING",
  "TRANSACTION_SYM", "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM",
  "TRUNCATE_SYM", "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "ULONGLONG_NUM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDERSCORE_CHARSET", "UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM",
  "UNICODE_SYM", "UNINSTALL_SYM", "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM",
  "UNLOCK_SYM", "UNSIGNED", "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM",
  "USAGE", "USER", "USE_FRM", "USE_SYM", "USING", "UTC_DATE_SYM",
  "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES", "VALUE_SYM", "VARBINARY",
  "VARCHAR", "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM",
  "VIEW_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM",
  "XA_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL",
  "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "'('",
  "')'", "','", "'!'", "'{'", "'}'", "';'", "'@'", "'.'", "':'", "$accept",
  "query", "$@1", "opt_end_of_input", "verb_clause", "statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "master_file_def", "create", "$@6", "$@7", "$@8", "$@9", "$@10", "$@11",
  "$@12", "$@13", "$@14", "server_options_list", "server_option",
  "event_tail", "$@15", "ev_schedule_time", "$@16", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@17", "ev_sql_stmt_inner",
  "clear_privileges", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@18",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "$@19", "$@20", "$@21",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "$@22", "sp_proc_stmt",
  "sp_proc_stmt_if", "$@23", "sp_proc_stmt_statement", "$@24",
  "sp_proc_stmt_return", "$@25", "sp_proc_stmt_unlabeled", "$@26",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_open",
  "sp_proc_stmt_fetch", "$@27", "sp_proc_stmt_close", "sp_opt_fetch_noise",
  "sp_fetch_list", "sp_if", "$@28", "$@29", "$@30", "sp_elseifs",
  "case_stmt_specification", "simple_case_stmt", "$@31", "$@32",
  "searched_case_stmt", "$@33", "simple_when_clause_list",
  "searched_when_clause_list", "simple_when_clause", "$@34", "$@35",
  "searched_when_clause", "$@36", "$@37", "else_clause_opt",
  "sp_labeled_control", "$@38", "sp_opt_label", "sp_labeled_block", "$@39",
  "sp_unlabeled_block", "$@40", "sp_block_content", "$@41",
  "sp_unlabeled_control", "$@42", "$@43", "$@44", "$@45",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@46", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "ts_wait", "size_number", "create2", "create2a", "$@47",
  "create3", "$@48", "$@49", "opt_create_partitioning", "opt_partitioning",
  "partitioning", "$@50", "have_partitioning", "partition_entry", "$@51",
  "partition", "part_type_def", "$@52", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@53", "$@54", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@55", "part_name",
  "opt_part_values", "$@56", "$@57", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@58", "$@59",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@60", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "$@61", "$@62", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@63", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "udf_type", "create_field_list",
  "field_list", "field_list_item", "column_def", "key_def",
  "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@64", "type", "$@65", "$@66",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "ws_nweights", "$@67", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "init_key_options", "key_alg", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "$@68", "$@69", "$@70", "$@71", "$@72", "$@73",
  "$@74", "alter_user_list", "alter_user", "opt_user_password_expiration",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@75", "$@76", "$@77",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@78", "add_part_extra", "reorg_partition_rule", "$@79",
  "reorg_parts_rule", "$@80", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "$@81", "$@82", "$@83",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "$@84", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "$@85", "opt_checksum_type", "repair",
  "$@86", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "$@87", "binlog_base64_event", "check", "$@88",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "$@89", "opt_no_write_to_binlog", "rename", "$@90", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@91",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@92",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@93", "cache_keys_spec", "$@94",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "$@95", "select_paren_derived", "$@96", "select_init2",
  "$@97", "select_part2", "select_options_and_item_list", "$@98",
  "table_expression", "from_clause", "opt_from_clause",
  "table_reference_list", "select_options", "select_option_list",
  "select_option", "opt_select_lock_type", "select_item_list",
  "select_item", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@99", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@100", "$@101", "$@102",
  "variable", "$@103", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "$@104", "gorder_list",
  "in_sum_expr", "$@105", "cast_type", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "opt_expr", "opt_else", "when_list",
  "table_ref", "join_table_list", "esc_table_ref", "derived_table_list",
  "join_table", "$@106", "$@107", "$@108", "$@109", "$@110", "$@111",
  "$@112", "normal_join", "opt_use_partition", "use_partition",
  "table_factor", "$@113", "select_derived_union", "$@114",
  "select_init2_derived", "select_part2_derived", "$@115",
  "select_derived", "$@116", "select_derived2", "$@117", "$@118",
  "get_select_lex", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@119",
  "$@120", "index_hints_list", "opt_index_hints_list", "$@121",
  "opt_key_definition", "$@122", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "opt_where_clause", "$@123", "opt_having_clause", "$@124", "opt_escape",
  "opt_group_clause", "$@125", "$@126", "group_list", "olap_opt",
  "alter_order_clause", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "$@127", "order_list", "order_dir",
  "opt_limit_clause", "limit_clause", "$@128", "limit_options",
  "limit_option", "delete_limit_clause", "ulong_num", "real_ulong_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "opt_procedure_analyse_clause", "$@129", "opt_procedure_analyse_params",
  "procedure_analyse_param", "select_var_list_init", "$@130",
  "select_var_list", "select_var_ident", "opt_into", "into", "$@131",
  "into_destination", "$@132", "$@133", "do", "$@134", "drop", "$@135",
  "$@136", "$@137", "$@138", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "if_exists", "opt_temporary", "drop_ts_options_list",
  "drop_ts_options", "drop_ts_option", "insert", "$@139", "$@140",
  "replace", "$@141", "$@142", "insert_lock_option", "replace_lock_option",
  "insert2", "insert_table", "insert_field_spec", "$@143", "fields",
  "insert_values", "$@144", "$@145", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "no_braces", "$@146",
  "opt_values", "values", "expr_or_default", "opt_insert_update", "$@147",
  "$@148", "update", "$@149", "$@150", "$@151", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@152", "single_multi", "$@153", "$@154",
  "$@155", "table_wild_list", "table_wild_one", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "$@156",
  "opt_table_sym", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@157", "show_param", "$@158", "$@159",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "$@160", "$@161", "explanable_command", "describe_command",
  "opt_extended_describe", "opt_describe_column", "flush", "$@162",
  "flush_options", "$@163", "$@164", "opt_flush_lock", "$@165",
  "flush_options_list", "flush_option", "opt_table_list", "reset", "$@166",
  "reset_options", "reset_option", "$@167", "slave_reset_options", "purge",
  "$@168", "purge_options", "purge_option", "kill", "kill_option", "use",
  "load", "$@169", "$@170", "$@171", "$@172", "data_or_xml", "opt_local",
  "load_data_lock", "opt_duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_ident", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "ident", "label_ident", "ident_or_text", "user", "keyword", "keyword_sp",
  "set", "$@173", "start_option_value_list", "$@174", "$@175", "$@176",
  "start_option_value_list_following_option_type", "$@177",
  "option_value_list_continued", "option_value_list", "$@178", "$@179",
  "option_value", "$@180", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "$@181", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "$@182",
  "table_or_tables", "table_lock_list", "table_lock", "lock_option",
  "unlock", "$@183", "handler", "$@184", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "$@185",
  "handler_rkey_mode", "revoke", "$@186", "revoke_command", "grant",
  "$@187", "grant_command", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "object_privilege", "$@188",
  "$@189", "$@190", "$@191", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "grant_user", "opt_column_list", "column_list", "column_list_id",
  "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "$@192", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_clause", "union_list", "$@193",
  "union_opt", "opt_union_order_or_limit", "union_order_or_limit", "$@194",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "$@195", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@196",
  "view_list_opt", "view_list", "view_select", "$@197", "view_select_aux",
  "$@198", "create_view_select_paren", "$@199", "create_view_select",
  "$@200", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@201", "udf_tail",
  "sf_tail", "$@202", "$@203", "$@204", "$@205", "$@206", "sp_tail",
  "$@207", "$@208", "$@209", "$@210", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "$@211",
  "opt_migrate", "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   124,    38,    45,    43,    42,
      47,    37,    94,   126,    40,    41,    44,    33,   123,   125,
      59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   654,   655,   656,   655,   655,   657,   657,   658,   658,
     659,   659,   659,   659,   659,   659,   659,   659,   659,   659,
     659,   659,   659,   659,   659,   659,   659,   659,   659,   659,
     659,   659,   659,   659,   659,   659,   659,   659,   659,   659,
     659,   659,   659,   659,   659,   659,   659,   659,   659,   659,
     659,   659,   659,   659,   659,   659,   659,   659,   659,   659,
     659,   659,   660,   661,   661,   662,   663,   663,   665,   664,
     666,   666,   667,   667,   668,   670,   669,   672,   671,   673,
     671,   674,   674,   675,   675,   675,   675,   675,   675,   675,
     676,   676,   677,   677,   678,   679,   679,   680,   680,   681,
     681,   682,   682,   683,   684,   684,   685,   685,   686,   687,
     687,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   689,   689,   689,   690,   691,   691,   691,   691,
     693,   692,   694,   695,   692,   696,   697,   692,   698,   699,
     692,   700,   692,   701,   692,   692,   692,   692,   692,   702,
     702,   703,   703,   703,   703,   703,   703,   703,   705,   704,
     707,   706,   706,   708,   708,   708,   708,   709,   709,   710,
     710,   711,   711,   712,   712,   713,   713,   715,   714,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   717,   718,   718,   719,   719,   720,   720,   721,
     721,   721,   721,   721,   721,   721,   722,   722,   722,   723,
     723,   725,   724,   726,   726,   727,   727,   728,   728,   729,
     729,   730,   730,   731,   732,   733,   733,   734,   734,   735,
     736,   736,   736,   736,   737,   737,   738,   738,   739,   739,
     741,   740,   740,   742,   740,   743,   740,   744,   744,   745,
     745,   746,   747,   747,   748,   749,   749,   750,   750,   750,
     750,   750,   751,   752,   752,   753,   753,   754,   754,   755,
     755,   756,   756,   756,   757,   757,   757,   757,   757,   757,
     757,   757,   757,   757,   757,   757,   758,   759,   760,   760,
     760,   761,   761,   762,   762,   763,   764,   764,   765,   765,
     766,   767,   767,   768,   769,   769,   769,   769,   769,   769,
     769,   769,   769,   769,   769,   769,   769,   770,   770,   771,
     772,   771,   773,   773,   773,   773,   773,   773,   773,   773,
     773,   773,   773,   773,   773,   775,   774,   777,   776,   779,
     778,   781,   780,   782,   783,   784,   786,   785,   787,   788,
     788,   788,   789,   789,   791,   792,   793,   790,   794,   794,
     794,   795,   795,   797,   798,   796,   800,   799,   801,   801,
     802,   802,   804,   805,   803,   807,   808,   806,   809,   809,
     811,   810,   812,   812,   814,   813,   816,   815,   818,   817,
     819,   820,   821,   819,   822,   823,   819,   824,   824,   825,
     825,   825,   826,   827,   828,   829,   829,   830,   830,   831,
     832,   833,   833,   835,   834,   836,   836,   836,   837,   837,
     837,   838,   838,   839,   839,   839,   840,   840,   840,   840,
     840,   840,   840,   840,   841,   841,   842,   842,   842,   843,
     843,   843,   843,   843,   844,   844,   845,   845,   845,   846,
     846,   846,   846,   846,   846,   846,   847,   847,   848,   848,
     848,   849,   849,   849,   850,   851,   852,   853,   854,   855,
     855,   855,   856,   857,   858,   859,   860,   861,   862,   863,
     864,   865,   865,   866,   866,   867,   867,   867,   867,   868,
     869,   868,   870,   871,   870,   872,   870,   873,   874,   874,
     876,   875,   877,   879,   878,   880,   881,   882,   881,   881,
     881,   881,   881,   883,   883,   884,   884,   885,   885,   886,
     886,   887,   888,   889,   890,   891,   891,   892,   893,   892,
     894,   892,   895,   895,   896,   897,   898,   898,   899,   899,
     900,   900,   902,   901,   903,   904,   905,   904,   906,   904,
     907,   907,   908,   908,   909,   909,   911,   912,   910,   913,
     913,   914,   914,   915,   915,   916,   916,   918,   917,   919,
     920,   920,   921,   921,   922,   922,   922,   922,   922,   922,
     922,   922,   924,   925,   923,   926,   926,   927,   927,   928,
     928,   929,   929,   930,   930,   931,   931,   932,   933,   933,
     934,   934,   935,   935,   936,   936,   936,   937,   937,   937,
     937,   937,   937,   937,   937,   937,   937,   937,   937,   937,
     937,   937,   937,   937,   937,   937,   938,   937,   937,   937,
     937,   937,   937,   937,   937,   937,   937,   937,   939,   940,
     941,   942,   943,   943,   943,   943,   943,   943,   944,   944,
     944,   945,   945,   945,   945,   946,   947,   947,   948,   948,
     949,   949,   950,   950,   950,   950,   950,   950,   951,   951,
     952,   953,   953,   954,   956,   955,   957,   957,   957,   957,
     957,   957,   957,   957,   957,   957,   957,   957,   957,   957,
     957,   957,   957,   957,   957,   957,   957,   957,   957,   957,
     957,   957,   957,   957,   957,   957,   957,   957,   957,   957,
     957,   958,   957,   959,   957,   957,   957,   960,   960,   960,
     960,   960,   960,   960,   960,   961,   962,   962,   963,   963,
     964,   964,   964,   964,   964,   965,   965,   965,   965,   965,
     966,   966,   966,   967,   967,   967,   968,   969,   969,   970,
     970,   970,   971,   971,   972,   972,   973,   973,   973,   974,
     974,   974,   974,   975,   975,   976,   976,   977,   977,   978,
     978,   979,   979,   979,   979,   979,   979,   979,   979,   979,
     979,   979,   979,   979,   979,   979,   979,   979,   980,   981,
     982,   982,   983,   983,   984,   984,   985,   985,   986,   986,
     987,   987,   988,   988,   989,   990,   990,   991,   991,   992,
     992,   993,   993,   993,   994,   994,   994,   995,   995,   995,
     995,   995,   995,   995,   996,   996,   998,   997,   999,   999,
    1000,  1001,  1001,  1001,  1001,  1002,  1003,  1004,  1004,  1005,
    1006,  1006,  1007,  1007,  1008,  1008,  1009,  1010,  1010,  1011,
    1011,  1012,  1012,  1012,  1012,  1013,  1013,  1013,  1013,  1013,
    1014,  1014,  1014,  1014,  1014,  1015,  1016,  1016,  1017,  1017,
    1018,  1018,  1019,  1019,  1019,  1020,  1020,  1021,  1022,  1023,
    1024,  1024,  1025,  1025,  1026,  1026,  1027,  1027,  1028,  1028,
    1029,  1029,  1030,  1030,  1031,  1031,  1032,  1032,  1033,  1033,
    1034,  1035,  1035,  1036,  1036,  1036,  1037,  1037,  1038,  1038,
    1039,  1039,  1040,  1040,  1041,  1041,  1043,  1042,  1044,  1042,
    1042,  1045,  1042,  1046,  1042,  1047,  1042,  1048,  1042,  1049,
    1042,  1042,  1042,  1042,  1042,  1042,  1042,  1050,  1050,  1051,
    1052,  1052,  1052,  1052,  1053,  1053,  1053,  1053,  1054,  1054,
    1055,  1055,  1056,  1056,  1057,  1057,  1057,  1057,  1057,  1057,
    1057,  1057,  1057,  1057,  1058,  1057,  1057,  1059,  1057,  1060,
    1057,  1057,  1057,  1057,  1057,  1057,  1057,  1061,  1062,  1062,
    1064,  1063,  1065,  1065,  1065,  1067,  1066,  1068,  1069,  1068,
    1070,  1070,  1071,  1072,  1072,  1073,  1074,  1074,  1074,  1075,
    1074,  1076,  1077,  1074,  1074,  1074,  1074,  1074,  1074,  1074,
    1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,  1074,
    1078,  1078,  1078,  1078,  1078,  1079,  1079,  1080,  1080,  1081,
    1081,  1082,  1082,  1083,  1083,  1083,  1084,  1084,  1084,  1085,
    1085,  1085,  1085,  1087,  1086,  1086,  1088,  1089,  1089,  1090,
    1090,  1091,  1091,  1091,  1092,  1093,  1093,  1094,  1094,  1095,
    1095,  1096,  1096,  1097,  1097,  1098,  1098,  1099,  1099,  1100,
    1100,  1101,  1101,  1101,  1101,  1101,  1103,  1102,  1104,  1104,
    1104,  1106,  1105,  1107,  1107,  1108,  1108,  1109,  1109,  1109,
    1111,  1110,  1112,  1114,  1113,  1115,  1115,  1116,  1116,  1117,
    1117,  1117,  1117,  1117,  1117,  1119,  1118,  1120,  1120,  1120,
    1122,  1121,  1121,  1123,  1123,  1124,  1124,  1125,  1127,  1126,
    1128,  1128,  1129,  1129,  1130,  1131,  1132,  1132,  1134,  1133,
    1135,  1135,  1136,  1136,  1137,  1138,  1140,  1139,  1142,  1141,
    1143,  1143,  1144,  1144,  1145,  1146,  1146,  1148,  1147,  1147,
    1150,  1149,  1149,  1152,  1151,  1153,  1153,  1153,  1155,  1154,
    1156,  1157,  1158,  1158,  1159,  1159,  1160,  1160,  1161,  1161,
    1162,  1162,  1162,  1162,  1163,  1163,  1163,  1164,  1164,  1164,
    1165,  1165,  1166,  1166,  1166,  1166,  1166,  1167,  1167,  1168,
    1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,
    1169,  1169,  1169,  1169,  1169,  1169,  1170,  1170,  1170,  1170,
    1170,  1170,  1170,  1170,  1170,  1170,  1170,  1170,  1170,  1170,
    1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,  1171,
    1171,  1171,  1171,  1171,  1171,  1172,  1172,  1173,  1173,  1174,
    1174,  1175,  1175,  1176,  1176,  1176,  1176,  1176,  1176,  1177,
    1177,  1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,
    1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,
    1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,  1178,
    1178,  1179,  1179,  1179,  1179,  1179,  1179,  1179,  1179,  1179,
    1179,  1179,  1179,  1179,  1179,  1179,  1179,  1179,  1179,  1179,
    1179,  1179,  1179,  1179,  1179,  1179,  1179,  1179,  1180,  1180,
    1180,  1180,  1180,  1180,  1180,  1180,  1180,  1180,  1180,  1180,
    1180,  1180,  1180,  1180,  1180,  1180,  1180,  1180,  1180,  1180,
    1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,
    1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,  1181,
    1181,  1181,  1181,  1181,  1181,  1182,  1182,  1182,  1182,  1182,
    1182,  1182,  1182,  1184,  1183,  1183,  1185,  1185,  1186,  1186,
    1187,  1187,  1188,  1188,  1189,  1189,  1190,  1191,  1191,  1191,
    1191,  1191,  1191,  1191,  1192,  1193,  1191,  1191,  1191,  1191,
    1191,  1191,  1191,  1191,  1191,  1191,  1191,  1194,  1191,  1196,
    1195,  1197,  1197,  1197,  1198,  1198,  1199,  1199,  1200,  1201,
    1200,  1202,  1202,  1204,  1203,  1205,  1205,  1205,  1205,  1205,
    1205,  1205,  1205,  1205,  1205,  1205,  1206,  1206,  1207,  1207,
    1208,  1208,  1209,  1209,  1210,  1210,  1211,  1211,  1212,  1212,
    1213,  1213,  1214,  1215,  1215,  1216,  1216,  1217,  1217,  1218,
    1217,  1219,  1217,  1220,  1217,  1217,  1221,  1217,  1222,  1217,
    1217,  1223,  1217,  1224,  1217,  1217,  1225,  1225,  1225,  1226,
    1226,  1227,  1229,  1228,  1228,  1228,  1230,  1231,  1230,  1232,
    1234,  1233,  1236,  1235,  1238,  1239,  1237,  1240,  1241,  1242,
    1242,  1243,  1243,  1243,  1243,  1244,  1244,  1246,  1245,  1247,
    1245,  1248,  1248,  1249,  1250,  1249,  1252,  1251,  1253,  1253,
    1254,  1254,  1255,  1255,  1256,  1256,  1257,  1257,  1257,  1257,
    1257,  1257,  1257,  1257,  1257,  1257,  1257,  1257,  1258,  1258,
    1258,  1258,  1258,  1258,  1258,  1258,  1258,  1259,  1259,  1259,
    1259,  1260,  1260,  1260,  1261,  1261,  1262,  1262,  1263,  1264,
    1263,  1265,  1266,  1265,  1267,  1267,  1268,  1269,  1270,  1268,
    1271,  1271,  1272,  1272,  1272,  1273,  1274,  1274,  1275,  1276,
    1276,  1278,  1277,  1279,  1279,  1280,  1280,  1280,  1281,  1281,
    1283,  1282,  1284,  1284,  1284,  1285,  1285,  1285,  1285,  1285,
    1286,  1286,  1287,  1287,  1287,  1287,  1287,  1287,  1288,  1288,
    1288,  1288,  1288,  1289,  1289,  1289,  1289,  1289,  1290,  1290,
    1290,  1290,  1291,  1292,  1292,  1293,  1294,  1293,  1295,  1295,
    1295,  1296,  1298,  1297,  1299,  1299,  1300,  1300,  1301,  1301,
    1303,  1302,  1305,  1306,  1304,  1304,  1304,  1308,  1307,  1310,
    1309,  1311,  1312,  1309,  1309,  1309,  1309,  1309,  1309,  1313,
    1309,  1309,  1309,  1309,  1309,  1309,  1314,  1314,  1315,  1316,
    1317,  1317,  1318,  1319,  1319,  1320,  1320,  1321,  1321,  1322,
    1322,  1322,  1323,  1323,  1325,  1326,  1324,  1328,  1329,  1327,
    1330,  1330,  1330,  1330,  1331,  1331,  1332,  1332,  1333,  1334,
    1334,  1334,  1335,  1334,  1336,  1336,  1337,  1337,  1338,  1337,
    1339,  1337,  1340,  1340,  1341,  1341,  1342,  1343,  1343,  1344,
    1344,  1346,  1345,  1347,  1347,  1348,  1348,  1349,  1349,  1350,
    1351,  1352,  1350,  1354,  1355,  1356,  1353,  1357,  1357,  1358,
    1359,  1359,  1360,  1361,  1361,  1363,  1362,  1365,  1364,  1366,
    1364,  1367,  1364,  1368,  1368,  1369,  1369,  1370,  1370,  1371,
    1371,  1372,  1372,  1372,  1374,  1373,  1375,  1375,  1376,  1376,
    1377,  1377,  1378,  1378,  1378,  1378,  1378,  1378,  1378,  1378,
    1378,  1379,  1379,  1381,  1380,  1382,  1382,  1382,  1382,  1382,
    1382,  1382,  1382,  1382,  1382,  1382,  1382,  1383,  1382,  1384,
    1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,
    1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,
    1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,  1382,
    1382,  1385,  1385,  1385,  1386,  1386,  1387,  1387,  1388,  1388,
    1389,  1389,  1390,  1390,  1391,  1391,  1392,  1392,  1393,  1393,
    1393,  1395,  1394,  1396,  1394,  1397,  1397,  1397,  1397,  1397,
    1397,  1398,  1398,  1399,  1399,  1399,  1399,  1400,  1400,  1400,
    1402,  1401,  1404,  1405,  1403,  1403,  1406,  1406,  1407,  1406,
    1408,  1408,  1409,  1409,  1409,  1409,  1409,  1409,  1409,  1409,
    1409,  1409,  1409,  1409,  1409,  1410,  1410,  1412,  1411,  1413,
    1413,  1415,  1414,  1414,  1414,  1416,  1416,  1418,  1417,  1419,
    1420,  1420,  1421,  1422,  1422,  1422,  1423,  1425,  1426,  1427,
    1428,  1424,  1429,  1429,  1430,  1430,  1431,  1431,  1431,  1432,
    1432,  1432,  1433,  1433,  1434,  1434,  1435,  1435,  1435,  1435,
    1436,  1436,  1437,  1437,  1438,  1438,  1439,  1439,  1440,  1440,
    1441,  1441,  1442,  1442,  1442,  1443,  1443,  1444,  1444,  1445,
    1445,  1446,  1446,  1447,  1448,  1448,  1448,  1448,  1449,  1449,
    1449,  1450,  1451,  1451,  1451,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1453,  1453,  1453,  1453,  1453,
    1454,  1454,  1454,  1455,  1455,  1456,  1456,  1457,  1458,  1458,
    1459,  1459,  1460,  1460,  1460,  1461,  1461,  1461,  1461,  1462,
    1462,  1462,  1463,  1463,  1464,  1465,  1465,  1466,  1467,  1468,
    1469,  1470,  1470,  1471,  1471,  1472,  1472,  1472,  1473,  1473,
    1473,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,
    1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,
    1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,
    1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,
    1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,  1474,
    1474,  1474,  1474,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,  1475,
    1475,  1475,  1475,  1475,  1475,  1477,  1476,  1479,  1478,  1480,
    1478,  1481,  1478,  1478,  1478,  1483,  1482,  1482,  1484,  1484,
    1486,  1485,  1487,  1485,  1489,  1488,  1488,  1490,  1490,  1490,
    1491,  1491,  1491,  1491,  1492,  1492,  1492,  1492,  1493,  1495,
    1494,  1494,  1494,  1494,  1494,  1494,  1496,  1496,  1496,  1497,
    1497,  1497,  1497,  1498,  1499,  1500,  1500,  1501,  1501,  1501,
    1501,  1502,  1502,  1502,  1503,  1503,  1503,  1503,  1503,  1505,
    1504,  1506,  1506,  1507,  1507,  1508,  1509,  1509,  1509,  1509,
    1511,  1510,  1512,  1512,  1513,  1512,  1514,  1514,  1515,  1515,
    1516,  1516,  1516,  1516,  1517,  1516,  1518,  1518,  1518,  1518,
    1518,  1520,  1519,  1521,  1521,  1521,  1521,  1521,  1523,  1522,
    1524,  1524,  1524,  1524,  1525,  1525,  1526,  1526,  1527,  1527,
    1528,  1528,  1530,  1529,  1531,  1529,  1532,  1529,  1533,  1529,
    1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,
    1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,  1529,
    1529,  1529,  1529,  1529,  1529,  1529,  1534,  1534,  1535,  1535,
    1536,  1536,  1536,  1537,  1537,  1537,  1537,  1538,  1538,  1539,
    1539,  1540,  1540,  1540,  1540,  1540,  1541,  1541,  1542,  1542,
    1543,  1544,  1544,  1544,  1544,  1544,  1545,  1545,  1546,  1546,
    1547,  1547,  1548,  1548,  1548,  1548,  1548,  1550,  1549,  1551,
    1551,  1552,  1552,  1552,  1553,  1553,  1553,  1554,  1554,  1555,
    1556,  1556,  1557,  1558,  1559,  1559,  1561,  1560,  1562,  1562,
    1562,  1563,  1563,  1565,  1564,  1566,  1566,  1567,  1567,  1567,
    1568,  1568,  1569,  1570,  1569,  1571,  1572,  1573,  1574,  1574,
    1575,  1575,  1576,  1576,  1576,  1576,  1576,  1576,  1576,  1576,
    1577,  1577,  1577,  1578,  1578,  1578,  1578,  1578,  1579,  1579,
    1579,  1579,  1579,  1579,  1580,  1580,  1581,  1582,  1583,  1583,
    1583,  1584,  1585,  1585,  1585,  1586,  1586,  1586,  1588,  1587,
    1589,  1589,  1590,  1590,  1592,  1591,  1594,  1593,  1593,  1596,
    1595,  1595,  1598,  1597,  1599,  1599,  1599,  1599,  1600,  1600,
    1601,  1601,  1603,  1602,  1604,  1604,  1606,  1607,  1608,  1609,
    1610,  1605,  1612,  1613,  1614,  1615,  1611,  1616,  1616,  1616,
    1616,  1616,  1616,  1617,  1617,  1617,  1618,  1618,  1619,  1619,
    1619,  1620,  1620,  1621,  1622,  1621,  1623,  1623,  1624,  1625
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     5,     0,
       5,     1,     3,     3,     3,     3,     3,     3,     3,     3,
       2,     3,     1,     3,     1,     2,     3,     5,     7,     2,
       3,     1,     3,     3,     2,     3,     1,     3,     1,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       3,     1,     0,     1,     3,     1,     3,     3,     3,     3,
       0,     7,     0,     0,    14,     0,     0,    14,     0,     0,
      14,     0,     6,     0,     3,     4,     4,     3,    11,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     0,    12,
       0,     6,     2,     0,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     3,     4,     0,     2,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     3,     1,     0,     2,     0,     2,     2,
       2,     2,     2,     3,     3,     1,     1,     1,     2,     3,
       3,     0,     4,     0,     3,     0,     1,     3,     1,     0,
       1,     3,     1,     0,     3,     0,     1,     3,     1,     4,
       0,     1,     1,     1,     0,     3,     2,     3,     0,     3,
       0,     5,     5,     0,     7,     0,     6,     1,     1,     1,
       3,     1,     1,     1,     3,     0,     1,     1,     1,     1,
       2,     1,     3,     1,     1,     0,     1,     0,     2,     3,
       5,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     4,     0,     1,
       1,     1,     3,     1,     3,     3,     1,     2,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     0,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     5,     0,     2,     0,
       3,     0,     2,     2,     2,     2,     0,     6,     2,     0,
       2,     1,     1,     3,     0,     0,     0,     7,     0,     2,
       2,     1,     1,     0,     0,     8,     0,     6,     1,     2,
       1,     2,     0,     0,     6,     0,     0,     6,     0,     2,
       0,     5,     0,     1,     0,     5,     0,     2,     0,     5,
       4,     0,     0,     8,     0,     0,     8,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     0,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     2,
       3,     1,     1,     1,     2,     2,     2,     1,     1,     1,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       4,     1,     1,     1,     1,     2,     3,     2,     4,     5,
       0,     5,     0,     0,     5,     0,     7,     1,     0,     1,
       0,     4,     0,     0,     3,     5,     6,     0,     4,     2,
       2,     2,     2,     0,     1,     0,     3,     0,     1,     1,
       3,     1,     4,     3,     3,     0,     2,     0,     0,     7,
       0,    10,     1,     3,     1,     1,     0,     2,     0,     3,
       1,     3,     0,     6,     1,     0,     0,     5,     0,     4,
       1,     1,     1,     3,     1,     3,     0,     0,     5,     1,
       3,     1,     1,     0,     3,     1,     3,     0,     4,     1,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     0,     0,     6,     0,     1,     0,     1,     1,
       2,     1,     1,     0,     1,     1,     2,     1,     0,     3,
       0,     1,     1,     2,     1,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     0,     6,     1,     1,
       3,     4,     4,     2,     2,     2,     3,     3,     4,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       2,     2,     7,     8,     8,     8,     8,     2,     0,     1,
       4,     0,     1,     2,     0,     4,     3,     3,     3,     1,
       2,     1,     1,     3,     2,     3,     2,     2,     1,     3,
       3,     2,     3,     1,     2,     2,     2,     1,     2,     1,
       1,     1,     2,     3,     2,     3,     2,     2,     3,     3,
       3,     0,     6,     0,     6,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       2,     1,     2,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     5,     0,     3,     0,
       2,     3,     0,     1,     2,     1,     1,     1,     1,     3,
       3,     3,     3,     0,     1,     0,     1,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     2,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     0,
       1,     1,     2,     2,     1,     2,     2,     0,     1,     1,
       1,     3,     1,     3,     0,     1,     0,     4,     1,     1,
       1,     0,     1,     2,     1,     1,     2,     1,     3,     3,
       1,     1,     0,     2,     0,     1,     5,     0,     3,     3,
       1,     0,     2,     2,     2,     0,     3,     3,     6,     6,
       1,     1,     2,     2,     2,     1,     2,     2,     1,     1,
       0,     1,     1,     1,     1,     0,     1,     1,     1,     0,
       1,     2,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     1,     2,     2,     2,     3,     2,     1,     1,
       1,     1,     3,     1,     1,     1,     4,     2,     1,     4,
       0,     1,     0,     2,     1,     3,     0,     5,     0,     5,
       7,     0,     5,     0,     5,     0,     5,     0,     4,     0,
      10,     3,     4,     3,     3,     7,     4,     1,     3,     4,
       0,     3,     1,     1,     0,     3,     1,     4,     0,     3,
       0,     2,     0,     1,     0,     2,     2,     2,     2,     1,
       1,     1,     3,     4,     0,     6,     4,     0,     5,     0,
       6,     4,     3,     1,     7,     5,     5,     3,     1,     1,
       0,     5,     0,     3,     2,     0,     5,     0,     0,     6,
       1,     3,     1,     1,     3,     2,     3,     2,     4,     0,
       6,     0,     0,     8,     4,     4,     3,     3,     2,     2,
       6,     5,     3,     5,     5,     1,     1,     1,     1,     1,
       0,     1,     1,     2,     2,     3,     3,     3,     3,     0,
       1,     0,     1,     0,     1,     1,     0,     2,     1,     0,
       1,     1,     1,     0,     6,     3,     3,     0,     1,     1,
       3,     3,     2,     2,     4,     0,     3,     0,     3,     0,
       3,     0,     3,     0,     1,     1,     3,     1,     1,     0,
       2,     1,     3,     3,     3,     1,     0,     5,     0,     1,
       1,     0,     6,     0,     1,     1,     2,     1,     1,     1,
       0,     5,     2,     0,     5,     0,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     0,     5,     0,     1,     1,
       0,     4,     4,     3,     5,     1,     3,     3,     0,     6,
       1,     1,     1,     3,     2,     3,     1,     1,     0,     6,
       1,     1,     1,     3,     3,     4,     0,     6,     0,     2,
       0,     4,     0,     2,     1,     2,     4,     0,     3,     3,
       0,     4,     3,     0,     3,     4,     3,    11,     0,     3,
       8,     2,     0,     1,     1,     1,     0,     1,     2,     1,
       1,     1,     1,     3,     0,     2,     4,     3,     1,     1,
       1,     2,     0,     2,     2,     1,     1,     0,     2,     3,
       3,     3,     2,     3,     4,     3,     4,     3,     4,     1,
       3,     4,     3,     3,     6,     1,     5,     6,     5,     7,
       6,     8,     5,     6,     4,     4,     5,     3,     4,     1,
       3,     3,     3,     3,     3,     3,     5,     5,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     3,     2,     2,     2,     2,     3,     3,     5,     6,
       4,     4,     7,     2,     6,     5,     6,     6,     4,     4,
       5,     4,     6,     2,     4,     4,     4,    10,     6,     8,
       6,     4,     4,     6,     4,     4,     4,     6,     4,     7,
       7,     7,     6,     6,     6,     6,     3,     4,     6,     8,
       2,     2,     8,     8,     6,     6,     1,     6,     6,     8,
       8,     6,     8,     6,     2,     8,     8,     2,     2,     2,
       4,     4,     4,     4,     3,     8,     6,     8,     4,     6,
       4,     4,     4,     6,     8,     4,     3,     6,     4,     6,
       5,     8,     7,    10,     1,     6,     4,     4,     4,     4,
       4,     6,     4,     0,     5,     6,     2,     3,     0,     4,
       0,     3,     0,     1,     1,     3,     2,     4,     5,     4,
       4,     4,     5,     4,     0,     0,     7,     4,     5,     4,
       5,     4,     4,     4,     4,     4,     5,     0,     8,     0,
       3,     3,     1,     4,     0,     1,     0,     2,     0,     0,
       4,     4,     2,     0,     3,     2,     3,     2,     1,     2,
       1,     2,     1,     2,     2,     2,     0,     1,     1,     3,
       1,     3,     1,     3,     0,     1,     0,     2,     4,     5,
       1,     1,     1,     1,     4,     1,     3,     3,     3,     0,
       6,     0,     6,     0,     8,     4,     0,     8,     0,    10,
       6,     0,     8,     0,    10,     6,     1,     2,     2,     0,
       1,     5,     0,     5,     3,     5,     2,     0,     5,     1,
       0,     3,     0,     3,     0,     0,     5,     0,     1,     0,
       1,     0,     2,     3,     3,     1,     1,     0,     7,     0,
       7,     1,     2,     0,     0,     2,     0,     2,     0,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     0,     2,     0,     1,     0,     0,
       3,     0,     0,     3,     2,     0,     0,     0,     0,     6,
       4,     2,     0,     1,     1,     3,     3,     1,     2,     0,
       1,     0,     4,     4,     2,     0,     1,     1,     0,     1,
       0,     3,     1,     3,     3,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     0,     6,     0,     1,
       3,     1,     0,     2,     3,     1,     2,     1,     0,     1,
       0,     3,     0,     0,     7,     2,     1,     0,     3,     0,
       7,     0,     0,     8,     4,     6,     4,     4,     4,     0,
       6,     4,     4,     4,     5,     4,     1,     3,     1,     2,
       1,     3,     1,     0,     2,     0,     1,     0,     1,     1,
       2,     3,     1,     1,     0,     0,     8,     0,     0,     6,
       0,     1,     1,     1,     1,     1,     2,     1,     1,     1,
       3,     4,     0,     3,     3,     1,     2,     2,     0,     3,
       0,     5,     3,     1,     3,     1,     3,     1,     1,     0,
       1,     0,     4,     0,     1,     3,     1,     1,     1,     0,
       0,     0,     7,     0,     0,     0,    12,     3,     1,     3,
       3,     1,     3,     0,     1,     0,     4,     0,     7,     0,
       5,     0,     6,     1,     3,     2,     4,     0,     2,     0,
       2,     1,     1,     1,     0,     4,     0,     1,     0,     1,
       1,     3,     1,     1,     2,     2,     2,     1,     1,     1,
       1,     0,     3,     0,     3,     2,     4,     4,     3,     4,
       4,     1,     3,     3,     6,     2,     2,     0,     6,     0,
       6,     5,     2,     1,     5,     5,     2,     2,     1,     4,
       3,     2,     3,     2,     2,     1,     3,     4,     3,     3,
       2,     3,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     0,     1,     0,     2,
       0,     1,     1,     1,     0,     2,     0,     2,     0,     2,
       2,     0,     4,     0,     4,     1,     1,     1,     1,     1,
       3,     1,     1,     0,     1,     1,     3,     0,     1,     1,
       0,     4,     0,     0,     5,     1,     0,     3,     0,     3,
       3,     1,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     3,     3,
       1,     0,     3,     1,     2,     0,     1,     0,     3,     3,
       2,     2,     3,     0,     1,     1,     2,     0,     0,     0,
       0,    22,     1,     1,     0,     1,     0,     1,     1,     0,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       2,     2,     2,     1,     1,     3,     5,     1,     1,     1,
       1,     1,     3,     4,     5,     1,     5,     3,     2,     1,
       3,     2,     2,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     0,     3,     0,
       3,     0,     3,     3,     5,     0,     3,     2,     0,     2,
       0,     2,     0,     4,     0,     3,     1,     1,     1,     1,
       0,     1,     1,     1,     0,     2,     2,     2,     3,     0,
       4,     4,     6,     2,     3,     3,     1,     3,     3,     1,
       1,     3,     3,     1,     3,     2,     2,     2,     2,     2,
       1,     1,     4,     4,     1,     1,     1,     1,     1,     0,
       4,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       0,     3,     4,     3,     0,     7,     1,     2,     1,     1,
       1,     1,     1,     1,     0,     5,     1,     1,     1,     1,
       1,     0,     4,     6,     6,     6,     7,     5,     0,     4,
       8,     8,     8,     6,     0,     1,     1,     2,     0,     1,
       1,     3,     0,     3,     0,     3,     0,     3,     0,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     2,     0,     1,     3,     1,
       2,     2,     2,     1,     3,     3,     1,     1,     3,     1,
       3,     4,     5,     4,     6,     1,     0,     3,     3,     1,
       1,     0,     2,     2,     2,     2,     0,     2,     0,     3,
       2,     1,     2,     2,     2,     2,     2,     0,     3,     0,
       1,     0,     3,     2,     0,     1,     2,     0,     1,     4,
       4,     5,     2,     3,     0,     1,     0,     4,     0,     1,
       1,     0,     1,     0,     2,     2,     1,     0,     1,     1,
       3,     4,     1,     0,     5,     3,     0,     0,     0,     1,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     1,     2,
       1,     2,     3,     3,     3,     0,     3,     3,     0,     7,
       0,     3,     1,     3,     0,     3,     0,     3,     4,     0,
       2,     3,     0,     3,     0,     3,     4,     4,     1,     1,
       0,     2,     0,    12,     7,     6,     0,     0,     0,     0,
       0,    14,     0,     0,     0,     0,    11,     4,     4,     3,
       4,     3,     2,     1,     3,     5,     1,     1,     0,     1,
       1,     0,     2,     0,     0,     3,     0,     2,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2656,  1117,  2587,     0,     0,     0,     0,     0,     0,
    2589,   153,    63,  1745,  1861,  1862,  1647,  1675,     2,     0,
    1117,   298,   202,     0,    75,  1684,     0,  1913,     0,     0,
    1117,   513,     0,  1907,     0,     0,  1117,  1687,  1897,   275,
     202,  2589,     0,  1168,  2395,  1783,     0,     0,     0,  1766,
       0,  2470,  1733,     0,     0,  1157,     0,     3,     8,    19,
       0,    39,    24,    29,    14,    18,    13,    52,    46,    26,
      37,    10,    54,    55,    16,    43,    11,    12,    15,    35,
      42,    36,    38,    50,  1154,    22,    23,    30,    44,    59,
      20,    56,    53,    21,  1863,    25,    45,    40,    32,    60,
      33,    51,    34,    58,    28,    47,    27,     9,    17,    48,
      49,    41,    61,    31,    57,     0,   962,     0,     0,     0,
       0,     0,     0,     0,   202,   937,  2654,  2655,  2656,  1119,
    1118,     0,  2589,  2018,  1102,  1128,  2083,  2084,  2085,  2086,
    2087,  2088,  2089,  2090,  2032,  2091,  2093,  2092,  2094,  2095,
    2033,  2034,  2096,  2097,  2098,  2100,  2099,  2101,  2035,  2036,
    2102,  2103,  2104,  2105,  2037,  2038,  2106,  2108,  2107,  2039,
    2109,  2110,  2111,  2114,  2113,  2112,  2040,  2115,  2041,  2116,
    2117,  2118,  2119,  2120,  2121,  2122,  2124,  2123,  2042,  2125,
    2126,  2127,  2128,  2129,  2131,  2130,  2132,  2133,  2134,  2043,
    2135,  2136,  2137,  2138,  2139,  2140,  2141,  2142,  2143,  2044,
    2144,  2145,  2146,  2166,  2045,  2147,  2150,  2149,  2148,  2151,
    2152,  2153,  2155,  2154,  2156,  2157,  2046,  2158,  2159,  2160,
    2161,  2162,  2164,  2163,  2168,  2169,  2170,  2171,  2047,  2048,
    2049,  2165,  2167,  2375,  2172,  2174,  2173,  2175,  2177,  2176,
    2050,  2178,  2051,  2052,  2179,  2180,  2015,  2181,  2016,  2182,
    2184,  2185,  2186,  2191,  2053,  2183,  2187,  2188,  2189,  2190,
    2192,  2054,  2193,  2194,  2195,  2196,  2197,  2198,  2199,  2200,
    2201,  2202,  2224,  2213,  2215,  2206,  2208,  2209,  2211,  2207,
    2214,  2212,  2218,  2217,  2219,  2220,  2221,  2222,  2223,  2216,
    2204,  2210,  2205,  2225,  2226,  2227,  2203,  2228,  2229,  2230,
    2231,  2232,  2233,  2234,  2235,  2236,  2237,  2238,  2240,  2239,
    2241,  2242,  2243,  2244,  2245,  2246,  2248,  2247,  2249,  2250,
    2251,  2252,  2254,  2253,  2256,  2257,  2055,  2255,  2258,  2259,
    2260,  2261,  2262,  2263,  2056,  2057,  2058,  2264,  2265,  2059,
    2266,  2268,  2267,  2269,  2270,  2271,  2272,  2273,  2274,  2275,
    2060,  2061,  2062,  2276,  2277,  2278,  2279,  2280,  2281,  2282,
    2283,  2284,  2285,  2286,  2287,  2288,  2289,  2291,  2290,  2292,
    2293,  2294,  2295,  2296,  2297,  2298,  2063,  2299,  2064,  2300,
    2301,  2302,  2303,  2304,  2305,  2306,  2307,  2308,  2065,  2309,
    2066,  2310,  2311,  2312,  2313,  2067,  2314,  2315,  2316,  2318,
    2319,  2317,  2320,  2068,  2321,  2322,  2323,  2069,  2325,  2324,
    2326,  2070,  2328,  2329,  2071,  2327,  2073,  2330,  2331,  2072,
    2074,  2332,  2333,  2334,  2335,  2336,  2338,  2337,  2339,  2340,
    2341,  2342,  2075,  2343,  2344,  2345,  2346,  2076,  2347,  2348,
    2349,  2350,  2351,  2353,  2352,  2354,  2355,  2356,  2357,  2359,
    2361,  2360,  2358,  2362,  2363,  2364,  2365,  2368,  2369,  2370,
    2371,  2366,  2367,  2077,  2372,  2373,  2374,  2376,  2377,  2379,
    2378,  2078,  2079,  2380,  2381,  2082,  2382,  2383,  2386,  2384,
    2385,  2388,  2387,  2389,  2391,  2390,  2080,  2392,  2081,  2393,
    2394,   221,  2021,   204,  2022,  2031,     0,     0,  2462,  2461,
    1086,  1103,  2590,  2591,   608,   887,     0,     0,   888,     0,
     607,   886,   202,  2656,     0,   604,   605,     0,     0,     0,
    1759,     0,  1673,  1673,  1673,     0,     0,  1673,  1673,     0,
    1676,  1673,   202,  1673,     0,    68,  1870,   299,   300,     0,
    2498,     0,     0,     0,  2014,     0,  1690,     0,  1914,  1915,
       0,  1922,     0,  1923,  1917,  2459,     0,     0,     0,     0,
       0,   202,  1120,     0,  1743,     0,   265,   274,   276,   277,
     273,  2491,  2591,  2602,  1155,  1163,  1579,  1176,     0,  1840,
     277,  1073,  1057,  1073,  1767,  1764,     0,     0,  1743,  1916,
    2716,     0,     0,     0,  2712,     0,  2717,     0,  1157,     0,
       0,     1,     5,     0,     0,  2161,  2049,  2268,  1853,  1851,
    2009,     0,   928,   963,     0,   933,     0,   931,  2027,  2026,
    2025,     0,   944,   943,   941,     0,   477,   926,     0,     0,
    2665,   935,  1100,  2588,     0,   223,     0,    77,    79,     0,
       0,     0,  2594,     0,     0,     0,     0,   157,     0,     0,
       0,   154,  2665,  2665,  2656,  2658,  2660,   608,   606,     0,
       0,     0,  1763,  1762,  1761,     0,  1759,  2084,  2032,  2095,
       0,  1982,     0,     0,     0,  1444,     0,  2037,     0,  2109,
    2111,  2042,     0,     0,  1197,  1197,   759,     0,     0,     0,
    2133,  2134,  1988,     0,     0,     0,  1979,  1989,  2049,  2174,
    2175,     0,  1981,  2180,     0,     0,     0,     0,  2197,  1986,
       0,     0,  2235,  2237,     0,     0,  2241,  2242,  2243,  2244,
    1965,  1252,     0,   759,  1978,  1985,  2261,  1971,  2269,  2274,
    2275,     0,  2284,     0,     0,  2313,     0,  2319,  2317,  2323,
       0,     0,  2350,     0,     0,   759,  1964,  2368,  2369,  2370,
    2371,     0,  1980,  2077,  1987,     0,  2382,  1197,   759,   759,
       0,     0,     0,  2389,  2391,  2394,     0,     0,     0,  2626,
    1251,     0,  1409,     0,  1326,  1438,  1209,  1215,  1229,     0,
    1244,  1262,  1263,  1265,  1364,  1264,  1270,  1269,  1648,  1975,
    1268,  1267,  1976,  1977,  1261,  1999,  2021,  1998,     0,     0,
       0,     0,     0,     0,     0,     0,  1677,     0,     0,  1659,
    1673,    70,     0,     0,     0,  2011,  1551,  2473,  2474,     0,
      76,  1692,  1693,  1691,  1041,     0,  1912,     0,  1926,     0,
    1115,   523,   514,     0,  1835,  1834,     0,  1908,  2603,     0,
       0,  1091,  1695,  1744,     0,  1694,  1903,     0,  1901,  1898,
    1900,   266,     0,     0,   296,     0,  2597,  2594,  2604,  1640,
       0,  1588,  1580,     0,  1184,  2639,  2634,  2633,     0,  2636,
    2637,  1182,  2638,  1181,  2635,  2632,     0,  1177,  1179,  1180,
     803,     0,     0,  2417,  2418,  2248,  2269,  2419,  2366,     0,
       0,  2436,  2396,  2401,  2397,     0,     0,   803,  1848,     0,
       0,  1848,     0,  1588,  1838,  1841,     0,  2421,  1815,   884,
     883,   882,  2422,  1834,     0,  1791,  1803,     0,  1768,  1808,
       0,  2423,     0,  1837,     0,  1588,  1848,     0,  1784,     0,
       0,     0,     0,   272,  1078,  1077,  1053,  1074,  1075,     0,
       0,  1056,  1058,  1059,  1055,     0,  2729,  2471,  1041,  1970,
    1969,  2019,  2713,  1968,  2721,  2723,  2709,  2711,  2718,     0,
    2608,  1168,     6,    62,     0,     0,  1867,  2663,  2664,  2662,
     819,     0,  1197,  2028,  2657,   205,   942,     0,   478,   205,
       0,     0,     0,     0,     0,   479,   480,   412,   819,   946,
     947,     0,   939,     0,     0,   938,  2665,     0,     0,  1130,
    1132,  1131,  1148,   225,   222,   203,     0,     0,  1088,  1666,
    1668,  1105,  2593,     0,     0,  2595,  2599,  1250,  1249,     0,
     151,   156,     0,     0,     0,  2565,   155,  2559,  2661,     0,
     608,     0,     0,     0,  2653,  2641,  2648,  2649,  2652,  2651,
    2650,     0,  2647,  2640,  2643,  2644,  2646,  2645,  2665,  2659,
       0,   889,   889,   889,     0,  1746,  1749,  1753,  1757,  1760,
       0,     0,  1556,  1283,  1556,  1556,  1556,  1445,     0,     0,
       0,     0,     0,     0,     0,     0,  1556,     0,  1320,  1293,
       0,  1321,     0,     0,     0,  1990,     0,     0,     0,  2626,
       0,     0,     0,     0,  1414,     0,     0,     0,  2626,     0,
       0,     0,     0,     0,  1440,  1442,  1998,  1556,     0,     0,
    1556,     0,     0,     0,     0,     0,  1202,   799,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1556,  1556,     0,     0,  1556,  1334,  1992,     0,     0,
       0,  1991,     0,     0,     0,  1984,  1983,  1966,     0,  1337,
    1339,  1338,     0,  1556,  1556,     0,     0,     0,  1273,  1272,
    1274,     0,     0,     0,     0,     0,     0,  1248,  1247,  1246,
    1245,     0,     0,     0,  1253,     0,  1254,  1255,     0,  1256,
    1257,  1258,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1275,     0,     0,     0,  1967,  1373,     0,  1674,  1654,
    1661,  1656,     0,  1677,  1657,  1665,   492,   491,  1682,  1683,
    1663,  1678,  1679,     0,  1662,  2557,  1658,     0,  1649,     0,
      69,     0,  1893,     0,     0,     0,  1889,  1891,  1890,     0,
       0,  1894,     0,  1892,  1871,  1875,  1881,  1872,     0,     0,
     297,   301,   303,     0,   306,  2508,  2523,  2524,  2520,  2525,
    2543,  2526,  2530,     0,  2522,  2514,     0,  2529,     0,  2518,
    2527,     0,  2512,     0,  2528,  2533,  2544,  2516,  2521,  2499,
       0,  2506,  2510,  1552,  1553,     0,  2472,     0,  2010,  1042,
       0,     0,  1138,  1927,  1928,  1924,  1551,  2460,  2463,     0,
     524,     0,     0,   535,     0,     0,    65,    66,     0,  1122,
       0,  1121,  1125,     0,     0,     0,  1698,  1688,  1697,  1479,
    1904,  1905,     0,   264,   289,   284,   292,   286,   288,   287,
     293,   294,   295,   290,   285,   291,   278,     0,  2508,     0,
    2492,     0,  2598,     0,  2600,  2617,  1164,  2605,  1632,  1581,
    1590,  1184,  1589,  1482,  1558,     0,     0,  1166,     0,  1189,
    1169,  1188,  1192,  1190,  1998,  1178,   802,     0,   805,   807,
    1717,  1718,   806,   815,     0,   804,     0,     0,     0,  2424,
       0,   811,   813,   812,  2433,   810,     0,     0,  2408,  2429,
    1844,     0,     0,  1814,     0,   608,     0,     0,     0,     0,
       0,     0,  1785,     0,     0,   651,  1807,  1842,  1843,  1848,
       0,     0,  1848,     0,  1820,  1838,     0,  1848,  1780,     0,
       0,  1772,  1777,  1773,     0,  1779,  1778,  1781,  1769,  1770,
    1844,  1796,  1822,  1838,  1806,  1813,     0,  1795,  1802,     0,
    1811,  1838,  1838,  1848,  1848,  1079,     0,  1062,  1063,     0,
       0,  1765,  1482,     0,     0,  2710,  2724,  2708,  2719,  2720,
    2707,  1159,  2609,  1156,  2610,     0,  1158,     7,     4,  1866,
       0,  1855,  1856,  1857,  1858,  1859,  1854,  1852,  1868,  1869,
     820,   819,   599,   602,   601,     0,     0,  2030,     0,   934,
       0,   466,   932,     0,     0,   444,   423,   444,   481,  1039,
    1719,  1039,     0,  1719,  1719,  1039,  1719,     0,     0,  1719,
    1719,     0,     0,  1719,     0,     0,  1039,     0,  1719,     0,
    1026,     0,     0,  1719,  1719,  1719,  1719,  1719,  1039,     0,
       0,  1719,   512,  1719,     0,     0,  1049,     0,     0,  1719,
    1719,  1719,  1719,     0,     0,  1719,     0,  1719,   970,  1025,
     612,   638,   639,   927,   969,   971,   983,   508,     0,  1003,
    1028,  1029,  1027,     0,     0,   954,     0,     0,   936,  1101,
       0,     0,   512,  1148,  1134,  1150,     0,   226,   228,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    78,   109,   131,     0,     0,     0,     0,
       0,     0,     0,    80,    81,  1090,  1089,     0,  1087,  1113,
    1112,  1110,     0,  1111,  1109,  1104,  1106,  1107,  2592,  2596,
     609,   819,   454,     0,   415,     0,     0,     0,     0,     0,
     204,  2702,     0,  2642,   140,   890,     0,     0,     0,  1751,
    1670,  1479,  1672,  2009,     0,     0,     0,  1755,     0,     0,
    1557,  1556,     0,  1423,     0,     0,     0,     0,  1446,     0,
       0,     0,     0,     0,     0,     0,  1394,     0,  1423,  1198,
       0,   760,  1344,     0,     0,     0,     0,     0,     0,  1527,
    1528,  1529,  1530,  1538,  1531,  1532,  1533,  1540,  1545,  1534,
    1535,  1541,  1542,  1543,  1536,  1544,  1539,  1537,  1546,     0,
    1526,     0,     0,  1550,  1547,  1549,  1548,     0,  1415,  1407,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1556,     0,     0,     0,  1556,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1356,     0,     0,     0,     0,     0,  1556,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1316,     0,  2001,  2000,     0,     0,     0,   852,     0,  1277,
       0,  1276,  1490,  1160,  2622,  2627,     0,  2424,  1410,  1412,
       0,  1200,  1199,  1201,  1212,  1205,  1210,  1203,  1207,     0,
    1259,  2090,  1213,     0,     0,  1241,  2626,  1565,  1242,  1227,
    1232,  1233,     0,  1230,  1231,     0,  1235,     0,  1234,  1238,
    1239,  1240,  1243,     0,     0,     0,     0,  1266,  1271,  1439,
    1382,  2002,     0,  1651,  1664,  1836,  1680,  1719,     0,  1043,
       0,     0,    71,    73,  1886,  1883,  1882,  1884,  1888,  1887,
    1885,     0,  1895,  2133,  2368,  2371,   310,     0,   282,   281,
     283,   307,     0,     0,  2509,  2507,  2541,  2540,  2545,     0,
    2542,  2538,  2531,  2566,  2535,     0,  2566,  2537,  2536,  2566,
    2532,  2539,  2566,  2504,     0,  1555,  2170,  2253,     0,  1558,
    2476,  1685,  2728,     0,  1925,     0,     0,     0,  1116,     0,
       0,   522,   521,   520,   519,     0,   537,   517,   525,    67,
       0,     0,  1909,     0,     0,     0,     0,  1093,  1696,     0,
       0,  1669,  1480,  1906,  1902,  1899,     0,     0,  2507,     0,
    2504,  2601,  2619,  2618,  2606,     0,     0,  1646,     0,  1641,
       0,     0,  1165,  1175,  1498,  1497,     0,  1171,  1453,  1174,
    1455,  1452,  1451,  1450,     0,  1497,  1559,  1566,  1185,     0,
    1623,  1624,  1609,  1610,  1608,  1611,  1183,  1612,  1622,     0,
       0,  1191,  1196,  1195,     0,  2438,     0,  2435,  2434,     0,
       0,     0,  2451,  2403,     0,     0,  2400,  2439,  2440,  2443,
       0,     0,     0,     0,     0,  2437,  2366,  2402,  2405,     0,
    2410,  2398,     0,     0,  1846,  1849,  1850,     0,     0,  1830,
    1824,  1823,  1818,  1825,  1819,  1833,  1832,  1831,  1793,  1792,
    1788,  1839,  1829,  1827,  1816,  1848,  1828,  1826,  1774,  1775,
    1776,     0,  1588,     0,  1846,  1821,  1848,  1838,     0,  1848,
    1848,  1810,  1812,     0,  1065,  1076,  1061,  1060,     0,  2714,
    2722,  2726,  1588,  2616,  2614,     0,   600,  1719,  1719,     0,
    2029,     0,     0,     0,     0,     0,     0,     0,   206,   215,
       0,     0,   421,   422,  1719,   420,   467,   468,   471,   472,
     473,     0,     0,     0,     0,     0,     0,     0,     0,   159,
     474,  1719,  1719,   417,   445,   446,   449,   450,   451,   452,
     453,   413,     0,   418,  1040,   920,   879,   878,  1117,  1007,
       0,   682,   920,   875,   880,   880,  1005,  1720,     0,     0,
    1117,     0,     0,     0,     0,     0,  1117,     0,     0,     0,
    1719,     0,  1018,   512,   965,     0,     0,     0,     0,     0,
    1019,     0,     0,   512,   966,  1719,     0,     0,     0,     0,
       0,     0,  1117,     0,     0,   510,     0,  1117,   512,  1052,
    1051,  1050,     0,     0,  1117,  1117,     0,     0,     0,     0,
     644,   645,   643,     0,     0,   636,   613,   819,   967,   509,
     968,   681,     0,  1046,   678,   684,  2005,   948,   950,     0,
     956,   958,  2666,  2667,  2668,  1137,  1129,  1136,  1133,  1148,
    1146,  1135,     0,  1149,   224,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1667,
    1114,  1108,   152,   819,  1719,  1719,  1719,  1719,   419,   455,
     456,   459,   460,   461,   462,   465,   463,   464,     0,     0,
     431,     0,     0,  2560,     0,   168,  2696,     0,     0,   408,
     407,     0,   610,     0,     0,   891,     0,     0,     0,     0,
       0,  1747,     0,  2012,  1754,  1482,  1758,  1757,     0,  1340,
       0,  1387,     0,  1389,  1390,  1391,     0,     0,     0,     0,
       0,  1341,     0,  1291,  1342,  1343,     0,     0,     0,     0,
    1393,     0,   761,     0,     0,  1294,  1295,  1288,  1280,     0,
       0,  1366,     0,     0,  1296,     0,     0,     0,     0,     0,
    1367,  1441,     0,  1443,  2002,     0,  1399,  1348,  1301,     0,
    1397,     0,  1302,  1368,  1369,  1370,  1350,  1351,     0,  1372,
       0,  1352,     0,     0,  1355,     0,     0,  1304,  1403,  1401,
       0,     0,     0,     0,  1405,  1306,     0,     0,     0,  1305,
       0,     0,     0,     0,     0,     0,     0,  1308,     0,  1289,
    1402,  1404,  1358,     0,     0,     0,     0,     0,  1317,     0,
    1172,  1489,  2628,  1160,     0,     0,  2617,  2625,  1281,     0,
       0,  2003,  1206,  1211,  1204,  1208,  2626,     0,     0,     0,
       0,  1225,  1224,     0,     0,     0,  2626,  1565,  1228,  1192,
       0,  1383,  1384,  1436,     0,  1655,  1652,  1681,     0,  2558,
    1045,  1044,  1660,  1043,    74,     0,  1880,  1896,  1873,     0,
     302,   311,   304,   308,   309,   305,  2534,     0,  2515,     0,
    2519,  2513,  2517,     0,     0,  2505,     0,  2511,  2486,  2480,
    2487,  2489,  2483,  2488,  2490,  2481,  2482,  2477,  2484,  1588,
       0,  1139,  1141,  1142,  1140,  1148,     0,     0,  2466,  2467,
    2465,  2464,   527,     0,   545,   536,     0,   548,     0,     0,
       0,  1911,  1910,     0,  1123,  1126,  1127,  1098,  1097,  1099,
    1092,  1094,  1095,   592,  1702,     0,     0,     0,  1708,  1689,
    1699,     0,     0,   279,     0,     0,     0,     0,     0,     0,
    2020,  1645,  1642,     0,  1633,  1635,  1637,  1997,  1582,  1585,
    1598,  1599,  1597,  1591,  1592,  1596,  1595,  1497,  1482,     0,
       0,  1476,  1499,     0,  1499,  1482,  1482,  1482,  1479,  1494,
       0,     0,  1561,     0,  1187,  1194,  1193,  1995,  2002,   818,
     817,   816,   814,     0,     0,     0,     0,  2445,  2446,     0,
       0,  2425,  2426,  2427,     0,  2431,  2407,  2408,     0,  2409,
       0,  2457,  2458,  2455,  2456,  2454,  2430,  1845,     0,  1797,
       0,  1817,  1790,     0,  1809,  1771,  1799,  1789,  1558,  1838,
    1786,  1787,     0,  1085,     0,  1081,  1080,     0,  1054,  1067,
    1734,     0,     0,  2725,  2615,  1860,     0,     0,   930,   209,
     212,   210,     0,   211,     0,     0,   476,   475,     0,  1836,
     469,   163,   162,   164,   165,  1606,  1607,  1603,  1604,  1602,
    1605,   167,   166,   161,   945,     0,     0,     0,  1836,   447,
     424,   425,   428,   429,   430,   683,   921,   990,     0,     0,
       0,   880,   677,   920,   889,   881,   920,   920,  1035,  1036,
       0,     0,  1616,  1617,  1615,  1613,  1614,   623,   620,  1009,
     632,   988,   977,   989,  1000,  1002,     0,   622,   646,     0,
       0,   634,     0,     0,   972,  1016,  1017,  1043,   617,   650,
       0,     0,     0,   659,   660,   658,   640,   647,  1037,  1038,
     618,   619,  1011,     0,  1575,  1577,  1585,   625,   624,     0,
     621,     0,   987,     0,  1022,   995,     0,   657,   655,   652,
     654,   653,   656,   635,   627,   626,   629,   628,   631,   630,
     633,   982,     0,  1039,  1039,  1004,     0,   665,   666,   668,
     669,  2008,     0,  1048,  1006,     0,   670,   679,   671,     0,
       0,   953,     0,   952,   949,     0,     0,     0,   173,  2670,
       0,  1518,   227,   132,   130,   112,  2017,   116,   118,   111,
     136,   137,   114,   115,   117,   121,   120,   122,   123,   126,
     127,   124,   119,   125,   113,   128,   138,   139,   110,     0,
      83,    84,     0,    85,    86,     0,    87,    88,     0,    89,
      82,     0,     0,     0,     0,  1836,   457,     0,     0,  1719,
     414,   432,   433,   436,   437,   438,   439,   440,   443,   441,
     442,     0,  2561,  2563,     0,     0,   229,   663,   664,   662,
     661,     0,  2703,   411,   409,   410,     0,     0,   681,   141,
     508,   611,   614,   913,   915,   914,   905,   904,   142,   145,
     148,  1671,  1757,  1482,  1558,  2010,  1558,     0,  1756,     0,
       0,  1388,  1424,     0,  1447,     0,  1285,   773,   773,   757,
    1432,   753,   773,  1428,   757,  1430,     0,     0,     0,     0,
       0,  1395,  1392,     0,     0,     0,     0,     0,  1418,     0,
       0,     0,  1290,     0,  1378,  1400,  1398,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1406,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   841,   847,   850,   851,   853,   845,     0,
    1360,  1278,  2620,  1173,  1558,     0,  2629,  2631,     0,  2611,
    1490,  2623,   922,  1411,     0,  1222,  1218,     0,  1216,  1564,
    1237,  1236,     0,     0,     0,  1226,  1386,  1374,     0,     0,
    1437,  2004,  1030,   490,  1650,    72,  1876,     0,     0,  2570,
       0,  2569,     0,  2553,  2556,  2009,     0,     0,     0,     0,
    2475,  1729,     0,  1148,  1152,  1918,  2468,  2469,     0,   528,
     529,   531,   533,   523,     0,   515,   518,     0,   527,     0,
    1096,  1176,     0,  1721,  1706,  1713,  1707,     0,     0,     0,
    1705,  1994,  1993,  2000,  2604,     0,  1524,     0,     0,     0,
       0,     0,     0,  2607,   808,  1636,     0,     0,  1586,  1587,
    1584,     0,     0,     0,  2611,  1492,     0,  1478,  1477,  1500,
       0,  1482,  1499,  1499,     0,  1458,  1457,  1456,  1551,  1484,
    1176,  1560,  1567,  1562,  1579,  1186,     0,  2404,     0,     0,
       0,     0,  2450,  2444,  2441,  2442,     0,  2406,  2428,  2412,
    2411,  2414,  2416,  1847,  1588,  1805,  1804,  1782,  1588,  1801,
    1848,     0,     0,     0,     0,     0,  1069,     0,  2715,  2727,
     649,   648,   214,   213,   219,   220,  1620,  1618,  1619,   482,
     493,  1621,   494,   470,   160,   483,   484,   448,     0,   426,
     992,     0,   920,   876,   877,   889,     0,   889,   889,     0,
       0,   976,     0,  1105,     0,   981,   815,   641,     0,  1015,
    1014,     0,     0,   642,     0,   974,     0,  1578,   511,   973,
       0,   997,   979,  1895,  1008,   681,  1047,   857,   749,   698,
     689,   773,   692,   691,   735,   757,   703,   753,   751,   721,
     753,   753,   728,   727,   745,   731,   711,   827,   827,   710,
     748,   827,   732,   730,   734,     0,   736,   753,   741,   729,
     733,   750,   726,   723,   747,   773,   757,   757,   707,   746,
     827,     0,   739,   773,   777,   709,   827,   834,     0,     0,
     773,   775,  2007,     0,     0,   183,     0,     0,   955,     0,
     176,   174,   185,     0,     0,     0,  1521,     0,  1522,  1519,
    1520,     0,   133,   135,    90,     0,    92,    94,    99,     0,
     101,     0,   104,     0,   106,   108,     0,    95,     0,   489,
     488,   487,   486,   458,     0,     0,     0,  1836,   434,  2562,
       0,     0,     0,     0,   230,   232,   233,     0,   240,     0,
     497,     0,   495,     0,   507,     0,  1929,   819,   615,     0,
       0,     0,     0,  1558,  1579,  2013,  1750,     0,  1318,  1448,
       0,     0,   774,  1425,   827,     0,  1434,     0,  1435,   755,
     754,  1427,  1429,  1433,  1431,  1284,  1292,  1365,  1287,  1286,
       0,     0,     0,  1324,  1346,     0,  1325,     0,  1416,     0,
       0,  1298,     0,  1300,     0,     0,  1380,  1349,  1371,  1327,
    1353,     0,  1303,  1279,     0,  1328,     0,  1333,  1331,     0,
    1307,     0,     0,  1314,     0,  1312,     0,  1313,     0,  1315,
    1357,  1359,     0,     0,   852,   838,   839,   840,     0,   842,
     844,   846,     0,     0,  1566,  1491,  2630,  1162,  2621,  2612,
    1172,     0,     0,  1413,  1214,     0,  1223,  1220,     0,  1217,
    1385,  1375,  1653,  1032,  1031,  1878,     0,  1874,   319,   314,
     322,   316,   318,   317,   323,   324,   325,   326,   320,   315,
     321,   313,   312,  2567,     0,  2578,     0,     0,     0,     0,
       0,     0,     0,  1686,  1143,  1148,  1152,     0,  1144,  1929,
     532,     0,     0,   552,     0,   550,   526,     0,  1124,     0,
    1703,  1715,     0,  1723,     0,     0,  1700,  1710,     0,     0,
       0,  1709,   512,     0,   280,     0,  2497,     0,     0,     0,
       0,  1643,  1634,  1585,  1594,  1593,  2617,  1551,  1486,  1482,
    1454,  1482,  1465,     0,     0,  1482,  1461,  1459,  1463,  1516,
       0,     0,     0,  1588,  1996,  2453,  2452,  2448,  2447,  2449,
    2432,     0,     0,  1798,  1800,  1794,  1084,  1083,  1082,  1066,
       0,     0,  1071,  1735,  1738,     0,   427,     0,     0,   991,
       0,     0,     0,     0,     0,     0,  1021,     0,  1046,   978,
    1001,  1024,   985,     0,   986,   777,  1117,  1576,  1023,   996,
     998,  1093,     0,   667,     0,   861,   697,   690,   708,   706,
     762,   752,     0,   762,   762,   821,   832,   830,   824,     0,
     828,   829,   717,   735,   712,     0,   827,   725,   716,   737,
     740,   742,   744,   762,     0,   827,   705,   704,   714,   701,
     762,   785,     0,     0,     0,     0,   781,     0,   855,     0,
       0,   788,   685,   778,   780,     0,     0,   738,   827,   694,
     835,   834,   696,   827,   834,   762,     0,   776,   762,     0,
     951,   184,   172,     0,     0,   957,   959,     0,     0,   960,
    2672,     0,  2674,     0,  1151,     0,   129,     0,    91,     0,
     100,     0,     0,   105,     0,     0,    96,     0,     0,   416,
     485,   435,  2564,     0,     0,  2697,     0,     0,  2695,   243,
     241,   242,     0,   236,   238,   233,     0,     0,     0,   610,
    1931,  1930,   496,   595,   616,     0,     0,     0,  1757,  1752,
    1600,     0,  1449,     0,     0,     0,     0,  1426,     0,     0,
    1396,     0,     0,     0,  1419,     0,     0,     0,     0,     0,
       0,     0,  1282,     0,  1376,     0,     0,     0,     0,     0,
       0,  1311,  1309,  1310,   836,  1362,     0,   849,   843,   841,
     848,     0,  1561,  1161,  2624,   923,  1219,     0,  1034,  1033,
       0,     0,  2568,     0,  2503,  2555,  2554,  2571,  2571,  2571,
    1728,  1727,     0,  1726,  1730,  1145,  1153,     0,   530,     0,
     525,     0,   549,     0,   516,   593,     0,     0,     0,  1724,
    1712,  2608,  1701,  1704,  2002,  1481,  1525,     0,  2494,  2495,
    2493,   809,  1932,  1583,  1487,  1485,  1493,     0,  1450,  1482,
    1482,     0,  1450,     0,     0,     0,  1483,  1513,  1495,  1568,
    1585,  1563,  1625,  2413,  2415,  1068,     0,     0,  1064,     0,
    1558,     0,   994,     0,   680,     0,     0,     0,  1585,   918,
       0,     0,     0,     0,     0,     0,     0,  1020,  1972,  1010,
     512,  1012,   975,     0,   980,   637,     0,   860,     0,   865,
     766,   767,   768,   718,   763,   765,     0,   720,   688,   823,
     822,   826,     0,   825,   834,   713,   743,   719,     0,   715,
     702,   791,   792,   794,   793,   790,   800,   783,   801,     0,
       0,   795,   796,   797,   789,   779,   787,   782,   693,   695,
     699,   700,   686,     0,   687,  2006,   170,   175,   186,   187,
     940,  2671,     0,  2669,     0,  1147,  1523,   134,    93,   102,
     103,   107,     0,     0,     0,  2694,   181,     0,   231,   815,
     234,  2704,   240,     0,     0,   498,   500,   508,   596,     0,
       0,     0,     0,     0,  1748,  1319,   771,   769,   772,   770,
     758,     0,  1322,  1323,  1347,     0,  1417,  1408,  1345,     0,
    1299,  1377,     0,     0,  1354,  1329,  1332,  1330,  1335,  1336,
       0,  1361,     0,  1579,  1221,  1879,  1877,     0,     0,  2576,
    2576,  2576,  2485,     0,     0,     0,     0,   538,     0,   555,
     554,   551,  1172,  1714,  1716,  1722,  1711,  2496,     0,  1940,
       0,  1466,     0,  1470,  1475,  1471,     0,  1462,  1460,     0,
    1517,     0,  1172,     0,  1572,  1571,     0,  1638,  1070,     0,
    1737,  1579,  1739,   993,     0,     0,   892,     0,   917,     0,
       0,     0,  1974,  1973,   984,  1046,     0,   858,     0,   862,
     863,   864,     0,   856,   764,     0,   924,   833,   831,     0,
     784,   786,   177,   961,   347,  2673,  2682,  2679,  2684,  2676,
       0,     0,   158,   173,   182,  2698,   798,   207,   237,     0,
       0,  2608,  1929,     0,   503,   892,   894,   896,  1601,     0,
    1420,  1585,     0,  1379,  1381,   837,     0,  1588,  2579,     0,
       0,  2575,  2573,     0,  2574,  2572,  2546,     0,  2501,  2502,
    2500,  1725,     0,     0,     0,   546,     0,     0,   580,   594,
       0,     0,     0,     0,  1933,  1935,     0,  1644,  1488,     0,
       0,     0,     0,     0,  1505,  1506,     0,     0,  1511,  1515,
    1496,  1585,  1573,  1574,  1569,  1626,  1184,  1639,  1072,  1600,
       0,   892,     0,  1719,   672,   893,   909,   908,   898,  1585,
       0,   894,   896,  1013,     0,   859,     0,     0,   827,     0,
     827,     0,   179,   373,     0,   359,   345,     0,     0,     0,
     349,   188,   191,   189,     0,   190,   196,     0,   197,   198,
     199,   200,   201,   192,   371,   372,   195,   193,   194,     0,
    2023,     0,  2024,  1168,  2679,     0,     0,     0,  2675,  2604,
      97,     0,   185,     0,  2705,   239,  2690,   501,   499,     0,
    2604,   143,     0,   146,   895,   911,   902,   149,   897,   910,
     900,   756,     0,  1422,  1297,  1363,  1625,  2552,  2551,  2550,
    2547,     0,     0,     0,     0,     0,     0,  2577,  2581,  1731,
    1479,   534,     0,   539,     0,   542,   544,   558,     0,  1719,
       0,     0,  1719,  1719,  1719,  1719,   573,   581,   583,     0,
       0,     0,     0,     0,  1934,     0,     0,  1941,  1943,  1467,
       0,  1472,     0,  1464,  1501,  1501,  1512,  1570,     0,  1167,
    1736,   676,   675,   907,     0,   899,   916,   919,   673,   674,
       0,   871,     0,   870,     0,   867,   866,   722,   925,   724,
     178,     0,   171,     0,     0,   358,   361,     0,     0,   364,
     354,   353,   355,     0,   348,   347,   347,   401,   352,   398,
     397,   390,  2683,     0,  2608,  2680,     0,     0,     0,  2677,
       0,     0,  2699,   217,   216,   208,     0,   347,  2688,  2689,
       0,  2692,   505,   504,  1030,     0,  1030,   903,  1030,   901,
    1585,  1184,  2548,  2582,  2585,  2583,  2584,  2586,  2580,     0,
    1919,   547,   540,     0,     0,   556,     0,  1719,  1719,     0,
       0,     0,     0,     0,   553,   582,  1719,  1938,  1939,     0,
    1936,     0,     0,  1942,     0,     0,     0,  1509,  1507,  1628,
     906,   999,   873,   874,   872,     0,     0,   180,   374,   385,
     388,   380,   360,     0,     0,     0,   350,   347,     0,   334,
     332,   333,   339,   340,   341,   342,   343,   344,   335,   338,
     336,   337,   347,     0,   248,     0,     0,  2681,  2678,     0,
    2685,     0,    98,   187,   207,   218,  2706,  2691,   347,  2608,
     144,   912,   147,   150,  1421,  1170,  1732,  1741,     0,   808,
     546,   543,   566,   559,   562,     0,   591,     0,     0,   587,
     588,   586,   584,   577,     0,   575,     0,  1937,  1945,  1944,
    1469,  1474,     0,  1502,     0,     0,     0,  1631,     0,  1629,
       0,     0,     0,     0,   347,   381,     0,   356,     0,   365,
       0,     0,   246,   404,   402,   244,   392,   392,  2686,  2687,
     169,  2700,  2693,   506,     0,     0,  1920,   541,   566,     0,
     564,     0,   560,   557,   561,   589,   590,     0,   574,     0,
     585,  1504,  1503,  1518,     0,  1627,     0,   869,   868,   382,
     388,   378,   386,   347,     0,     0,   346,     0,   400,   247,
       0,     0,     0,   347,     0,   391,   393,   395,   347,  1740,
    1742,  1946,   563,     0,   571,   567,   569,   572,   580,   579,
     576,     0,     0,  1630,     0,   379,     0,     0,   377,   357,
     362,   347,   405,   347,   258,   257,     0,   250,   327,   399,
       0,   249,  2701,     0,  1932,   565,     0,     0,   578,  1510,
    1508,   383,     0,   347,     0,   347,     0,   347,     0,     0,
       0,     0,     0,   245,     0,  1940,   570,   568,     0,   375,
     347,   363,   368,     0,     0,   253,   328,   329,     0,   255,
       0,  1948,   347,   347,   364,   367,   406,   403,     0,   330,
     251,   252,   263,   262,     0,  1947,     0,  1952,   347,   347,
     369,   271,   269,   347,   259,   267,   261,     0,   268,     0,
     256,     0,     0,  1959,     0,   254,   270,   331,  1950,  1951,
    1949,  1954,     0,     0,  1956,  1957,     0,  1921,   260,  1958,
    1953,     0,  1960,  1962,     0,  1955,     0,     0,  1961,  1963
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   613,  1478,    57,    58,    59,    60,    61,  1316,
      62,   821,  1240,  1852,  1853,    63,   555,    64,  1016,  1017,
    1623,  1624,  2810,  3245,  3246,  2819,  3258,  2813,  3249,  3250,
    2816,  3253,  3254,  1613,  1614,  3241,  3242,  1615,    65,  2282,
    3289,  4294,  3290,  4296,  3291,  4298,  1641,   523,  2098,  2099,
    1044,  2845,  3228,  4002,  3232,  4112,  4252,  4013,  2200,  3609,
    4003,  4004,  4121,   550,  1649,  1499,  4154,  2078,  4285,  2079,
      66,   645,  1014,  1586,  1587,  3273,  3274,  3637,  3275,  3642,
    3643,  3644,  3645,  4493,  4357,  4445,  4494,  4550,  4578,  4584,
    4526,  4593,  4594,  4595,  4582,   862,  4596,    67,   578,   579,
     864,  1346,  1866,  1347,    68,    69,   549,  1260,  1261,  1262,
    1263,  2455,  1867,  2450,  2451,  3411,  4527,  4580,  4599,  4358,
    4359,  4259,  4360,  4124,  4361,  4263,  4362,  4127,  4363,  4364,
    4365,  4366,  4485,  4367,  4258,  4519,  4354,  4355,  4487,  4562,
    4575,  4368,  4134,  4253,  4432,  4135,  4254,  4480,  4350,  4481,
    4514,  4558,  4351,  4433,  4517,  4436,  4369,  4375,  4495,  4370,
    4376,  4371,  4139,  4270,  4374,  4268,  4373,  4491,  4490,  4546,
    2281,  2856,   632,   633,   657,  2270,   634,  1031,   986,  1501,
    2111,  2112,  2660,  2661,  2830,  2831,  2832,  2103,  2104,  2105,
    2258,  2259,  2260,  2085,  2086,  2087,  1505,  2082,  2083,   635,
     987,   997,  2106,  2107,  2108,  2836,  2262,  2263,  2264,  2265,
    1228,  1229,  3119,  2859,  3282,  4021,  3652,  4160,  4389,  3283,
    3284,  2189,  2729,  2165,    70,   567,   842,  1313,  2498,  1314,
    2500,  3008,  3009,  3010,  1911,  1912,  3937,  1916,  2497,  4055,
    4400,  4194,  4195,  2493,  4193,  3015,  3434,  3435,  3731,  3939,
    4058,  4405,  4314,  4463,  4403,  4459,  4404,  4461,  4537,  4505,
    4506,  4324,  4414,  4415,  4467,  4508,  4206,  4207,  4208,  2518,
    3021,  3942,  3889,  2252,  1491,  1492,   524,   525,   526,   654,
    2860,  1559,  2861,  2862,  2752,  1561,  1562,  2708,  1414,  2743,
    2716,  2851,  2756,  2757,  2758,  2759,  2760,  2766,  2672,  2120,
    2121,  2194,  2769,  3879,  3542,  3564,  3215,  3216,  3217,  3218,
    3219,  3220,  3221,  3308,  3309,  3306,  1091,  3813,  3814,  3815,
    3302,  3303,  3598,  3582,  3583,  3584,  3880,   784,  3837,  3549,
    1382,  1383,  3461,  1393,  1394,  2570,  1987,  2571,  1495,  3550,
    3551,  3552,  3592,  3363,  3920,  3369,  3370,  3371,  2943,  2944,
    2945,  2946,  2947,  2397,  3585,  2768,  3535,  3806,  3809,  3993,
    4245,  2122,  2673,  2123,  2676,   937,   527,  2124,  2125,  1655,
    1656,  4094,  4163,  4167,  4095,  4168,  4164,  4096,  4097,  4098,
    4170,  4166,  2866,  3787,  3788,  2665,  3383,  3995,    71,   998,
     980,   989,   985,  1006,   640,  1575,   999,  1000,  2774,  2201,
    2778,  3860,   622,  1563,  3526,  3143,  3531,  1564,  2692,  1565,
    3130,  3509,  1566,  3161,  3529,  3803,  2693,  2694,  1567,  1568,
    1569,  3142,  3154,  3985,  3392,  3393,  3394,  2126,  1300,  2442,
    2764,  2173,    72,  1455,    73,   951,   952,   953,  2618,  2619,
    3106,  3502,  3778,   946,   947,   948,  2054,  2616,    74,   649,
    1628,    75,  1324,  2510,  2511,  2512,    76,  1007,    77,    78,
     650,  1635,  1636,  1637,    79,  1309,   131,    80,   850,  1319,
    1321,  1322,    81,   644,  1008,  1009,  1010,  1011,  2206,    82,
    1903,  2481,  2482,  2483,  2484,  1583,  2780,  1584,  1585,  2213,
    3428,    83,    84,   609,   610,  2404,  2405,   584,   868,   585,
     586,   587,  2952,  2953,  2954,  1957,   886,   887,   888,  1367,
    1370,  1371,  1981,  1088,   785,   786,   787,   788,  1182,  1183,
    3586,   789,  1192,  1813,   790,   791,   792,   793,   794,   795,
    1840,  3335,  3336,  3684,  2430,  2431,  2432,   796,  2319,  3320,
    2333,   797,  1175,  1798,  1729,  3676,  3328,  3905,  4030,  1672,
    2302,  2896,  2979,  2399,  1113,  1114,  1078,  2309,  1678,  1958,
    1959,  1960,  1961,  1962,  3764,  3763,  3765,  4069,  3952,  4071,
    3956,  2556,  1931,  1932,  1963,  1964,  3053,  3950,  2400,  2401,
    2402,  3054,  3469,  3069,  3070,  3962,  2547,  1965,  3060,  4337,
    4077,  4078,  4426,  4425,  4079,  3960,  3961,  3766,  3767,  3237,
    3238,  3239,  3035,  1719,  1720,  1727,  1295,  1296,  1673,  1967,
    2560,  3074,  3482,  2421,  2562,  3481,  3964,  3769,  4084,  1572,
    2724,  2725,   871,   872,  1950,  2538,  3050,  1361,  1362,  1951,
    2543,  2544,  3894,  4583,  2948,  2687,  3120,  1977,  1978,  3967,
    4228,  4428,  4429,  1947,  1948,  2534,  2535,   873,   874,  1358,
    1949,  3044,  3752,    85,   531,    86,  1850,  2436,  2982,  1237,
    2447,  1019,  1326,  1659,  1660,   809,   544,  1230,  1231,  1232,
      87,   556,  2480,    88,   574,  1929,   834,   854,  1327,  1328,
    2519,  3022,  3029,  2520,  3034,  3741,  3024,  3440,  3441,  2127,
    2128,  3025,  3443,  3738,  3722,  3723,  3423,  3934,  4309,    89,
     598,  3107,  3780,  3503,  3504,  4396,  4397,   855,    90,   530,
    1065,  2874,  1665,  2290,  1066,  1067,  2293,   675,   676,    91,
     955,   595,  1437,  1438,  1439,  2042,    92,   589,   938,  3094,
    3098,  2028,   846,  1233,  1419,   941,  1420,  2014,  2599,  1403,
      93,   976,   975,  1486,    94,   618,  1487,    95,   822,  1254,
    1862,  2986,  3397,  3710,  1255,  1256,  2448,    96,   575,   859,
     860,  1331,  1934,    97,   569,   847,  1922,    98,   560,    99,
     100,   838,  3429,  4399,  4501,   564,  1905,  1305,  3653,  3949,
    4064,  4065,  4067,  4217,  4218,  4534,  4587,  4610,  4603,  4613,
    4614,  4617,  4622,  4623,   799,   962,   800,  3797,   801,   802,
     803,  3030,  1373,  2539,   804,  2726,   805,  2666,  1020,  1662,
     553,   502,  3255,   629,   963,  2531,   807,  4141,   983,  1035,
     504,   505,   101,   588,   902,  1398,  1388,  1397,  2007,  2587,
    2011,  2589,  2590,  3491,  3090,  3492,  3091,   942,  2003,  2008,
    3092,  2012,   905,  1996,  1997,  1998,  1999,  3083,  1993,  2596,
     102,   839,   510,  1307,  1308,  2490,   103,   597,   104,  1297,
    1899,  1900,  2477,  2999,  2478,   105,   865,  1350,   106,   824,
    1289,  2466,  1290,  1875,  1291,  1292,  1889,  1883,  1892,  1886,
    4181,  4045,  4046,  2996,  1236,  1036,  1037,  2458,  2990,  2991,
    3929,  4048,  3714,  4187,  4188,   107,   132,   513,   652,  1026,
    1353,   108,   109,   110,   111,  1356,  1472,  2529,  1473,  3378,
    1474,  1475,  2064,  1944,  1794,  1795,  3381,  1172,  1173,  2407,
    2955,  2956,   889,   661,  1053,  1045,   125,   126,   127,   664,
     665,   128,  1004,  1005,  2779,  3234,  3611,  3863,  3864,  4008,
    4149,  4145,  4146,  4009,  4143,  4148,  4290,  4291,  1047,  4388,
    1048,  1049,  2846,  3877,  4153,  4384,  4498,  1050,  2278,  3278,
    4017,  4287,   112,   964,   607,  1470,  1465,  1467,  2061,  2623,
     113,   114
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3880
static const int yypact[] =
{
    4381,  2452,   128, -3880,  -140,   803, 51864,   622,  1450,  1450,
     419,  2685, -3880, -3880, -3880, -3880, -3880,  2715, -3880, 51864,
     128,   160, -3880, 26127, -3880, -3880,   742,   565,   199,  1450,
     128, -3880, 51864, -3880,   813,  1507,   128, -3880, -3880, 45594,
   -3880,   419, 51864, -3880, -3880, -3880, 45594,  -103,   848,   845,
    1031, -3880, -3880, 51864,  2301,   764,  1518,  1384, -3880, -3880,
    1154, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, 26757, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880,  1528, 51864,  1533, 51864,  1391,
   51864, 44340, 51864, 26127, -3880,  1530, -3880, -3880,  1547, -3880,
   -3880,  1450,   419, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880,  1055, -3880, -3880,  1168,  1575, -3880, -3880,
   -3880, -3880, -3880,  1751,  1555, -3880,  1583, 44340, -3880, 51864,
   -3880, -3880, -3880,   204,  1244, -3880,  1233,  1574,  1576,  1586,
     104, 13334,  1603,  1603,  1603, 51864,  1658,  1603,  1603, 51864,
   -3880,  1603, -3880,  1603,  1450, -3880, -3880, -3880, -3880,  1710,
   -3880, 51864,  1516,   188,  -125, 44340,  1469, 51864, -3880, -3880,
   13334, -3880,  1666, -3880, -3880, -3880,  1450,  1853,  1704,   246,
   51864, -3880, -3880,  1450,   249,  1139,  1301, -3880, -3880,  1428,
   -3880, -3880,   161, -3880, -3880, -3880,  1241,  2263, 28647,  5218,
    1428,   -27,  -110,   -27, -3880, -3880, 51864,  1450,  1645, -3880,
   -3880,   267,   267,   267, -3880,   267, -3880,   267,   764,  1277,
    1460, -3880, -3880,  1299, 51864,  1300,  1796,  1750, -3880, -3880,
    1303,   904, -3880,  1364, 41205, -3880, 51864, -3880, -3880, -3880,
   -3880,  1614, -3880, -3880, -3880,  2222, -3880, -3880, 41205, 51864,
    1484, -3880, -3880, -3880, 26127,  1374, 51864, -3880, -3880, 26127,
   26127,   240,  1228,   857, 51864, 51864,  1812, -3880,  2026, 41205,
    1579, -3880,  1038,  1259,  1547,  2023, -3880,  1555, -3880, 51864,
   51864, 51864, -3880, -3880, -3880, 46221,   104,  1409,  1415,  1423,
   17870, -3880,  1433,  1443,  1446, 13334,  1457,  1471,  1489,  1492,
    1512,  1525,  1527,  1544,  1551,  1551,  1557,  1562,  1587,  1590,
     517,  1593, -3880,  1602,  1621,  1625, -3880, -3880,  1648,  1661,
    1664,  1675, -3880,  1684,  1694,  1715, 13982,  1718,  1734, -3880,
   22968,  1738,  1744,  1760,  1765,  1785,  1787,  1790,  1798,  1829,
   -3880, -3880, 13334,  1557, -3880, -3880,  1860, -3880,  1879,  1882,
    1885,  1893,  1896,  1906,  1913,  1935,  1938,  1943,  1946,  1948,
    1963,  1972,  1979,  1982,  1991,  1557, -3880,   944,  1993,  1995,
    1002,  2010, -3880,  2020, -3880,   272,  2025,  1551,  1557,  1557,
    2030,  2032,  2035,  2041,  2048,  2051, 17870, 17870, 17870, 13334,
   -3880, 51864, -3880, 51864, -3880,  1888,  3184, -3880,  2574, 17870,
     233, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  1417,  1520,
   -3880, -3880, -3880, -3880, -3880, -3880,  2055,  1442,  1947, 51864,
   51864, 51864,  1794, 51864, 51864, 44340,  1519, 51864, 41205, -3880,
    1603,  1597,  3408, 31792,  3797, -3880,    87, -3880, -3880, 51864,
   -3880, -3880, -3880, -3880,  2000,  1799,  1888,  2326,   359, 26127,
   -3880,  1473, -3880,  -169, -3880, -3880,  2100, -3880, -3880, 41205,
   26127, -3880, -3880, -3880, 23600, -3880, -3880,  2347, -3880,  1754,
   -3880, -3880,  1520,  3579, -3880,  4853,  2013,  1228,  1822, -3880,
    2460,  2442, -3880,  2518,  1679, -3880, -3880, -3880,  2564, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, 10742,  2263, -3880, -3880,
     445,  2247,  2070,   464,   470, 38697,   133,   491,    63, 29276,
   39324,  2095, -3880, -3880, -3880,   863,  2592, -3880,   307,  2124,
    1864,   307, 41832,  2442,  1463, -3880,   122, -3880,  2585, -3880,
   -3880, -3880, -3880,  2253,  2237, -3880, -3880,   353,  2303, -3880,
    2628, -3880,    16, -3880,  2261,  2442,   307,  1463, -3880,  2520,
    2646,   467,  -159, -3880, -3880, -3880, -3880,  2161, -3880,   630,
    2727, -3880,  2167, -3880, -3880, 26127, -3880, -3880,  2000, -3880,
   -3880, -3880,  2171, -3880,  2459,  2284, -3880, -3880,    36,  2190,
     743, -3880,  2686, -3880, 44340,  1810, 42459, -3880, -3880, -3880,
    2721,  2747,  1551,  2211, -3880, -3880, -3880,  2864, -3880, -3880,
    2228,  2787,  2787,  2787,  2894, -3880, -3880, -3880,  3571,  2255,
   -3880,  2521, -3880,  2431,  2310, -3880,  1484, 26127,  2688,  2285,
   -3880, -3880,  2559, 13334, -3880, -3880,  5433,  2861,    25, -3880,
   -3880,   182, -3880,  2897,  2522, -3880, -3880, -3880, -3880,  2791,
   -3880, -3880,  2864,  2853,  2787,  2742,  2317, -3880, -3880,  2774,
    1555, 51864, 51864, 51864, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, 51864, -3880, -3880, -3880, -3880, -3880, -3880,  1484, -3880,
   26127, -3880, -3880, -3880, 26127, -3880,  2327, -3880,  2324, -3880,
   13334, 13334,   352,  2910,  2969,  2969,  2969,  1888,  2364, 13334,
   13334, 13334, 13334, 13334, 13334, 13334,   373,  2339, -3880, -3880,
     -97, -3880,  2342, 13334, 13334, -3880, 13334, 13334, 27387, -3880,
    3954, 13334, 13334,   356,  2854, 13334, 13334, 13334, 13334,  3716,
   13334, 13334, 27387,  2982,  2346, -3880,  2341,   908, 13334, 13334,
    1362, 13334, 13334, 13334, 13334, 13334, -3880, -3880, 13334, 13334,
   13334, 13334, 17870, 13334, 13334, 13334, 13334, 13334, 13334,  2350,
   13334,  2969,  2969, 13334, 13334,  1608, -3880, -3880, 13334,  2476,
    2476, -3880, 13334,  9446, 13334, -3880, -3880, -3880,  2354, -3880,
   -3880, -3880, 27387,  2969,  2969, 13334, 13334, 13334,  2910,  2910,
    2910,   201,  2355,  -152, 13334, 29905,  2356, -3880, -3880, -3880,
   -3880, 13334, 13334, 13334, -3880, 17870, -3880, -3880,  2393, -3880,
   -3880, -3880, 14630, 17870, 17870,  2362, 17870, 17870, 17870, 17870,
   17870,  2730, 17870, 17870, 18518, 19166, 17870, 17870, 17870, 17870,
    1000,  2910, 44340, 17870, 13334, -3880, -3880, 51864, -3880, -3880,
   -3880,  2359, 26127,  1519, -3880, -3880, -3880, -3880, -3880, -3880,
    2368,  1519, -3880,  2862, -3880, -3880,  2373, 26127, -3880,  2369,
   -3880,  2745, -3880,  2746,  2748,  2749, -3880, -3880, -3880,  2979,
    2756, -3880,  2759, -3880, -3880,  2390, -3880, -3880, 19814, 44340,
   -3880,  2391, -3880,  2888, -3880,  2637,  2579,  2042, -3880, -3880,
   -3880, -3880, -3880,  2676, -3880, -3880,  2509, -3880,  2692, -3880,
   -3880,   365, -3880,   168, -3880, -3880, -3880, -3880, -3880, -3880,
    2693,  2416, -3880, -3880, -3880, 51864, -3880, 52491, -3880, -3880,
   23600,  -140, -3880, -3880, -3880,  2792,   142,  2428, -3880, 26127,
   -3880,   107,   107,  2687,   198, 44340, -3880, -3880,   196,  2433,
    2510,  2437, -3880,  2524, 26127, 26127, -3880, -3880, -3880,  2699,
   -3880,  3078,  1139, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880,  2445,  2941,  2637,  2729,
   -3880,  2731, -3880, 51864, -3880,  1636, -3880, -3880,   798, -3880,
   -3880,  1419, -3880,   496,  2484,  2512,  2865, -3880,  2372, -3880,
    2465, -3880, 38070, -3880,  2454, -3880, -3880, 51864, -3880, -3880,
   -3880, -3880, -3880,  3048, 13334, -3880, 41205,   713,   918,   837,
     863, -3880, -3880, -3880, -3880, -3880, 51864, 46848,  2474, -3880,
    2877,  -140, 13334, -3880,  2482,  1555, 51864, 51864, 51864, 26127,
   51864, 26127, -3880,    10,    10, -3880, -3880, -3880, -3880,   307,
   51864, 51864,   307, 41205, -3880,  1463, 51864,   307, -3880,  2881,
    2577, -3880, -3880, -3880,  2951, -3880, -3880,  2940,  2483, -3880,
    2877, -3880,  2599,  1463, -3880, -3880, 26127, -3880, -3880,  1463,
   -3880,  1463,  1463,   307,   307,  2536,   -27, -3880, -3880,  2631,
    -110, -3880,   962,   267,  2741, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880,   147, -3880, -3880, -3880, -3880,
    3057, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880,   169, -3880, -3880, -3880,  1889,  3009, -3880, 44340,  2323,
     -53,  2131,  2323,  2078,  -140,  1436, -3880,  1436, -3880,  2349,
     863,  3071,  2754,   863,   863,  3071,   863,  2757,  2760,   863,
     863,  2575,  3025,   863,  2908,   596,  2815,  2911,   863,  2771,
   -3880,   676,  3031,   863,   863,   863,   863,   863,  3071,  2776,
    3122,   863, -3880,   863,  2783,  2782,   203,  2785,  2786,   863,
     863,   863,   863,   981, 51864,   863,  2789,   863, -3880, -3880,
    5033, -3880, -3880, -3880, -3880, -3880, -3880,  1246, 24230, -3880,
   -3880, -3880, -3880, 41205,  3007,  2811,   952, 26127, -3880,  2535,
   47475, 26127, -3880, -3880, -3880,   213,  2537,  2538,  1888,  3030,
    3037,  3039,  3040,  3041,  3042,  3043,  3047,  3050,  3052,  3053,
    3062,  3063,  3064,  3065,  3067,  3069,  3070,  3073,  3077,  3079,
    3084,  3087,  3088,  2557, -3880, -3880,  3090,  3091,  3097,  3098,
    3099,  3101,  3105,  2580, -3880, -3880, -3880, 26127, -3880, -3880,
   -3880, -3880,  2586, -3880, -3880, -3880, -3880,   206, -3880, -3880,
   -3880,   186,  1867,  2607,  2662,   118, 41205, 51864, 51864,  2621,
    -147, -3880,   423, -3880, -3880,   937,  2900,  2901,  2902,  2626,
   -3880,  2699, -3880,  1278, 51864,  3089, 34935, -3880,   343,   376,
   -3880,  2969,  2640, -3880,  2647,  2649,  2650, 13334,    43,   503,
    1079,  1472,  1368,  1143,   351,   329, -3880,  2654,  2643, -3880,
    2658, -3880, -3880,   539,   549,  1155,  1161,  2660,  2671, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  3127,
   -3880,   670,  1394, -3880, -3880, -3880, -3880,  2673, -3880, -3880,
    1165,   674,   683,   299,  2679,   696,  1454,  1475,  2677, 27387,
   51864,  2969,  2675,  1167,  1173,  2969,  2678,   778,  1177,  1612,
    1643,  1676,  1193,  1204,   854,  1697,  2695,  1206,   859,   868,
    1208,   875,   886, -3880,  1226,  2680,  2681,   892,   210,  2969,
    2682,   381,  2697,  2698,  1232, 11390, 12038, 12686,   266,   945,
   -3880,  2683, -3880,  2341,  2696,  2700,   411,   306,  1257, -3880,
   13334, -3880, -3880,  2694, -3880,  2762,   165,   837, -3880,  2858,
   51864,  2340,   175, -3880, -3880, -3880, -3880, -3880, -3880,    21,
   -3880,  2711, -3880,  2714,  1857,  2717, 13334,  1338,  2717,  3126,
    1125,  1125, 17870,  2279,   870, 13982,  1389, 13982,  1389,  2717,
    2717,  2717, -3880, 17870,  2716, 17870, 17870, -3880,  2910,  1888,
   13334,  -167, 51864, -3880,  2368,   680, -3880,   863, 41205,   103,
   26127, 44340,  2718, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880,  3654, 26127,  2798,  2803,  2806, -3880, 32421, -3880, -3880,
   -3880, -3880, 32421,    -2, -3880, -3880, -3880, -3880, -3880,  2818,
   -3880, -3880, -3880,  2728, -3880, 41205,  2728, -3880, -3880,  2728,
   -3880, -3880,  2728,    54,  3028, -3880,   323,   874,  3710,  2484,
   -3880, -3880, -3880, 26127, -3880,  3145,    52, 26127,  2535,  2733,
   17870, -3880, -3880, -3880, -3880,  2372,  2833, -3880,  3367, -3880,
   13334,  -140, -3880, 41205, 41205, 26127, 26127,   881, -3880,  1449,
    2736, -3880, -3880, -3880, -3880, -3880,  3579, 19814,  2735, 41205,
     722, -3880, -3880, -3880, -3880,  2823,  2823, -3880, 30534, -3880,
   13334, 39951, -3880, -3880, -3880, -3880, 51864, -3880,  2633, -3880,
   -3880,  2743, -3880, -3880, 26127, -3880, -3880,  3183, -3880,  2898,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, 13334,
   48102, -3880, -3880, -3880, 35562, -3880, 43086, -3880,  1888,   863,
    2750,  2751, -3880, -3880,  3129,   658, -3880,  2752,  2755, -3880,
    2740,  2744,  2758, 48729, 13334, -3880,   918, -3880, -3880,   863,
   -3880, -3880, 10094,  -140,  3209, -3880,  1888,  2761, 51864, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880,   307, -3880, -3880, -3880, -3880,
   -3880,  2986,  2442,  2303,  3209, -3880,   307,  1463, 26127,   307,
     307, -3880, -3880,  2766,  2804, -3880, -3880, -3880,  2916,  2770,
   -3880,  3221,  2442, -3880, -3880,  2372, -3880,   863,   863,  3075,
   -3880,  -140,  2899,  2903,  2904,  2906,  2912,  2939, -3880, -3880,
    -140,  -140, -3880, -3880,   863, -3880,  1235, -3880, -3880, -3880,
   -3880,  -140,  -140,  -140,  -140,  2407,  -140,  -140,  1721, -3880,
   -3880,   863,   863, -3880,   432, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880,  1005, -3880, -3880, 28017, -3880, -3880,   128, -3880,
     922, -3880, 28017, -3880,   213,   213, -3880, -3880, 49356, 28017,
     128,   812,  2407, 28017,  2407, 49983,   128,  -140,  -140,  2332,
     863,  2407, -3880, -3880, -3880,  3168, 51864,  3169, 28017, 28017,
   -3880, 44340, 51864, -3880, -3880,   863,   871,  2407, 50610,   812,
     812, 28017,   128, 27387,  2143, -3880,  -140,   128, -3880, -3880,
   -3880, -3880, 28017, 26127,   128,   128,  2713,  2505,  2533,  2563,
   -3880, -3880, -3880,  2407, 49983, -3880, -3880,  5453, -3880, -3880,
   -3880, 21076, 51864,   906,   195, -3880,  2778, -3880,  1330,   413,
   -3880,  2983, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880,  2794, -3880, -3880, 13334,  2795,  2407,  -140,  2407,
    2407,  -140,  -140,   812,  -140,  2407,  2407,  -140,  -140,  -140,
    -140,  -140,  -140,  -140,  2407,  2407,  -140,  1514,  -140,  2407,
    5433,  2802,  2802,  2812,  2812,  2820,  2820,  2822,  2861, -3880,
   -3880, -3880, -3880,   223,   863,   863,   863,   863, -3880,  2126,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, 44340,  3159,
    1849,   -61, 44340, -3880,  2975, -3880, -3880,    91,  2824, -3880,
   -3880,   309,  3325,   427,   427, -3880, 26127, 26127, 26127, 51864,
    2846, -3880, 34935, -3880, -3880,   962, -3880,  2807, 15278, -3880,
    2805, -3880, 13334, -3880, -3880, -3880,  1813, 13334, 13334,  3313,
    1618, -3880, 43713, -3880, -3880, -3880, 13334, 43713,  1618, 13334,
   -3880,  2827, -3880,  3233,  3239, -3880, -3880, -3880, -3880, 13334,
   13334, -3880, 13334, 13334, -3880, 13334, 13334, 13334, 13334, 13334,
   -3880, -3880, 17870, -3880,  2828,  2831, -3880, -3880, -3880,  2834,
   -3880, 13334, -3880, -3880, -3880, -3880, -3880, -3880, 13334, -3880,
   13334, -3880, 13334, 13334, -3880, 13334, 13334, -3880, -3880, -3880,
   15926, 13334, 13334,  2836, -3880, -3880, 13334, 13334, 13334, -3880,
   13334,   319, 13334,  1774, 13334,  1831, 13334, -3880, 13334, -3880,
   -3880, -3880, -3880, 13334,  1117,  2372,  2407,  2843, -3880,  1762,
    2518, -3880,  2024,  2694,  2845,  3011,  1636, -3880, -3880, 44340,
   13334, -3880, -3880, -3880, -3880, -3880, -3880, 17870,   437,  2847,
   17870, -3880,  3126,  3716,  3716,  1992, 13334,  1338,  3126, 38070,
    2848,  2849, -3880, 13334, 51864, -3880, -3880, -3880, 44340, -3880,
   -3880, -3880, -3880,   103, -3880,  2369, -3880,  2535, -3880,  3341,
    2851, -3880, -3880, -3880, -3880, -3880, -3880, 51864, -3880,  2928,
   -3880, -3880, -3880, 24862, 24862, -3880, 24862, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  2442,
    1449, -3880,  2855, -3880, -3880,  2559,  2823,  2872,  3229, -3880,
   -3880, -3880, 51864,  2859,  3126, -3880,  3457,  2866,  2869,  3350,
    2870,  1888, -3880,  2946, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880,   960, -3880, -3880,  2876,  2876, 21706, -3880, -3880,
   -3880, 51864,  3354, -3880,  3321,  3335, 24862, 24862, 24862,   584,
   -3880, -3880, -3880, 44340,  2883, -3880, -3880,  1888,  2884,   355,
   -3880, -3880, -3880, -3880,   -73, -3880, -3880, -3880,   919,  3284,
    3285, -3880,  3155,  1162,  3155,   919,   919,   962,  2699, -3880,
   13334,  3498,  3336,  3215, -3880, -3880, -3880, -3880,   929, -3880,
   -3880, -3880, -3880,   713,  2988,  2990,  1334, -3880, -3880,  3304,
    3130, -3880, -3880, -3880,   863,  1888, -3880,  2474, 10094,  2909,
   31163, -3880, 17870,  1602, -3880,  1888, -3880, -3880,   812, -3880,
      39, -3880, -3880,  3192, -3880, -3880, -3880, -3880,  2484,  1463,
   -3880, -3880,  3401, -3880,  3402, -3880,  2914,  3403, -3880,  3170,
   -3880,  2407,  3238, -3880, -3880, -3880, 43086, 40578, -3880, -3880,
   -3880, -3880,  3462, -3880,  3464,   980, -3880, -3880,  1633,    -5,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880,  2078,  1633,  1633,   748, -3880,
     134, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  2927,  3320,
    3322,   213, -3880, 28017, -3880, -3880, 28017, 28017, -3880, -3880,
      93, 49983, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880,  2929, -3880, -3880,  2372, -3880, -3880, 40578,
    -140, -3880, 49983, 28017,  2929, -3880, -3880,   231, -3880, -3880,
    2956, 49983,  -140, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, 49983,  2933, -3880,   355, -3880, -3880,  1853,
   -3880, 49983, -3880,  3010, -3880, -3880, 49983, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880,  2937,  2491,  1508, -3880,  2942,  2944, -3880, -3880,
   -3880, -3880, 51864, -3880, -3880, 26127, -3880, -3880, -3880,  4866,
   51864, -3880,  2372, -3880, -3880,    89,  1524,  3018,  1357,  2947,
    2948, 51237,  1888,  2407, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, 33677,
   -3880, -3880, 34306, -3880, -3880,   510, -3880, -3880,  1781, -3880,
   -3880,  -140,  2372,  1633,  1633,  1635, -3880,  3222,  3390,   863,
   -3880,  2299, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880,  3051, -3880,  3582,    91,  3230, 51864, -3880, -3880, -3880,
   -3880,  3103, -3880, -3880, -3880, -3880,  3243, 26127, 20446, -3880,
    3218, -3880,  3013, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880,  2960,   962,  2484,  1282,  2484,  2984, -3880, 13982,
    1276, -3880,  1888, 13334,  1888,  1877, -3880,  2977,  2977,  2981,
   -3880,  2985,  2977,  3396,  2981,  3400,  2994,  2995,  1294,  2996,
    2998,  1417, -3880, 13334, 13334,  1315,   442,  1321,   556,   947,
     988,   473, -3880,  1332,  3108, -3880, -3880,  1339,  1341,  1370,
    1380,   993,  1402,  1791, 13982,  1435,  1096,   483, -3880,  1440,
     997,  1016,  1452, 13334,  1467, 13334,  1479, 13334,  1534,  1580,
    1640,  3002,  3002,   152, -3880,  3012, -3880, -3880, -3880,  3014,
   -3880, -3880, -3880, -3880,  2484, 10742,  2024, -3880,  3003,  1236,
   -3880, -3880,  2976,  1888,  3022, -3880, -3880, 13334, -3880,   233,
   -3880, -3880, 17870,   490,  3023, -3880, -3880, -3880, 13334,  3024,
    1417, -3880,   913, -3880, -3880, -3880,   291,  3452, 32421, -3880,
    1800, -3880, 41205,  3004, -3880,  3005,  3085,  3093,  3100,  3027,
   -3880,  3305, 26127, -3880,  3449, -3880, -3880, -3880,  3029,  3032,
   -3880, -3880, -3880,  3409,  3287, -3880, -3880,  2372, 51864, 41205,
   -3880,  2263, 27387, -3880,  3033, -3880,  3033,   994,  3036,  1802,
   -3880, -3880, -3880,  3034,  1822,  1820, -3880, 19814,  3308, 41205,
    3492,  3494,  3497, -3880,  2332, -3880, 30534, 13334, -3880, -3880,
   -3880, 39951, 39951,  -177,  1236, -3880,  1732, -3880, -3880, -3880,
    3440,   919,  3155,  3155,  3441,  3324,  1007, -3880,  2321, -3880,
    2263,  1888, -3880, -3880,  3316, -3880, 36189, -3880,  3049,  3054,
     112,  3275, -3880, -3880, -3880, -3880, 10094, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880,  2442, -3880, -3880, -3880,  2442, -3880,
     307,  -140,  -140,  1181,  -140,  3545,  3576, 27387, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  1005, -3880,
     699, 13334, 28017, -3880, -3880, -3880,  3058, -3880, -3880,  3581,
    3585, -3880, 28017,   206, 51864, -3880,  3048, -3880,  3156, -3880,
   -3880,  3153,  3160, -3880,  4866, -3880, 27387, -3880, -3880, -3880,
   28017, 51864, -3880, 26127, -3880, 21076, -3880,  3068, -3880,  2977,
    2977,  2977, -3880, -3880, -3880,  2981, -3880,  2985,  3311, -3880,
    2985,  2985, -3880, -3880, -3880, -3880, -3880,   358,   363, -3880,
   -3880,   358, -3880, -3880, -3880,   162,  1477,  2985, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880,  2977,  2981,  2981, -3880, -3880,
     358,  2977, -3880,  2977,  3163, -3880,   390,   121,  2977,  2977,
    2977,  3072,  3074,  3599,  3315, -3880, 13334, 13334,  3347, 51864,
    3352, -3880,  3647, 51864,  3704, 49983, -3880,  3082, -3880,  3083,
   -3880,  1823, -3880, -3880, -3880,  1835, -3880, -3880, -3880,  1856,
   -3880,  3076, -3880,  1872, -3880, -3880, 51864, -3880,  1886, -3880,
   -3880, -3880, -3880, -3880,  3092, 51864,  1633,  1291, -3880, -3880,
    -140,  3228,  3259,  3094,  3096, -3880, -3880,  -140,   977, 26127,
   -3880, 26127, -3880,  3257, -3880,  3095,    53,  5553, -3880,  3107,
    3109,  3111, 34935,  2484,  3316, -3880, -3880,  3716, -3880,  1888,
   13334,   239, -3880, -3880,   358,  3397, -3880,  1051, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
    3113,  3716,  3716, -3880, -3880, 13334, -3880,  3706,  3278, 13334,
   13334, -3880, 13334, -3880,   262,  3124,  3148, -3880, -3880, -3880,
   -3880, 13334, -3880, -3880,  3716, -3880, 13334, -3880, -3880, 13334,
   -3880, 13334, 13334, -3880,  1662, -3880,  1669, -3880,  1673, -3880,
   -3880, -3880,  2372,  3131,  3509, -3880, -3880, -3880,  2372,  3309,
   -3880, -3880,  2372,  2407,  3183,  2465, -3880, -3880, -3880, -3880,
    2518,  -152, 51864, -3880, -3880,  1919, -3880, -3880, 13334, -3880,
   -3880, -3880, -3880,  3500,  3766, -3880,  3357, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, 51864,  -175,  3142, 36816, 41205, 41205,
   41205, 16574,  3641, -3880, -3880, -3880,  3449,  3528, -3880,    71,
   -3880, 51864,   224, -3880,  1926, -3880, -3880,  3143, -3880, 10742,
    3144, -3880,   863, 16574,  2876,  3257, -3880, -3880,   994, 27387,
   35562, -3880, -3880, 51864, -3880,  3598,  2317, 41205, 41205, 41205,
   40578, -3880, -3880,   355, -3880, -3880,  1636,  2408, -3880,   962,
   -3880,   919, -3880,  3544,  3548,   919, -3880, -3880, -3880, -3880,
   10742, 13334, 13334,  2442, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, 31163, 48729, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
    -140,  3636,  3406,  3157, -3880,   863, -3880,  2372,  3287, -3880,
    1685,  3150,  3158, 51864,  3162,  3164, -3880,  2790,   906, -3880,
   -3880, -3880, -3880, 26127, -3880,  3163,   128, -3880, -3880, -3880,
    2929,   960,  3167, -3880, 51864,  3506, -3880, -3880, -3880, -3880,
    1175, -3880,  3173,  1175,  1175,  3768,   135, -3880,  3771, 43713,
   -3880, -3880, -3880,  2247, -3880,  3206,   358, -3880, -3880,  3207,
   -3880, -3880, -3880,  1175,  3176,   358, -3880, -3880, -3880, -3880,
    1175, -3880, 44340,  1907,  -140,  2526, -3880,  3225, -3880,  3703,
    1116,  3573, -3880,  3163, -3880,  3574,  3471, -3880,   358, -3880,
   -3880,  3800, -3880,   358,  3800,  1175,  3472, -3880,  1175, 51864,
   -3880, -3880,  1888,  3716,  3757, -3880, -3880,  3338,  -140,  3699,
   -3880,  1954, -3880,  3193, -3880, 51237, -3880,  2407, -3880, 51864,
   -3880, 51864, 51864, -3880,  -140,  3194, -3880,  3197,  2078, -3880,
   -3880, -3880, -3880,  -140,  1524, -3880, 51864,  4866, -3880, -3880,
   -3880, -3880,  3198,  3196, -3880, -3880,  3656,  3201,  3202,  5033,
   -3880, -3880, -3880,  3829, -3880, 51864, 51864, 51864,  2807, -3880,
    3584,   487,  1888,  3210,  3212,  3213,  3214, -3880,  3216,  1957,
   -3880,  3217,  3226,  1689, -3880,   267,  3227,  1696,  1068,  1969,
    3520,  3609, -3880,  3458, -3880,  1705,  1298,  1756,  1768,  1804,
    1843, -3880, -3880, -3880, -3880, -3880,  3235, -3880, -3880,   441,
   -3880,  3232,  3336, -3880, -3880, -3880, -3880,  2003, -3880, -3880,
    3705,  3607, -3880,  3671, -3880, -3880, -3880,  -129,  -129,  -129,
    1602,  1888,  2017, -3880, -3880, -3880, -3880,  3646, -3880,  3240,
    3367, 51864, -3880,  3287, -3880,  2465, 27387, 16574,  3241,  3242,
   -3880,   743, -3880, -3880,  3237, -3880, -3880, 41205,  2317,  2317,
    2317, -3880,  3815, -3880, -3880, -3880,  2743,  2123,  3290,   919,
     919,  2471,  3291, 13334, 13334,  3250, -3880,   780,  2465,  3249,
     355,  1888,  3488, -3880, -3880, -3880,  -140,  3742, -3880, 27387,
    2484, 16574, -3880,  2045, -3880, 51864, 51864,  2057,   355,  3254,
   51864, 51864,  2798,  2803,  2806,  1514,  1514, -3880, -3880, -3880,
   -3880, -3880, -3880,  3662, -3880, -3880,  2087, -3880,   706,  3533,
   -3880, -3880, -3880, -3880,  1175, -3880,   267, -3880, -3880, -3880,
   -3880, -3880, 43713, -3880,  3800, -3880, -3880, -3880,   267, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  3546,
    3299, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880,  3262, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, 51864, -3880,   982, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, 51864, 51864,  2094, -3880,  3347,  3448, -3880,  3048,
   -3880, -3880,  1337, 51864,  3767, -3880, -3880,  3218, -3880,  1022,
    2105,  2112,  2115, 39951, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880,  3551, -3880, -3880, -3880, 13334, -3880, -3880, -3880, 13334,
   -3880, -3880,  3583,  3749, -3880, -3880, -3880, -3880, -3880, -3880,
    3265, -3880,  2407,  3316, -3880, -3880, -3880,  3549,  1642,  3296,
    3296,  3296, -3880, 16574,  3668,  3371, 17870, -3880,  3281,  3323,
   -3880, -3880,  2518, -3880, -3880, -3880, -3880,  2317,   907,  3660,
    -152, -3880,  3333, -3880, -3880, -3880,  3339,  1888,  1888, 51864,
   -3880,   793,  2518, 13334,  1832, -3880,  3923,  3707, -3880,  -140,
   -3880,  3316, -3880, -3880,  2117,  2120,   288, 51864, -3880,  3580,
    2149,  2156, -3880, -3880, -3880,   906,  3301, -3880, 51864, -3880,
   -3880, -3880,    74, -3880, -3880,  2174, -3880, -3880, -3880,  2176,
   -3880, -3880,  3421, -3880, 58134, -3880, -3880,  3310,  3327, -3880,
    3312,  3318, -3880,  1357, -3880, -3880, -3880, -3880, -3880,  4866,
    3485,   743,    53,  3257, -3880,   288,   193,   245, -3880,  3328,
    3326,   355,  1869, -3880, -3880, -3880,  3329,  2442, -3880,  3411,
    3417, -3880, -3880,  3418, -3880, -3880,   120,  2071, -3880, -3880,
   -3880, -3880,  3372, 26127,  3334,  3437, 51864,  1500,  2723, -3880,
    3937,  3938,  3837,  3945,   907, -3880,  -115, -3880, -3880, 13334,
    3348, 13334,  3353,  2178, -3880, -3880,   213,   213, -3880,   793,
   -3880,   355, -3880, -3880, -3880, -3880,  1419, -3880, -3880,  3584,
    3565,   288,  -140,   863, -3880,   288, -3880, -3880, -3880,   355,
    3351,   193,   245, -3880,  3287, -3880,  1295,  1295,   358,   267,
     358, 13334,  3848,  3381, 51864,   151, -3880, 59388, 59388, 51864,
   -3880, -3880, -3880, -3880,  4752, -3880, -3880,   667, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  3971,
   -3880,  3349, -3880, -3880,  3310,  3358,  3524,   252, -3880,  1822,
   -3880, 51864,  3647,  4866,  2935, -3880,   757, -3880, -3880,  3360,
    1822, -3880,  3619, -3880,   193, -3880, -3880, -3880,   245, -3880,
   -3880, -3880, 13334, -3880, -3880, -3880,  3488, -3880, -3880, -3880,
   -3880,   136,  3634,  2407,  2407,  2407,  2407,  2071, -3880, -3880,
    2699, -3880,  2372, -3880,  2203, -3880, -3880, -3880,  3453,   863,
    3882,  3884,   863,   863,   863,   863,  3375,  2723, -3880,  3863,
     267,   267,  3974,   267, -3880,  3975,  3976,  -115, -3880,  1888,
   51864,  1888, 51864, -3880,  3835,  3835, -3880, -3880,  3382, -3880,
   -3880, -3880, -3880, -3880,  2407, -3880, -3880, -3880, -3880, -3880,
    2213, -3880,  4020, -3880,   167,  3659,  3661, -3880, -3880, -3880,
    1888, 13334, -3880, 13334,  3412, -3880, -3880,  3841, 51864, -3880,
   -3880, -3880, -3880, 13334, -3880, 58134, 58134, -3880, -3880, -3880,
   -3880,  3998, -3880,  3388,   743, -3880,  3973,  3663,  3977, -3880,
    3391,  3897, -3880, -3880, -3880, -3880,  3916, 58134, -3880, -3880,
   44340, -3880, -3880, -3880,   913,   214,   913, -3880,   913, -3880,
     355,  1419, -3880, -3880, -3880, -3880, -3880, -3880, -3880, 27387,
   -3880, -3880, -3880, 51864,  3404, -3880,  -140,   863,   863,  2079,
    2079,  2372, 44340,  3504, -3880, -3880,   863, -3880, -3880,   267,
   -3880,   267,   267, -3880,  2219,  2223,  1355, -3880, -3880,  3687,
   -3880, -3880, -3880, -3880, -3880,  3456,  3929,  1888,  1888, -3880,
      58, -3880, -3880,  3819,  3908, 13334,  1888, 54999,  3410, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, 58761, 13334, -3880,   667,  3971, -3880, -3880,  3684,
   -3880,  3685, -3880, -3880, -3880, -3880, -3880, -3880, 58134,   743,
   -3880, -3880, -3880, -3880, -3880, -3880,  3426, -3880,   863,  2332,
    3437, -3880,  3419, -3880, -3880,   -57, -3880,  -140,  -140, -3880,
   -3880, -3880, -3880, -3880,  2229, -3880, 44340, -3880, -3880, -3880,
   -3880, -3880,  4018, -3880,  4028,  3431,  3432, -3880,  3433,  3434,
    1295,  1295,  3460, 13334, 58134, -3880,  3928, -3880,  3859,  1888,
    3801,  3436, -3880,  3430,  1888,  3965, 59388, 59388, -3880, -3880,
   -3880,  2935, -3880, -3880, 27387, 16574, -3880, -3880, -3880,  2234,
   -3880, 17222, -3880, -3880, -3880, -3880, -3880, 44340, -3880,  3504,
   -3880, -3880, -3880, 51237, 51237, -3880,  3687, -3880, -3880, -3880,
      62, -3880,  1888, 55626,  4035, 51864, -3880,  3526, -3880, -3880,
   13334,  3951, 44967, 56253,  3443, -3880, -3880, -3880, 58134, -3880,
   -3880,  3621, -3880,  3419, -3880,  3445, -3880,  3126,  2723, -3880,
   -3880,  3451,  2239, -3880, 13334, -3880,  3948,  3532, -3880,  3455,
   -3880, 58134,  1888, 58134, -3880, -3880,  3898,  3461,  1568, -3880,
    3454, -3880, -3880,  3891,  3815, -3880, 17222,  3467, -3880, -3880,
   -3880,  1888,  4062, 58134, 51864, 53118,  3967, 56880,  3930, 51864,
    4866,  3931,  3932, -3880,  4075,  3660, -3880, -3880,  3564, -3880,
   53745, -3880,  2389,  3686,  3507, -3880, -3880,  4007,  1862, -3880,
     267,  3907, 58134, 58134, -3880, -3880, -3880, -3880, 37443, -3880,
   -3880, -3880, -3880, -3880,   584, -3880,  3770,  3489, 54372, 57507,
   -3880, -3880, -3880, 33050, -3880, -3880, -3880,  3946, -3880, 13334,
   -3880,  1013, 22336,  3649, 37443, -3880, -3880,  1888, -3880, -3880,
   -3880, -3880, 44340,  2244, -3880, -3880, 27387, -3880, -3880, -3880,
   -3880, 25495,  3493, -3880,   863, -3880, 27387, 16574, -3880, -3880
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3880, -3880, -3880, -3880, -3880,    17, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880,  1698, -3880, -3880, -3880, -3880, -3880,
   -3880,  1894,  1902, -3880, -3155, -3880, -3880,  1903, -3880,   525,
    1904, -3880,   527, -3880,  1909, -3880,   535, -1970, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,   528,  1502,
    3495, -3880,   521, -3880,   149, -3880, -3880, -3880, -3076,     7,
    -223, -3880, -3880,   336,    28,  3174,  -220, -3879, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880,   520,   530, -3880,
   -3880,   285, -3880, -3880, -2898, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880,  -436,  -394,  1930, -3880, -3880, -3880,  4127, -3880,
    3587, -3880, -1862,  2242, -3880, -3880, -3880, -3880, -3880,  2307,
   -1796, -3880, -3880, -3880,  1187, -3880, -3880, -3880, -3880,  -234,
     176, -3880,   178, -3880,   179, -3880,   181, -3880,   183,   184,
     185,   187, -3880,   191, -3880, -3880,  -393, -3880, -3880, -3880,
   -3880,   192, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  -290,
   -3880, -3880,  -158, -3880, -3880,  -283,   197, -3880,  -247,   200,
   -3880,   205, -3880,  -174, -3880,  -172, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  3175,
   -3880, -3880, -3880, -2470, -3880, -3880, -2630,  2704, -3880, -1902,
   -3880, -3880, -2084, -3880, -3880, -1906,  1077, -3880, -3880,  -101,
     531, -3880, -1402, -2004, -2001, -3880, -3880, -3880, -2177, -2174,
   -1398, -1358, -2473, -3880, -3880, -3880,   190, -3880, -3880, -2776,
    2638,  3219, -3880, -1541, -3880, -3880,  1486, -3880, -3880,  1200,
     488,  1201, -3880,   789,  2913, -1243, -3880, -3880, -3880, -3880,
   -3880, -3880,   -90,   292,  -176, -3880, -3342,   497, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -2603, -3880, -3880, -3880,
    -307, -3880, -3880,  -238, -3880, -3880,  -276, -3880,    26, -2458,
   -3880, -3880, -3880, -3880,  2595, -1389, -3880,  3711, -3880,  -554,
     589,  2684, -2437,  -931, -3880,  -917,  -912, -2406, -3880, -3880,
   -3880,  1395,  1382, -3880,  1076,  2689, -1445, -3880,  2049, -3880,
   -3880,  1104, -3880, -2558, -3880, -3880, -3880,  1059, -3880,  1060,
   -3880, -3880, -3880,  -868,  1030, -1727,  1405,  -495, -3880,   439,
     770,  -499, -3880,   729, -3880,   672, -3751, -3263, -3880,  -585,
   -2252, -2537,  -143, -3880, -3880,   688, -3042,  1637, -3880, -3880,
   -3880, -3031, -2049,  1319, -3880, -3880,   893, -3880, -1842,   894,
   -3880, -3880, -3880,   901, -3880,   180, -3880, -3880, -3880, -3880,
   -3827, -3880, -3880, -1508, -1956, -3880, -3880,  4256,  4257, -1012,
   -2443, -2461,   170,   174, -3880, -3880, -3880,  2614, -1750,   209,
     111,   108,  1999,  -811,   308, -1980, -3880,   458, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880,  2719, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880,  2720, -2097, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -2060, -2063, -3880, -3880,
    2101, -3880, -3880, -3880, -2081,  -973,  -969, -1441,  3340, -1502,
   -3111, -3880, -3880, -3880, -3880, -3880, -3880,  2840, -3880, -3880,
   -3880, -3880, -3880,  3700, -3880,  2838, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880,   765,  1789, -3880, -3880, -3880, -3880, -3880,
   -3880,  1163,  2668, -3880, -3880, -3880,     1, -3880, -3880, -3880,
   -3880,  2383, -3880, -3880, -3880, -3880,  2734, -3880, -3880, -3880,
   -3880, -3880, -3880,  1307, -3880,  1825, -3880, -1527, -3880, -3880,
     888,  -970,  1788,  3714, -3880,  1920, -3880, -3880, -3880,  -963,
   -3880, -3880, -3217,  3459, -3880, -3880, -1339, -3880,  3442, -1350,
   -2615,  2351,  1899,   296,  4931, -3880, -1131, -1075, -3880, -3880,
    -652, -3880, -3880, -3880,  -638, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880,  1356, -3880, -3880, -3880,
   -3880, -1205, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  -776,
   -3880,  2018, -3880,  -451, -3880,  3223, -3880, -3880, -3880, -2456,
   -1396,  1780,   869, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -1641, -3880, -2483, -3880, -3880, -3880, -3880,  1379,
   -3880, -3880, -3880, -3880, -3880, -3880, -1845, -3880, -2176,   119,
   -3880,   264, -3880, -3880, -3880, -3880, -3880, -3880, -3880,  -127,
     735,  -123, -3024, -1070,  1777, -3880, -3880, -1263,  3266, -1854,
   -3880,   654, -3880,  1931,   983, -3880, -3880, -3880, -3880, -3880,
   -3880,  1205, -2976,  2885, -3880, -3880, -2671,  -889,  2887, -3880,
   -3880, -2907,   274, -1887, -1356,  -853, -1386, -2562, -3880,   189,
   -3880, -3880,  -104, -3880, -3880, -3880,  1320,   414,   416, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
    -571,  -805, -3880, -3880,  2091,  2763, -3880,  3165, -3880, -1057,
    3414, -3880, -3880,  3415, -3880, -3880, -3880, -3880,  3086,  3060,
    1911, -3880, -3880, -2827, -3880, -3880,  1871, -3880,   656,  -886,
   -1300,   953, -3880, -3880,   955, -3616, -3880, -3880, -3880,  3424,
   -3880, -3880, -3880, -3880,   621, -3880,   -52,  3803,  3428, -3880,
   -3880, -3880, -3880, -3880, -3880,  2753, -1052,  3728, -3880, -3880,
   -3880, -3880, -3880, -3880,  2363, -3880, -3880, -3880, -3880, -3880,
   -3880,  2991,  3818,  -587, -1284, -3880,  -673,  2968,  2365,  -884,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880,  2551,  1250, -3880, -3880, -3880,
    3102, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,   985,  -118,
   -3880,   357,  -135, -3880,   207, -3880, -3880, -3880, -3880, -3880,
    -199, -3880, -3880,  -203, -3880,  -962, -1903,   850, -1230, -2179,
   -3880,   978, -2426, -2965,  -698, -1132, -1139, -1413,    82, -3880,
   -3880,  3542,  2146,    11,  -395, -1775,    -6, -2848,  -114,  -589,
   -3880,  -248, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
    1839, -3880, -3880, -3880,   942, -3880,  3847, -3880,  2639,   946,
    3851, -3880, -1353,  2434,  1863,  1865, -3880, -3880,  1873, -2233,
   -3880, -3880,   177, -3880,  2540, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880,  2511,  3588,  3104, -3880,  2555, -3880, -3880, -3880, -3880,
   -3880,   269, -3880,  -163, -3880, -2866,  2799,   301, -3880,  1040,
    -772,  -975, -3880, -3880,   268, -3880, -3880,   348,  3874,  3591,
   -3880, -3880, -3880, -3880, -3880, -2961,  -862, -3880, -3606,  1406,
   -2579, -3880, -3880, -2325, -3211, -3880, -3880, -1037, -3880, -3880,
   -3880, -3880, -2192, -3880, -3880, -3880,   146,  3936,  3939, -3880,
   -3880,   776, -3880,   -68, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880,   320, -3880,   317, -3880, -3880, -3880, -3880,  3802, -3880,
   -3880,  3806, -3880, -3880, -3880, -3880, -3880,  3807, -3880, -3880,
   -3880, -3880, -3880,  1730, -3880, -3880, -3880, -3880, -3880, -3880,
   -3880, -3880
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2614
static const yytype_int16 yytable[] =
{
     503,  1029,   940,   900,   936,  1481,  1357,   631,  1476,  1384,
    1387,  1952,  1976,   545,  1488,   134,  1667,   554,  2148,  1399,
    2291,   546,  1115,  1782,  1416,  1570,   568,  1412,  1869,  1571,
    1781,   566,  2983,   580,   501,   984,   583,   573,  2172,  1734,
     580,  2210,  1073,  1906,  2009,  2479,  1444,   599,  2545,  1001,
    1657,  1658,  1445,  1868,  1804,  3157,  2211,  1756,  2805,  3028,
    2897,  1812,  1698,  1493,  2119,  2899,  2058,  1560,  1494,  1914,
    2129,  2449,  3065,  3451,  2133,  2523,  3121,  2212,  1018,  1021,
     798,  2961,  3463,  2615,  3286,  2149,  2704,  2751,   620,  2710,
    3111,  3031,  3056,  2837,  3121,  3121,  2838,  2161,  3483,  2088,
    3066,  3625,  2066,  2089,  3521,   552,  1293,  2109,  2663,  2109,
     623,  2664,   503,  1060,   503,   630,   636,   620,  1814,  1815,
    2559,  3944,  1818,  1819,  1820,  1821,  3415,  1823,  1824,  1826,
    1828,  1829,  1830,  1831,  1832,  3946,  1210,  4180,  1168,  1169,
    1170,  2035,  2674,  2090,  3464,  3465,   625,  2110,   627,  2110,
    1461,  1211,  3605,  2440,  3590,  2195,  3820,  3557,  2101,  2046,
    3558,  1293,  3146,  3703,  2271,  3972,  3783,  2049,  2050,  2677,
    3704,  2532,  3365,  3456,  1846,  2826,   619,  1909,   651,  3568,
    2640,  1177,  1178,  3125,  3126,  3589,   511,  3487,  2307,  1421,
    3129,  1177,  1178,   907,   891,  2412,  1625,  3095,  4039,  4106,
    3446,  3268,  2659,  4434,  -502,   637,   565,  4434,  2651,  2847,
    2957,  3214,   572,  2131,  2132,   115,  2134,  1177,  1178,  2137,
    2138,  3559,  2169,  2141,  2084,  1920,  1177,  1178,  2151,  1235,
    1441,  3136,  3139,  2156,  2157,  2158,  2159,  2160, -1554,  1629,
    2261,  2164,  1294,  2166,  2266,  2688, -2009,  2690,  2463,  2176,
    2177,  2178,  2179,   827,  2701,  2183,  2668,  2185,   547,  4462,
    1320,  3121,  3121,  1629,  1446,  1690,  2834,  4092,  4155,  2835,
    2717, -2549,  1890,  3667,   641,  4284,  3650,  2728,  3366,   844,
    4246,  2440,  1177,  1178,  2267,  1468,  2025,  4343,  1380,  1490,
    2745,  2747,  2749,  3051,  3650,  1022,  2750,  1294,  1674,  1675,
    1676,  1212,   959,  4276,  3680,   561,  1490,  1155,   642, -2399,
    1687,   949,  3836,  4277,  2277,  1177,  1178,  4051,  3660,  4092,
    -929,  1386,  1177,  1178,  3928,  2394,   117,   672,  1792,  2848,
    2784,  2841,  2787,  2788,  2487,  1177,  1178,  -597,  2793,  2794,
    3375,  1742,  4256,  1490,  1746,  1177,  1178,  2802,  2803,  2026,
    3261,  3262,  2807,  1630,  1226,  3088,  3663,  1631,  2170,  1177,
    1178,  2453,  4092,  2084,  1670,  1765,  1766,  1177,  1178,  1770,
    1632,  1453,   852,  2080,  -598,  3048,   581,  1630,  3064,  3545,
    3379,  1631,  2413,  4040,  3545,  1670,   673,  1784,  1785,   582,
     133,  3546,  1177,  1178,  1632,   591,  3546,  1177,  1178,   129,
    1697,  2371,  4282,   656,  1215,  3547,  1917,  3799,   944,  4215,
    3547,  3545,  1360,  3466,  1115,  4157,   907,   891,   658,   133,
    1426,   907,  3553,  3546, -1554,  3288,   562,  1177,  1178,  1887,
    2116,  2279,  3729,   256,  2853,   258,  1579,  3547,   816,  1303,
    2116,   830,  1626,  4216,  4093,  3224,  2102,  3713,   907,   891,
    1918,  1454,  2280,  1177,  1178,  2117,  2101,  2386,  1177,  1178,
     638,  3365,  2464,  1723,  3868,  2117,  1724,  1333,  3467,   592,
    2454,  1646,  2863,  2488, -2478,  3379,  3730,  2433,   960,  3395,
     643,  3049,  1315,  1156, -2399,  2434,  1648,  1671,   130,  1177,
    1178,  2775,  1793,  3225,   945,  1469,  4093,  3651,  2842,  1177,
    1178,  2059,  1633,  4257,  2004,   646,  1177,  1178,  1686,  2949,
    2933,   630,   950,   636,  2849,  3651,  3770,  1646,  3664,  1177,
    1178,   674,  2310,  4278,   870,  3825,  1633,   829,  4344,   812,
     933,   853,  2081,   636,  3829,  2030,  1809,  1449,  2033,  4093,
    2027,  1179,  2854,  2037,  1180,   825,  1442,  2438,  1691,   630,
     845,   835,  3717,  3718,  3719,  1177,  1178,  3848,  1817,  2495,
    1870,  2441,  3850, -1554,   848,  1177,  1178,  3366,  2395,  2051,
    2052,  1401,  4284,  3052,  1493,  1838,  4000,  1179,  3472,  1494,
    1180,  3140,   901,   660,  3141, -1836,  1179,  4458, -2478,  1180,
     956,  3748,  3749,  3750,  1046,  1054,  3525,  2414,  1023,  1634,
   -2037,  3665,  2702,  4477,  4478,  3148,  3681,  2465,   973,   828,
    1227,  1213,  2711,  2415,  3152,  3367,  2675,  2675,   630, -2177,
     988,  3742,  1381,  1634,  2765, -2199,  3155,  2732,  2850,  1560,
    1681,  1682,   630,   503,  3159,  2864,  1953,  3631,   620,  3162,
    1015,  1304,  1179,   620,   620,  1180, -2326,   558,  1030,   988,
    2584,  1722,  1422,   630,  2837,  3096,  2663,  2838,  3506,  2664,
    1736,  2084,  2308,  1061,  1062,  1063,  1849,  1002,  4378,  1068,
    4107,  1627,  1749,  1750,  1751,  1179,  4043,  4349,  1180,  2489,
    1755,  4479,  1179,   548,  2088,  1180,  1177,  1178,  2089,  2441,
    1177,  1178,  3512,  3135,  3488,  1179,  3137,  3138,  1180,  1177,
    1178,  1225,  3055,  -502,  3121,  1179,  2109,  1869,  1180,  2625,
    2662,  3005,  1177,  1178,  1116,  3134,  2680,  4010,  4011,  1179,
    2689,   820,  1180,  3821,  1493,  4059,  1012,  1179,  2090,  1494,
    1180,   866,  1868,  3123,  3108,  2706,  2707, -1554,  1908,  4068,
    2272,  3263, -2549,   840,  2102,  4080,  2110,  2422,  2722,  1627,
     851,  1910,  1179,  1927,  3099,  1180,  3127,  1179,  2425,  2733,
    1180,  2428,  4240,  2608,  3376,  3301,  1921,  2626,  2627, -1554,
   -2549,  3560,  2101,  2171,   957,  1174,  2048,  1176,  2195,  2419,
    3128,  1385,  1891,  4453,  2638,  1390,  1395,  1179,  2437,  3368,
    1180,  1226,  3753,  3630,  1177,  1178,  1181,  1989,  1415,  4567,
    4014,  2656,  2657,  1219,   503,  1221,  1181,   988,   503,   630,
    1058,   503,   630,  1179,  2408,  4162,  1180,  1264,  1179,  -929,
    3666,  1180,  2249,  1298,  3735,  3648,   961,  2834,  1627,   563,
    2835,  1157,  1181,   620,  2034,  2494,  -597,  4016,  1220,  4500,
    2700,  1181,  1224,   630,   620,  1234,  1789,  1790,   620,  1179,
    3654,  2018,  1180,  3490,  1317,  2712,  2372,  2261,   659,  1179,
    1479,  2266,  1180,  1888,  2066,  3768,  1179,  2283,  2833,  1180,
    1177,  1178,  2839,  -598,  4103,  1177,  1178,  1450,   818,  1179,
    1374,  3947,  1180,  1427,  1177,  1178,  3473,  3474,  2776,   630,
    2284,  1177,  1178,   630,   630,  2300,  3243,  1181,  3989,  2876,
    2865,  2267,  1177,  1178,  3367,  2855,   630,   849,  1177,  1178,
    2068,  2387,  2840,  3396,  2762,  1179,  2526,  3068,  1180,  1725,
    1670,  1306,  1726,  3751,  1510,  1179,   506,  1402,  1180,  2682,
    1181,  2317,  1323,  3327, -2037,  4073,  1329,  1181,  1578,  1945,
    4031,  2984,  4288, -2478,  1789,  2337,  3548,  4037,  4265,   620,
    1181,  3548,  2396, -2177,  2821,  2822,  2823,  2824,  3004, -2199,
    1181,  1177,  1178,  1177,  1178,  2345, -1514,   933,   630,  2349,
    1489,  3554,  3212, -2478,  1181,  2318,  1954,  2084,  3548,  4074,
   -2326,   559,  1181,  2668,  1001,  2143,  4028,  3028,  3758,  2298,
    1653,  1089,  3762,  2373,  2683,  4089,  4280,  2316,  4081,  1257,
    1457,   620,  3587, -1514,  1177,  1178,  1194,  1181, -2613,  1177,
    1178,  4629,  1181,  1177,  1178,  3757,  4075,  1451,  1380,  3761,
    3294,  2299,  3296,  3031,  1782, -2479,  2375,  2376,  2577,  2101,
     135,  1833,  1177,  1178,  3301,  1650,   503,   503,  2000,  1226,
    1452,  2343,  1181,  1741,   512,   503,  1179,  1227,  1039,  1180,
    1179,  2713,  2507,  1180,   620,  4060,  2392,  2393,  1663,  1179,
    2102,  1799,  1180,  1159,    43,  2153,  4061,   507,  1181,   133,
    1651,  1652,  1179,  1181,  2202,  1180,  1095,  4247,  2658,  4249,
    1990,  3520,  2966,  2967,  1177,  1178,  2763,  3324,  3325,  3507,
    2837,  2684,  1116,  2838,  3990,  1177,  1178, -2037,  1837,  3965,
    3374,  3530,  3114,  2573,  1181,  1991,  1116,  1226,  2001,  2669,
    4266,  4022,  1177,  1178,  1181,  2180, -2177,  3978,  3331,  3332,
   -2613,  1181, -2199,  2588,  2663,  2338,  2714,  2664,  3348,  3349,
    2527,  2507,  3895,  3498,  1181,  3387,  3388,   557,  3613, -2479,
    1955,  3754,  1654, -2326,  1956,  1871,  1661,  2144,  2545,  2545,
    2941,  2602,  3511,  2604,  1179,  3252,  1783,  1180,  4289,  1177,
    1178,  1096,  2607,  2675,  1994,  2610,  2611,  3313,  3663,   630,
    1181,  1177,  1178,  2624,  2685,  3454,  2942,  1177,  1178,  1946,
    1181,  1177,  1178,  1177,  1178,  2323,  1032,  1535,  4279,  1177,
    1178,  2203,  2449,  1177,  1178,  2324,  4334,  2427,  4335,  4293,
    1040,  1919,  1214,  3991,  1197,  3150,   630,  4300,  3639,  1177,
    1178,  1841,  1027,  1028,  1570,   933,   620,  3640,  1571,  3115,
    1177,  1178,  1177,  1178,  1177,  1178,   977,  2154,    55,  2715,
    1179,   620,  1041,  1180,  2084,  1179,  3841,  2088,  1180,  1870,
    1834,  2089,  1177,  1178,  1179,  2878,  2148,  1180,  1177,  1178,
    3842,  1179,  1116,   630,  1180,  3016,  1560,  1458,  2662,  2439,
    2109,  1194,  1179,  2834,  1835,  1180,  2835,  2914,  1179,  4260,
    4261,  1180,  1992,  1177,  1178,  2465,  3953,  3954,  1497,  2443,
    4608,  2090,  4062,   933,  3346,  2578,  2965,   570,  4267,  1895,
    3149,  1898,  1177,  1178,   620,  1227,  2459,  3824,  2508,   666,
    2110,  1181,  2181,   620,  1843,  1181,  2720,  2721,  2119,   630,
    1177,  1178,  1902,  2149,  1181,  2101,  2330,  2102,   620,   620,
    2335,  1179,  2002,  1179,  1180,  3100,  1180,  1181,  2670,  2336,
    3664,  1177,  1178,  1355,  2503,  2504,  1493,  1177,  1178,  1995,
    3145,  1494,  2339,  3508,  1223,  4241,   593,  1941,  1177,  1178,
    2525,  2553,  1381,  2970,  2971,  1177,  1178,  1177,  1178,  3641,
    4173,  1199,  1200,  1227,  1179,  2254,  1983,  1180,  4372,  1179,
    2791,  1985,  1180,  1179,  1670,  3477,  1180,  2508,  1782,  2964,
     630, -1514,  1329,  1982,  2070,  3032,  1177,  1178, -1836,  2974,
    2005,   901,  1179,  2686,  4076,  1180,  1177,  1178,   594,  1954,
     503,   503,   503,   620,   503,   620,  1212,  1329,   608,  1181,
    4227,  3061,  2015,  3669,  2031,   503,  3223,   630,  1177,  1178,
     503,  1040,  3062,  2261,  2351, -1864,   596,  2266,  4236,  2833,
    1836,  4024, -1638,  2839,  2019,  2020,  2021,  3843,  2023,  3659,
     620,  1059,  1954,   856,  1179,  2195,  1042,  1180,  3539,  2032,
    2771,  1177,  1178,  1051,  2036,  1179,  1177,  1178,  1180,  1197,
    2101,   978,  4006,  2829,  2084,  4063,  3260,  2267,  1177,  1178,
    1595,  1596,  1179,  2840,  2513,  1180,  3426,  3293,   869,  3566,
    3567,  2509,  4609,  1177,  1178,  1181,  3701,   979, -1864,  3230,
    1181,  2022,   630,  2024, -2479,  1177,  1178,  1745,  2420,  1181,
    2358, -2613,  2513,  1147,  3231,  2362,  1181,  1204,  1205,  1206,
    1207,  1208,  1209,  2671,  2363,  2100,  2283,  1181,   611,  1179,
    2084,  2365,  1180,  1181, -2479,  1194,  3697,  1627,  2047,  3266,
    3699,  1179,  2366, -1864,  1180,   612,  4483,  1179,  2370,  2284,
    1180,  1179,  3849,  1179,  1180,  3851,  1180,  3226,  2182,  1179,
    1177,  1178,  1180,  1179,  2699,   857,  1180,   614,  1003,  4422,
    2509,  1151,  2196,  1955,  4161,  4159,  2772,   630,  3639,  1179,
    3997,   620,  1180,  2433,  2207,   620,  1181,  3640,  1181,  2114,
    1179,  3076,  1179,  1180,  1179,  1180,  1024,  1180,  1148, -1836,
    3000,  2388,   831,  3329,  1226,   626,  1177,  1178,  4496,  4496,
    2515,  2516,  1179,  2102,  4423,  1180,  1955,  1365,  1179,  3478,
    1956,  1180,  1043, -2613,  1611,  1612,  3982,  3983,   870,  1181,
    1670,   620,  -235,  4545,  1181,  4547,  4007,  3063,  1181,  4394,
    4232,   702,  3666,  1179,  3330,  1542,  1180,   858,  3445,  3341,
     630,  2274,   503,  3351,  2255,  4560,  1152,  1181,  1942,  4551,
    1226,  2887,  1179,  4242,  1417,  1180,  1177,  1178,  1068,  2204,
    2297,  3436,  3352,  2209,  1025,  2084,  4023,  1042,  4552,   117,
    1179,  3810, -1836,  1180,  4588,  4589,  2275,  2888,  1177,  1178,
    2773,   832,  3439,   621,  1545,  1177,  1178,  3227,   624,  1177,
    1178,  1179,   639,  1366,  1180,  2145,   707,  1179,  3086,  1181,
    1180,  1177,  1178,  1418,  4039,  1177,  1178,   646,  1179,  2254,
    1181,  1180,  1177,  1178,  3909,  1179,  1213,  1179,  1180,  3641,
    1180,  1177,  1178,  1197,  2311,  2889,  2662,  1181,  2890,  2195,
    3243,  3480,  4424,  1116,  2344,  2116,  2891,  2444,   647,  1310,
    4197,  3347,  1311,  1769, -1864,  3093,  1179,  3528,  2102,  1180,
    1970,   833,  2195,  4243,   648,  3080,  1179,  3121,  3121,  1180,
    2117,  4198,  1204,  1205,  1206,  1207,  1208,  1209,   651,  3811,
     933,  1943,  1177,  1178,  1181,  3998,  3081,   653,  1179,  1003,
   -1864,  1180,  2969,  4244,  1177,  1178,  1181,   655,  2315,   520,
    1177,  1178,  1181,   719,  2411,  1226,  1181,   667,  1181,  4460,
    2325,   669,  4464,   670,  1181,  3479,  2326,  1869,  1181,  3812,
    2334,  1179,  2347,   671,  1180,  1971,  1179,  3082,  2348,  1180,
    1177,  1178,  2352,  3295,  1181,   808,   933,  2549,  1179,  1177,
    1178,  1180,  1868,  1043,  2536,  1181,  2435,  1181,  2356,  1181,
     823,  3386,   630,  1179,   620,   630,  1180,  1177,  1178,  2357,
    1227,  2361,   256,  2364,   258,  1179,   620,  1181,  1180,  1177,
    1178,  1264,   813,  1181,  2084,  2833,  1264,  1365,  2901,  2839,
   -1639,  2367,  2572,  2101,  2417, -1865,   735,  2379,  1226,   630,
   -1757,  2639,  2908,  1782, -1757,  1177,  1178,   826,  1181,  4040,
    3442,  1312,  2187,  1177,  1178,   843, -1864,   620,  3004,   841,
    4535,   620,  2398,   837,  1177,  1178,  1227,  1181,   861,  2840,
    1179,  3745,  3116,  1180,  2147,  2923,   863,   630,   630,   620,
     620,  3298,   970,  2254, -1757,  1181,  3971,   853, -1757,  2513,
    2292,  1116,  2502,   630,  2877,    13,  2338,  2514, -1865,  3317,
     971,  2254,   630,  3915, -1864,  2546,  1181,   907,   891,   972,
    2548,   974,  1181,  1366,  1073,   829,  1179,  2067,   620,  1180,
    3323,   981,  2550,  1181,  2892,  2935,  3326,  1405,  1782,   577,
    1181,   933,  1181,  1374,  2566,  3505,   577,  3333,  2568,  2645,
     630,  2551,  2980, -1865,  3337,  2485,  3338,   990,  2255,  1306,
    2545,  2565,  2552,  1194,  1226,  3117,  4041,   901,  1480,  1033,
     508,  1181, -1836,   509,  1003,   900,  3694,  1323,  2506,  2972,
    4470,  1181,  2601,  2314,  1214,  3339,  1179,  1782,  1013,  1180,
   -1836,  2829,  2937,  1038,  2597,  3340,  1406,  3832,  1206,  1207,
    1208,  1209,  1034,  1181,   115,  4036,   875,  2709,  1179,  2331,
    1214,  1180,   620,    25,  2646,  1179,  2558,  3342,  1180,  1179,
    3833,  1227,  1180,  1070,   933,  2515,  2516,   508,  1407,  1071,
     509,  1179,  2256,  1214,  1180,  1179,  1181,  1072,  1180,  1506,
    1507,  1181,  1179,  2647,  2312,  1180,  2553,  1074,  2084,   961,
    3345,  1179,  2629,  1181,  1180,  3350,  3561,  1075,  3834,  3562,
    1076,  2636,  2637,  2517,  1217,   764,  2084,  3353,  1181,  2340,
    1214,  1079,  2641,  2642,  2643,  2644,   571,  2652,  2653,  2196,
    1181,  1644,  3355,  1218,  2893,  1080,  2196,  2313,  1214,  2667,
    2341,  1739,  2679,  2196,  3357,  3514,  3515,  2196,  1194,  2695,
    2609,  2681,  1179,  1081,  1227,  1180,  1082,  2696,  1127,  2009,
    2695,  2648,  2196,  2196,  1179,   630,  2695,  1180,  2697,  2698,
    1179,  3782,  2719,  1180,  2827,  2196,  1083,  1783,  2843,   876,
    1146,  2102,  1222,  2723,  4042,  1181,  2196,   620,  2731,  1084,
     933,  1085,  1357,  1160,  1161,  2735,  2736,  2730,  2695,  3359,
    1179,  2091,  4043,  1180,  2894,  2196,  2761,  2460,  1086,  1179,
    2461,  1197,  1180,  2462, -1865,  1087,  1970,  2554,  1385,  1239,
    2254,  1090,  2255,  1385,  3755,  3493,  1092,  1179,  1226,  3494,
    1180,  1181,  2895,  4390,  3118,  4392,  3495,  4393,  2549,  1179,
    2255,  2257,  1180,  1299,  2649,  3360,  1226,  3661,   991,  2786,
   -1865,  1093,  2786,  2786,  1094,  2786,   877,  1097,  2786,  2786,
    2786,  2786,  2786,  2786,  2786,  1179,  1098,  2786,  1180,  2786,
    1227,  3671,  3672,  1179,    37,  2734,  1180,  2353,  1214,  3984,
    2645,  1971,   630,  2727,  1179,  1099,   630,  1180,  2555,  1100,
    4044,  1181,  1408,  4182,  3686,   875,  4165,  4169,   992, -1836,
     620,   620,   620,  2872, -1836,  3361,  2875,  3798,  2354,  1214,
      43,  2092,  1101,  1181,  2256,  2962,  4304,  4305,  4306,  4307,
    1181,  2997,  1301,  2998,  1181,  1102,   630,  3691,  1103,  3540,
    1782,   630,  3543,  3544,  3692,  1428,  1181,  3032,  3693,  1104,
    1181,  2355,  1214,  2101,  2709,  2646,  1197,  1181,  1105,  3563,
    3784,   600,   965,   966,  3904,   967,  1181,   968,  1106,  1870,
    1293,  3908,  2359,  1214,  1429,  3798, -1865,  4340,  1199,  1200,
    3914,  4165,  4169,  2550,  2647,  2084,  1177,  1178,  3116,  1107,
    2084,   993,  1110,  3040,  3041,  3042,  2654,  2655,  2868,  2869,
    2870,   576,  2551,  2254,  1302,  2883,  1318,   601,  1111,  4183,
    4184,  3470,  1117,  2552,   933,  4185,  4186,  1181,  1118,  3304,
     907,   891,  1430,  3311, -1865,  1330,  1431,  2071,   876,  1181,
    1332,  3916,   933,   630,  1119,  1181,    52,  2951,  1214,  1120,
    -681,  2072,  1355,  3917,  4165,  1194, -1554,  1409,  4169,  3045,
    2114,  3709,  2648,  1983,  3708,  3256,  3257,  1293,  2981,  1121,
    3438,  1122,   630,  2115,  1123,  1181,  3343,  1214,  1410,  3300,
    1982,  3117,  1124,  2650,  1181,  3413,  3414,  3448,  3449,  3918,
     602,  2989, -1836,  2257,    55,  4082,  4083,  2995,  2995,  3460,
    2995,  2093,  1181,   115,  1227,  3452,  3453,  2553,  3616,  3617,
    2094,  2829, -1554,  1125,  1181,   877,  1294,  2095,  1411,  2255,
    3618,  3619,  1227,  1199,  1200,  1226,  3011,  1352,  3919,  1970,
    1226,  3951,  1202,  1203,  1204,  1205,  1206,  1207,  1208,  1209,
    1181,  3620,  3621, -1554,  1128,  2649,  1359, -1554,  1181, -1554,
    1877,  3033,  2572,  1385,  4174,  3036,  3385,  3623,  3624,  1181,
    2995,  2995,  2995,  1129,  2645, -1554,  1130,   630,  2084,  1131,
   -1554,  3626,  3627,  3856,  4573,  4574,  -681,  1132,   879,   880,
    1133,   882,   515,   884, -1554,  2994,  2994,  1432,  2994,  4310,
    1134, -1554,  -681,  2256,  1971,   116,  3737,  1135, -1554, -1554,
     885,   681,  2114,  1294,  3706,  1214,  2549,  1805,  4224,  4225,
   -1554,  3732,  3733,   878,   117,  2115,  2116,  2073,   994,  1136,
    2096, -1554,  1137,  1972,   901,  1385, -1554,  1138,  2554,  2646,
    1139,  1703,  1140,  1878,  3772, -1554, -1554,  1782,  1879,  3861,
    3862,  2117,  3898,  3901,  3442,  1193,  3295,  1141,  2994,  2994,
    2994,  2102, -1554,  1197,  3910,  1214,  1142, -1554,  2647,  3781,
     630,   630,  2645,  1143,  1433,  2744,  1144,  1202,  1203,  1204,
    1205,  1206,  1207,  1208,  1209,  1145,  3792,  1149, -1554,  1150,
    1782,  1880,   995,   702,   996, -1554,   118,  3505,  3924,  1214,
    2645,  1973,  2255,  2746,  1153,  2074,  1881, -1554,  1226,  2555,
    3118,   933,  3932,  3933,  1154, -1554,   933,  2196, -1554,  1158,
    2196,  2196,  3538, -1554,  1162,  2695,  1163,  2097,  -681,  1164,
    2645,  2075, -1554,  2748,   515,  1165,  2648,  2646,  1434, -1554,
    3973,  3733,  1166,   630,  1707,  1167,  2695,  2196, -1554,  1216,
     706,  2550,  3976,  3977,   603,  2695,  3565,  1360,   707,  1363,
    1194,  3147,  2257,  3906,  3570,  2646,  2647,  2695,  2116,  1368,
    2551,  3595,  1377,  3153,  2650,  2695,   604,   119,  2549, -1554,
    2695,  2552,  3987,  3988,  1974,  1376,  4229,   712,  2118,  4012,
    2655,  1227,  2076,  2117,  2647,  2646,  1227,  1396,  1027,  1028,
    4025,  3977, -1554,  1400,  1806,  -681,  3166,  4026,  3977,   620,
    4027,  3977,  4090,  3977,  3222,  4091,  3977,   605,  1404,  2649,
    1199,  1200,  2825,  1423,  2647,  3240, -1554,   879,   880,   881,
     882,   883,   884,  1424,  2648, -1554, -1554,  1425,   514,  1440,
    2737,  1443,  2738,  4234,  4101,  3977,  1447,  4199,  1448,   885,
    1708,  4102,  3977,  3247,  1711,   719,  3251,  1456,  1435, -1554,
    1459,  1712,  2648,  1460,  1195,  2553, -1554,  1463,   532,  4108,
    4109,  4110,  4109,  4223,  3453,   681,  2786,   606,  1464,  4200,
    1466,  1194,  3259,  2739,   933,  1471,  4311,  1477,  1196,  3955,
    3276,  1490,  2648,  2077,  3890,  3891,  3892,  3167,  4312,  4313,
    1436,   620,  2196,  1496,  3996,   518,  2740, -1554,  4341,  3733,
     120,  2494,  1498,  2550,  4420,  3453,  3996,  2649,  4421,  3453,
    1500,   730,  1503, -1554,  4468,  4469, -1836,   533,   515,  4502,
    4503,  3679,  2551,   733,  4540,  3615,  2114,   734,   735,  4620,
    4621,  1713,  1504,  2552,  2741,  2649, -1554,  -681,  1508,  4316,
    3792,  1573,  4319,  4320,  4321,  4322,   900,   702,  1197,   534,
    1576, -1554,  -885,  1574,  1227,  1203,  1204,  1205,  1206,  1207,
    1208,  1209, -1554, -1554,  1577,  2649,  1772,  1773,  1580,  1027,
    1028,  1581,  2536,  4409,  4410,  2360,  2554,  3707,   121,  3280,
    -681, -1554,   535, -1554, -1554,  3267,  3930,  3931,  1582,  1374,
    4201,  4395,  1638,  1975,  1715,  4049,  4050,  1640,  1639,  1643,
     516,  3822,  1645,  1646,   706,  4411, -1554, -1554,  1647,  1807,
   -1554, -1554,   707,  1664,  3974,  3975,  1666,  2553,  1212,  3980,
    3981,  1670,  1264,  1677,  1689,  1808,   630,  1692,  2650,  1728,
     536,  1738,  1739,  1740,  1822,  1763,   620,   518, -1554,  1780,
    1791,   712,  2145,   122,  1198,   123,  1816,  2555,  1800,  2071,
   -1554,  1842,  3011,   630,  1845,  1847,  1783,  4407,  4408,  1848,
    1851,  1854,  1855,  2072,  1856,  1857,  4416,  1858, -1554,  1197,
   -1554,  1116,  1859,   630,  4202,  1860,  1861,  1872,  1513,  1514,
     630,  1266,  2116,  1873,  1874,  2546,  2546,  1876,  3817,  3818,
    1882,   124,  4203, -1554, -1554,  1595,  1596, -1554, -1554,  1884,
    1885,  1893,  1894,  1904,  4283,  1199,  1200,  2117,  3827,   719,
    2981,  -819,  -819,  1516,  1907,  3830,  4204,  1915,  1201,  1923,
    1924,  -819,  -681,  1925,  3425,   756,  2650,  1519,  1930,  3793,
    1933,  1936,  3794,  1716,  1926,  1520,  1937,  1939,  2554,  1940,
    3852,  1783,   762,  3854,  1966,  1969,  1984,   764,  1968,  1718,
     765,  1979,  3496,  3497,  2650,  3499,  1986,  2013,   -64,  1522,
    2010,  2017,  1267,   537,  2038,  2039,  2196,  2040,  2041,  2043,
    2045,  2053,  2056,  1490,  2060,   730,  2196,  1523,  2695,  2065,
    2069,  2742,  2114,  2130,  2650,  2139,  2135,  4248,  4176,  2136,
    1783,   734,   735,  1268,  2196,  2695,  2140,   620,  2142,  2196,
    2152,  2150,  2155,  3795,  3796,  2162,  1528,  1269,  2163,  2555,
    1782,   517,  2167,  2168,  2174,  2175,  2198,  4398,  2184,  2199,
    4272,  1627,  2214,  2250,  2215,  2216,  1199,  1200,  3571,  2073,
    1270,   518,  2217,  1271,  2218,  2219,  2220,  2221,  2222,  1611,
    1612,   538,  2223,  2240,  2146,  2224,  1272,  2225,  2226,  1202,
    1203,  1204,  1205,  1206,  1207,  1208,  1209,  2227,  2228,  2229,
    2230,  2147,  2231,   503,  2232,  2233,  2248,  3610,  2234,  2695,
    1273,  3572,  2235,  2268,  2236,  3573,   519,  3574,  -603,  2237,
    1532,   520,  2238,  2239,  1194,  2241,  2242,  1533,  4327,  4328,
    3247,  4330,  2243,  2244,  2245,  1274,  2246,  3606,   933,  3629,
    2247,  1275,  1194,  2269,  1534,  2276,   539,  2074,  2286,  2287,
    2288,   540,  2289,   620,  4205,   620,   521,  2612,  2613,  2614,
    2295,  3632,  2321,  3575,   522,  2301,  3658,  1357,  3638,   541,
    1027,  1028,  2303,  2075,  2304,  2305,   810,   811,  1357,  2320,
     814,   815,  1276,  2322,   817,  2327,   819,  1616,  1617,  1618,
    1619,  1620,  1621,  1622,   542,  1782,  2328,  2338,  2329,  2332,
    2346,  2342,  4398,  2350,  1536,  2368,  2369,  2374,  2389,   543,
    1202,  1203,  1204,  1205,  1206,  1207,  1208,  1209,  2403,  1184,
    1185,  2390,  1537,  2377,  2378,  2391,  1385,  2410,  3334,   756,
    1513,  1514,  2406,  3793,  2076, -1260,  3794,  1095,  2416,  1209,
    2426,  3646,  1147,  3647,  2445,  1151,   762,  4417,  2456,  4418,
    4419,   764,  2457,  2486,   765,  2496,  3705,  2492,  2499,  1186,
    2521,  2524,  2530,  -819,  -819,  1516,  4507,  2561,  2563,  2557,
    1187,  2576,  2581,  -819,  2574,  2575,  2582,  1541,  2579,  1519,
    2598,  2580,  2603,  2617,  2620,  1543,  2600,  1520,  2989,  2622,
    2583,  1298,   630,   630,   630,  -854,  2621,  2628,  2635,  2630,
    2703,  2705,  2777,  2631,  2632,  3011,  2633,  3795,  3796,  1188,
    2770,  1522,  2634,  1374,  2828,  1385,  2844,  1277,  2781,  2783,
    1189,  1241,  1197,  3033,  3744,  1490,  2809,  3746,  2873,  1523,
    2881,   630,   630,   630,   630,  2077,  2812,  1279,  2572,  2877,
    1197,  4507,  2886,  1782,  2815,  1280,  2818,  1190,  2852,  2903,
    4615,  4209,  2902,  1281,  1374,  2904,  2915,  1782,  1528,  2916,
    2434,  2928,  1782,  1549,  4624,   901,   901,  1782,  2950,  4615,
    2959,  2960,  2968,  2977,  4624,  2978,  2987,  2988,  2992,  3006,
    3007,  3002,  4286,  3013,  3012,  3017,  3398,  3789,  1282,  3037,
    3014,  3775,  4455,  1910,  3018,  3399,  3019,   620,  1027,  1028,
    3023,  1283,  1284,  3038,  3576,  3400,  3039,  3802,  3807,  3046,
    3047,  3577,  1191,  3057,  3058,  3059,  1242,  3401,  3402,  3403,
    1550,  1551,  1552,   630,  3072,  3073,  3075,  3078,  1553,  3079,
    1994,  1995,  1532,  3404,  3097,  3089,  3101,  3102,  3104,  1533,
    3103,  1243,  3105,  3109,  1554,  1244,   630,  1555,  3112,  3578,
    3113,  3131,  3132,  1285,  3133,  3144,  1534,  1509,  3151,  3156,
    3160,  3163,  1510,  1238,  1511,  3835,  1512,  3164,  3229,  2857,
    3165,  3233,  3235,  3855,  3265,  3264,  1513,  1514,  3272,  1199,
    1200,  3270,  1286,  1557,  1245,  3800,  3277,  1542,  4585,  3240,
    3269,  3279,  3292,  3247,  4600,  3251,  3870,  1199,  1200,  3858,
    4209,  3301,  1246,  2296,  1287,  3305,  1288,  1515,  3382,  3307,
    3276,  1516,  1517,  1334,  3312,  2786,  1536,  1518,  3314,  3315,
    3316,  3318,  1335,  3319,  3875,  1519,  3362,  3579,  3377,  3789,
    3789,  3789,  1336,  1520,  1537,  3418,  3416,  3417,  3372,  3287,
    3373,  3310,  1521,  3419,  1337,  1338,  1339,  3384,  3389,  3391,
    3420,  3421,  3427,  3422,  3430,  1310,  3433,  1522,  3431,  3444,
    1340,  3447,  3455,  3457,  1247,  3458,  3450,  1241,  3459,  3471,
    3475,  1490,  3476,   870,  3485,  1523,  3489,  3501,  3580,  3486,
    3500,  3516,  3513,  1524,  1525,  3517,  3523,  3522,  1385,  1541,
    1526,  3524,  3534,  3541,  3600,  3604,  3596,  1543,  1527,  3601,
    3607,  3608,  -964,  3612,  1528,  3940,  3599,  3614,  3622,  3615,
    1783,  3633,  1177,  1178,  3634,  1529,  3628,  2513,  4627,  3635,
    3649,   630,  3636,  1202,  1203,  1204,  1205,  1206,  1207,  1208,
    1209,  3655,  3674,  3656,  3581,  3657,  4142,  1530,  3670,  3668,
    3675,  1202,  1203,  1204,  1205,  1206,  1207,  1208,  1209,  3682,
    3683,  2395,  3367,  1783,  1535,  3405,  3695,  1510,  3711,  3789,
    3789,  3715,  1242,  3724,  3789,  3789,  3726,  3968,  3734,  3747,
    3736,  3776,  3406,  3759,  3785,  1549,  1531,  3760,  1532,  4286,
    3777,  3819,  3786,  3779,  3823,  1533,  3790,  1243,  3791,  1265,
    1266,  1244,  3805,  3808,  3460,  1248,   630,  3816,  3587,  3826,
    3828,  3839,  1534,  3840,  1249,  3844,  3846,  1699,  1700,  1701,
    1702,  1703,  3847,  3590,  3853,  2775,  3857,  3859,  3865,  1250,
    3872,  3873,  3882,  3881,  3884,  1535,  3885,  3886,  3888,  3893,
    1245,  3911,  1550,  1551,  1552,  3896,  4005,  3897,  3898,  3899,
    1553,  3900,  3902,  3912,  1251,  2468,  3247,  3247,  1246,  4142,
    4142,  3903,  3907,  3927,  3913,  3925,  1554,  4019,  3922,  1555,
    3921,  3926,  1536,  3935,  3936,  3948,  3945,  2546,  3933,  3076,
    2469,  1267, -1468, -1473,  3959,  3963,  3966,  3969,  3979,  3986,
    1537,  3992,  1341,   733,  1538,  2470,  4001,  1252,  3901,  4015,
    4035,  4020,  3407,  4029,  4033,  1557,  2471,  4034,  4047,  1342,
    4052,  4209,  1268,  4038,  4053,  4056,  4597,  4066,  3408,  4057,
    1247,  1704,  1705,  1706,  1707,  4070,  1269,  4085,  1253,  3536,
    3537,  4072,  4100,  1539,   869,  4104,  4111,  3310,  1540,  4147,
    3310,  3310,  4597,  3036,  4144,  1541,  4156,  4150,   508,  1270,
    1542,   509,  1271,  1543,  4151,  2472,  2473,  3310,  4189,  2858,
    4177,  3789,  4172,  4171,  4175,  1272,  4178,  4179,  4192,  4191,
    4088,  3569,  4105,  4210,  4211,  4212,  3588,  3591,  3593,  3594,
    3409,  4213,  4220,  2474,  2765,  1544,  4237,  4222,  4251,  1273,
    -376,  4269,  4271,  4274,  4006,  4292,  4295,  3410,  4303,  1545,
    1546,  1547,  1548,  4317,  4315,  4318,  4326,  4142,  4142,  4323,
    4329,  4331,  4332,  4336,  1274,  4342,  4339,  4345,  -394,  4346,
    1275,  4349,  4352,  4377,  4379,  4383,  4382,  4380,  4381,  4142,
    1708,  1549,  1709,  1710,  1711,  4385,  4413,   620,  4402,  4427,
    4196,  1712,  4430,  4386,  4431,  1343,  4437,  4438,  4448,  4449,
    4442,  1248,  2475,  4458,  4471,  1699,  1700,  1701,  1702,  1703,
    1249,  1276,  4454,   806,  4472,  4473,  4474,  4484,  4475,  4479,
    4476,  4486,  4488, -2381,  4492,  1250,  4489,  4518,  4521,  4523,
    4533,  4536,  1179,  4531,  4543,  1180,  4539,  4542,  1550,  1551,
    1552,  4544,   806,  4233,  4553,  4548,  1553,  4549,  4255,  4142,
    1251,  4554,  4557,  4262,  4559,  2476,  4563,  1344,  4565,  4568,
    4569,  4570,  1554,  4441,  4142,  1555,  4572,  4579,  4577,  4576,
    4586,  1713,  4601,  4602,  1345,  4190,  4606,  4616,  4441,  4626,
    4142,  4264,  2820,  2985,  2811,  3247,  3869,  2814,  1556,  2808,
    2817,  3871,  3867,  1252,  4452,  3876,  3874,  3124,  1052,  4281,
    4450,  1557,  4152,  1502,  4451,  3883,  3878,  4018,  4618,  1704,
    1705,  1706,  1707,   590,  4581,  3412,  4387,   943,  2522,  2452,
    4122,  4590,  4123,  4125,  1253,  4126,  4142,  4128,  4129,  4130,
    4515,  4131,  4435,  1714,  1715,  4132,  4133,  4516,  4142,  4142,
    4497,  4136,  4447,  4446,  4137,  2188,  1277,  1642,  4412,  4138,
    1278,  2113,  4158,  3432,  3036,  3158,  3036,  1558,  3938,  3437,
    3728,  -964,   806,  4401,  4457,  1913,  1279,   806,  4054,  4556,
    3941,  4510,  4538,  4325,  1280,  4142,  2253,   668,  3887,  3271,
    3285,  3533,  1281,  2767,  2186,  4142,  3518,  3555,  3556,  4441,
    4142,  3597,  4353,  3994,  3801,  3845,  4456,  2193,   806,  4530,
    3831,  3364,  3698,  3110,  4532,  3696,  3700,   528,   529,  2285,
    4231,  4238,  4297,  4142,   806,  4142,  4239,  1282,  1708,  4299,
    1709,  1710,  1711,  2867,   630,  4099,  3999,  2190,  2755,  1712,
    1283,  1284,  2197,   954,  2055,  4142,  3804,  4142,  1462,  4142,
    2057,  3020,  2709,  1783,  4235,  2251,  3519,  4196,  2505,  3424,
    3003,  4441,  4142,  4441,  3725,  2208,   630,  3043,   806,   806,
     806,   806,   969,  2958,  4142,  4142,  4441,  4406,  2976,  1375,
    2564,   806,  1364,  1716,  3390,  1737,  2900,  3067,  3756,  3380,
    4142,  4142,  1285,  4226,  4338,  4142,  4511,  1181,  1717,  1718,
    3866,  4512,  1688,  4509,  4441,  4441,  3923,  3702,  2975,  4605,
    2062,  3527,  2063,  4230,  2785,  4301,  3462,  2789,  2790,  1713,
    2792,  1286,  4513,  2795,  2796,  2797,  2798,  2799,  2800,  2801,
    2871,  4086,  2804,  4087,  2806,  1928,  1901,  3026,  1844,  1482,
    1483,  3001,  3943,  1287,     1,  1288,     2,  3740,  3739,  1484,
    3970,   958,  4499,  1485,  1069,  2029,  2605,   939,  2044,  2606,
     630,     3,  2446,  3532,  3727,     4,  4555,  2294,  4465,  4466,
    4571,  4214,  4625,  4628,  4333,  3838,  3087,  3743,   806,     5,
       6,  1714,  1715,  3773,  1935,   903,  2409,     7,  3774,   904,
    2586,     8,     9,  3085,  3084,  2273,  3077,  2491,  1783,  2467,
    4302,  2528,  1938,  1351,  3712,  4308,   867,    10,  1354,   662,
    3468,   630,   663,  4275,  4273,  1055,     0,  3240,  3240,  1056,
    1057,     0,     0,     0,     0,    11,     0,     0,     0,  4520,
       0,     0,     0,     0,     0,     0,  4528,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    12,  4619,     0,
       0,     0,     0,     0,     0,     0,    13,    14,    15,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    16,
      17,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,  4561,     0,
       0,     0,     0,  4566,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,   806,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,     0,
       0,  1716,  4598,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,    22,     0,     0,  1717,  1718,    23,     0,
       0,    24,     0,     0,     0,     0,  1783,     0,  4598,     0,
       0,     0,     0,     0,     0,     0,   630,     0,     0,     0,
    1783,     0,   806,   806,    25,  1783,    26,     0,     0,     0,
    1783,   806,   806,   806,   806,   806,   806,   806,     0,     0,
       0,     0,     0,     0,    27,   806,   806,     0,   806,   806,
       0,     0,     0,   806,   806,     0,     0,   806,   806,   806,
     806,    28,   806,   806,     0,    29,     0,     0,     0,     0,
     806,   806,     0,   806,   806,   806,   806,   806,     0,     0,
     806,   806,   806,   806,   806,   806,   806,   806,   806,   806,
     806,     0,   806,     0,     0,   806,   806,     0,     0,     0,
     806,     0,     0,     0,   806,   806,   806,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   806,   806,   806,
       0,     0,     0,     0,     0,     0,   806,     0,     0,     0,
       0,     0,     0,   806,   806,   806,     0,   806,     0,     0,
       0,     0,     0,     0,   806,   806,   806,     0,   806,   806,
     806,   806,   806,     0,   806,   806,   806,   806,   806,   806,
     806,   806,     0,    30,     0,   806,   806,     0,     0,     0,
       0,     0,     0,     0,     0,     1,     0,     2,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    32,     0,     4,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,     0,     0,
       5,     6,     0,     0,     0,     0,     0,     0,     7,     0,
       0,     0,     8,     9,     0,     0,     0,    34,     0,     0,
      35,     0,    36,     0,     0,    37,     0,     0,    10,     0,
       0,     0,     0,     0,     0,    38,    39,     0,     0,     0,
       0,     0,     0,     0,     0,    40,    11,    41,     0,     0,
       0,     0,     0,     0,     0,    42,     0,     0,     0,     0,
       0,    43,     0,     0,     0,  1348,  1266,     0,    12,    44,
       0,     0,     0,     0,    45,     0,    46,    13,    14,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,     0,     0,     0,     0,  3168,  3169,
       0,     0,     0,     0,  3170,     0,  3171,    47,  3172,  3173,
       0,     0,     0,     0,     0,    48,     0,    19,     0,     0,
       0,     0,     0,     0,     0,  3174,   806,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,   806,     0,     0,  1267,     0,     0,
       0,     0,    21,     0,    22,     0,     0,     0,    49,    23,
       0,     0,    24,     0,     0,     0,     0,     0,     0,     0,
      50,     0,     0,  3175,    51,     0,  3176,    52,  1268,     0,
       0,     0,    53,     0,  3177,    25,     0,    26,     0,     0,
       0,     0,  1269,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3178,     0,    27,     0,     0,     0,     0,
      54,     0,     0,     0,     0,  1270,     0,     0,  1271,     0,
    3179,     0,    28,     0,     0,    55,    29,     0,     0,     0,
       0,  1272,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3180,     0,  3181,
       0,     0,     0,     0,     0,  1273,     0,     0,  1513,  1514,
       0,     0,     0,  3182,  3183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1274,     0,     0,     0,     0,     0,  1275,     0,     0,     0,
       0,  -819,  -819,  1516,     0,     0,     0,     0,     0,     0,
       0,  -819,     0,     0,  3184,     0,     0,  1519,     0,     0,
       0,     0,     0,     0,     0,  1520,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,  1276,     0,     0,
       0,     0,     0,     0,  3185,     0,     0,     0,     0,  1522,
       0,    31,     0,  3186,  3187,     0,  3188,     0,     0,     0,
       0,     0,     0,  1490,     0,    32,     0,  1523,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3189,  3190,  3191,  1528,     0,    34,     0,
       0,    35,     0,    36,     0,     0,    37,     0,     0,     0,
       0,     0,  3192,  3193,  3194,     0,    38,    39,     0,  3195,
       0,     0,  3196,     0,     0,     0,    40,     0,    41,   806,
       0,     0,     0,     0,     0,     0,    42,     0,     0,     0,
    3197,  3198,    43,     0,     0,     0,     0,     0,     0,     0,
      44,     0,     0,     0,     0,    45,     0,    46,     0,     0,
       0,   844,   906,     0,     0,     0,     0,     0,     0,     0,
    1532,     0,  1277,  3199,  3200,     0,  1349,  1533,     0,     0,
       0,     0,     0,     0,     0,     0,   907,   891,    47,     0,
       0,     0,  1279,     0,  1534,     0,    48,   908,     0,  3201,
    1280,     0,     0,     0,     0,     0,     0,     0,  1281,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     909,     0,   910,     0,     0,     0,     0,   806,   806,   806,
       0,     0,   911,     0,     0,     0,     0,     0,     0,    49,
       0,     0,   806,  1282,     0,     0,     0,     0,     0,     0,
       0,    50,     0,     0,  1536,    51,  1283,  1284,    52,     0,
    3202,     0,     0,    53,  3203,     0,     0,     0,   806,     0,
       0,     0,  1537,     0,   806,     0,  3204,   806,     0,   806,
   -1836,   912,     0,     0,     0,   806,   913,   806,   806,   914,
       0,    54,   806,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    55,     0,  1285,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     915,     0,   916,     0,     0,     0,     0,  1541,     0,   917,
       0,   918,     0,     0,     0,  1543,  3205,  1286,     0,  3206,
       0,     0,  3207,  3208,  3209,  3210,     0,     0,     0,     0,
       0,     0,     0,     0,   919,   920,     0,     0,     0,  1287,
       0,  1288,   806,     0,     0,     0,     0,     0,     0,  2753,
       0,     0,   806,     0,  1510,     0,  1511,     0,   921,     0,
       0,     0,     0,     0,  3211,  3212,     0,     0,  1513,  1514,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   922,
       0,   836,   806,     0,     0,     0,     0,     0,     0,  3213,
       0,     0,     0,  1549,     0,     0,     0,     0,     0,  1515,
       0,     0,     0,  1516,     0,     0,     0,     0,     0,     0,
       0,   806,   923,     0,     0,     0,     0,  1519,     0,     0,
       0,     0,     0,     0,     0,  1520,     0,     0,     0,     0,
       0,     0,     0,     0,  1521,     0,   806,     0,     0,     0,
       0,     0,     0,     0,   806,     0,     0,     0,     0,  1522,
    1550,  1551,  1552,     0,     0,     0,     0,     0,  1553,     0,
       0,     0,     0,  1490,     0,     0,     0,  1523,  1513,  1514,
       0,     0,     0,     0,  1554,  1524,     0,  1555,     0,   924,
       0,     0,  2754,     0,     0,     0,     0,     0,     0,     0,
    1527,     0,     0,     0,     0,     0,  1528,     0,     0,     0,
       0,     0,     0,  1516,   925,     0,  1077,     0,     0,     0,
       0,     0,     0,  1557,     0,   926,   927,  1519,     0,   928,
     929,     0,     0,     0,     0,  1520,     0,     0,     0,  1530,
       0,     0,     0,     0,     0,     0,     0,  1109,     0,     0,
     930,     0,     0,     0,     0,     0,     0,  1589,     0,  1522,
       0,     0,     0,  1126,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1490,     0,     0,     0,  1523,     0,     0,
    1532,     0,     0,     0,     0,     0,     0,  1533,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   931,  1534,     0,  1528,     0,     0,     0,
    1171,     0,     0,     0,     0,     0,   932,  1590,  1591,  1592,
    1593,  1594,  1595,  1596,  1597,  1598,  1599,  1535,  1600,  1601,
    1602,  1603,  1604,  1605,  1606,  1607,  1608,     0,  1609,  1610,
       0,     0,     0,     0,     0,     0,     0,     0, -2420,     0,
       0,     0,     0,   933,     0,     0,     0,   806,     0,     0,
       0,     0,     0,     0,  1536,     0,     0,     0,     0,     0,
       0,   934,     0,     0,     0,     0,     0,     0,     0,     0,
    1532,     0,  1537,     0,     0,     0,  1538,  1533,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1534,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1372,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2420,     0,
    1540,     0,     0,     0,   935,     0,     0,  1541,     0,     0,
     806,     0,     0,     0,   806,  1543,     0,     0,     0,   806,
     806,     0,     0,     0,     0,     0,     0,     0,   806,     0,
       0,   806,     0,     0,  1536,     0,  1611,  1612,     0,     0,
       0,   806,   806,     0,   806,   806,     0,   806,   806,   806,
     806,   806,  1537,     0,   806,     0,     0,     0,     0,     0,
       0,     0,  1546,   806,     0,     0,     0,     0,     0,     0,
     806,     0,   806,     0,   806,   806,     0,   806,   806,     0,
       0,     0,   806,   806,   806,     0,     0,     0,   806,   806,
     806,     0,   806,  1549,   806,     0,   806,     0,   806,     0,
     806,     0,     0,     0,     0,   806,     0,  1541,     0,     0,
       0,     0,     0,     0,  1588,  1543,     0,     0,     0,     0,
       0,     0,   806,     0,     0,     0,     0,     0,     0,   806,
       0,     0,   806,     0,     0,     0,     0,     0,   806,     0,
       0,     0,     0,     0,     0,   806,     0,     0,     0,     0,
    1550,  1551,  1552,     0,     0,     0,     0,     0,  1553,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1668,  1669,     0,  1554,     0,     0,  1555,     0,     0,
    1679,  1680,     0,     0,  1683,  1684,  1685,     0,     0,     0,
       0,     0,     0,  1549,  1693,  1694,     0,  1695,  1696,     0,
       0,     0,  1721,     0,     0,     0,  1730,  1731,  1732,  1733,
       0,  1735,     0,  1557,     0,     0,     0,     0,     0,  1743,
    1744,     0,  1747,  1748,     0,     0,     0,     0,     0,  1752,
    1753,  1754,     0,     0,  1757,  1758,  1759,  1760,  1761,  1762,
       0,  1764,     0,     0,  1767,  1768,     0,     0,     0,  1771,
    1550,  1551,  1552,  1774,  1778,  1779,     0,     0,  1553,     0,
       0,     0,     0,     0,     0,     0,  1786,  1787,  1788,     0,
       0,     0,   806,     0,  1554,  1796,     0,  1555,     0,     0,
       0,     0,  1801,  1802,  1803,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     806,     0,     0,     0,   806,     0,     0,     0,     0,     0,
       0,     0,     0,  1557,     0,  1839,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3122,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3122,  3122,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1988,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2016,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3122,  3122,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   806,     0,     0,     0,   806,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   806,   806,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   806,     0,     0,     0,
       0,     0,     0,     0,     0,   806,     0,   806,     0,   806,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   806,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   806,
       0,     0,     0,     0,   806,     0,     0,     0,     0,     0,
     806,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   806,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2306,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   806,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   806,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2381,  2383,  2385,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2418,     0,     0,
       0,     0,     0,     0,     0,     0,  2423,     0,  2424,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   806,   806,
       0,  2429,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3122,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   806,     0,     0,     0,     0,     0,     0,     0,
       0,  2501,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   806,     0,     0,
       0,   806,   806,     0,   806,     0,     0,     0,     0,     0,
       0,  2537,     0,   806,     0,     0,     0,     0,   806,     0,
       0,   806,     0,   806,   806,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1372,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     806,     0,     0,     0,     0,  2585,     0,     0,     0,     0,
       0,     0,     0,  2595,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   806,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   806,     0,     0,     0,   806,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   806,   806,   806,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2782,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2880,
       0,     0,     0,  2882,     0,     0,     0,     0,  2884,  2885,
       0,     0,     0,     0,     0,     0,     0,  2898,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2905,  2906,     0,  2907,     0,     0,  2909,  2910,  2911,  2912,
    2913,     0,     0,     0,     0,     0,     0,     0,     0,   806,
       0,     0,  2917,     0,     0,     0,     0,     0,     0,  2918,
       0,  2919,     0,  2920,  2921,     0,  2922,     0,     0,     0,
       0,  2925,  2926,  2927,     0,   806,   806,  2929,  2930,  2931,
       0,  2932,     0,  2934,     0,  2936,     0,  2938,     0,  2939,
       0,     0,     0,   806,  2940,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2963,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2973,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   806,     0,     0,
       0,   806,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   806,     0,     0,   806,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3071,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   806,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2595,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4140,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   806,     0,   806,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   806,     0,     0,     0,     0,     0,  4140,
    4140,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   806,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   806,     0,   806,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   806,     0,  4140,  4140,     0,
    3297,     0,     0,     0,  3299,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4140,
       0,     0,     0,     0,  3321,  3322,     0,  4391,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3344,     0,     0,     0,     0,
       0,     0,     0,     0,  3354,     0,  3356,     0,  3358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1372,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   806,     0,  4140,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2429,
       0,     0,     0,     0,  4140,   806,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4140,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   806,  4140,     0,  2537,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4140,  4140,
       0,     0,     0,     0,     0,     0,     0,   806,     0,     0,
       0,     0,     0,   806,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2595,     0,     0,
       0,     0,     0,     0,     0,  4140,     0,     0,     0,     0,
       0,     0,   806,     0,     0,  4140,     0,     0,     0,     0,
    4140,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   806,     0,     0,     0,
       0,     0,  3510,  4140,     0,  4140,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   806,     0,
       0,     0,     0,     0,     0,  4140,     0,  4140,     0,  4140,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4140,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4140,  4140,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4140,  4140,     0,     0,     0,  4140,     0,     0,     0,     0,
       0,   806,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3602,  3603,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   806,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3662,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3673,     0,     0,     0,
    3677,  3678,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3685,     0,     0,     0,     0,  3687,     0,     0,
    3688,     0,  3689,  3690,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3721,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1372,     0,     0,     0,  3721,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1372,  2537,  3771,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3721,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3957,  3958,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3721,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2537,     0,     0,     0,
    4032,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3721,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2537,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4219,     0,  4221,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4250,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2537,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4347,     0,  4348,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4356,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4439,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4444,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4482,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3721,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4522,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4541,     0,     0,     0,     0,
       0,   136,     0,   677,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   678,     0,   145,
     146,   147,   148,   679,   150,     0,   151,     0,     0,   680,
     152,   681,   682,   683,   153,   684,     0,   154,   155,   156,
    1775,   157,     0,   158,   159,     0,     0,   160,   685,   686,
     161,   162,     0,   163,   687,   688,   165,     0,   166,   167,
     168,   169,   689,   171,     0,   690,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
    4607,   185,   186,   187,   691,   189,     0,   692,   693,   190,
       0,     0,   191,   694,   192,   695,     0,   193,   696,   697,
       0,   194,   195,   196,   698,   699,   700,     0,  3721,     0,
       0,   701,   199,   702,     0,     0,   703,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   704,     0,   227,   228,   229,   230,   231,   705,
     706,   232,   233,     0,   234,   235,   236,   237,   707,     0,
     238,   239,     0,     0,     0,   708,   241,     0,   242,     0,
     243,     0,   244,   709,   246,   710,     0,   248,     0,   249,
       0,   711,     0,   250,   251,     0,   252,   712,     0,   253,
     254,     0,     0,     0,   713,   256,   257,   258,   714,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,   715,
     263,   264,   716,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,  1776,   273,     0,   717,   274,   275,     0,
       0,     0,     0,     0,   718,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,   719,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,   720,   303,   304,   305,   306,   307,   721,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     722,   315,     0,     0,   723,   317,   724,   318,     0,   319,
     725,   726,   727,   728,   729,   324,   325,   326,   327,   328,
       0,   730,   329,   330,     0,     0,   331,   332,   333,   334,
     335,   731,   732,   733,   336,   337,     0,   734,   735,   338,
       0,   339,   340,   736,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,   737,   349,   350,     0,   351,   352,   738,   354,
     355,   356,   357,   739,   740,   360,   741,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   742,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,   743,
     744,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   745,
       0,   746,   405,   406,   407,   408,   409,   747,   748,   412,
     413,   414,   415,     0,   749,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,   750,   751,
     447,   448,     0,   449,   450,   752,   452,   453,   454,   753,
     754,   455,   456,   457,   458,   755,   459,   460,     0,     0,
     461,   462,   463,   464,     0,   756,   465,   466,     0,   757,
     758,   759,   760,     0,     0,     0,     0,  1777,   471,   472,
       0,   761,   762,   763,   474,   475,   476,   764,   477,   478,
     765,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   766,   487,     0,     0,   767,
     768,   769,   770,   488,     0,     0,   489,   771,     0,   772,
     490,   491,   492,   773,   774,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   775,
       0,     0,     0,   776,   777,     0,     0,     0,     0,   778,
     779,     0,     0,   780,   781,     0,     0,   782,   783,   136,
       0,   677,   138,   139,   140,   141,  2591,     0,   142,     0,
       0,     0,   143,     0,     0,   678,     0,   145,   146,   147,
     148,   679,   150,     0,   151,     0,     0,  2592,   152,   681,
     682,   683,   153,   684,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,   685,   686,   161,   162,
       0,   163,   687,   688,   165,     0,   166,   167,   168,   169,
     689,   171,     0,   690,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   691,   189,     0,   692,   693,   190,     0,     0,
     191,   694,   192,   695,     0,   193,   696,   697,     0,   194,
     195,   196,   698,   699,   700,     0,     0,     0,     0,   701,
     199,   702,     0,     0,  2593,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
     704,     0,   227,   228,   229,   230,   231,   705,   706,   232,
     233,     0,   234,   235,   236,   237,   707,     0,   238,   239,
       0,     0,     0,   708,   241,     0,   242,     0,   243,     0,
     244,   709,   246,   710,     0,   248,     0,   249,     0,   711,
       0,   250,   251,     0,   252,   712,     0,   253,   254,     0,
       0,     0,   713,   256,   257,   258,   714,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,   715,   263,   264,
     716,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,   717,   274,   275,     0,     0,     0,
       0,     0,   718,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,   719,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,   720,   303,   304,   305,   306,   307,   721,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   722,   315,
       0,     0,   723,   317,   724,   318,     0,   319,   725,   726,
     727,   728,   729,   324,   325,   326,   327,   328,     0,   730,
     329,   330,     0,     0,   331,   332,   333,   334,   335,   731,
     732,   733,   336,   337,     0,   734,   735,   338,     0,   339,
     340,   736,  2594,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
     737,   349,   350,     0,   351,   352,   738,   354,   355,   356,
     357,   739,   740,   360,   741,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   742,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   743,   744,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   745,     0,   746,
     405,   406,   407,   408,   409,   747,   748,   412,   413,   414,
     415,     0,   749,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,   750,   751,   447,   448,
       0,   449,   450,   752,   452,   453,   454,   753,   754,   455,
     456,   457,   458,   755,   459,   460,     0,     0,   461,   462,
     463,   464,     0,   756,   465,   466,     0,   757,   758,   759,
     760,     0,     0,     0,     0,     0,   471,   472,     0,   761,
     762,   763,   474,   475,   476,   764,   477,   478,   765,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   766,   487,     0,     0,   767,   768,   769,
     770,   488,     0,     0,   489,   771,     0,   772,   490,   491,
     492,   773,   774,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   775,     0,     0,
       0,   776,   777,     0,     0,     0,     0,   778,   779,     0,
       0,   780,   781,     0,     0,   782,   783,   136,     0,   677,
     138,   139,   140,   141,     0,     0,   142,     0,     0,     0,
     143,     0,     0,   678,     0,   145,   146,   147,   148,   679,
     150,     0,   151,     0,     0,   680,   152,   681,   682,   683,
     153,   684,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,   685,   686,   161,   162,     0,   163,
     687,   688,   165,     0,   166,   167,   168,   169,   689,   171,
       0,   690,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
     691,   189,     0,   692,   693,   190,     0,     0,   191,   694,
     192,   695,     0,   193,   696,   697,     0,   194,   195,   196,
     698,   699,   700,     0,     0,     0,     0,   701,   199,   702,
       0,     0,   703,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,   704,     0,
     227,   228,   229,   230,   231,   705,   706,   232,   233,     0,
     234,   235,   236,   237,   707,     0,   238,   239,     0,     0,
       0,   708,   241,     0,   242,     0,   243,     0,   244,   709,
     246,   710,     0,   248,     0,   249,     0,   711,     0,   250,
     251,     0,   252,   712,     0,   253,   254,     0,     0,     0,
     713,   256,   257,   258,   714,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,   715,   263,   264,   716,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,   717,   274,   275,     0,     0,     0,     0,     0,
     718,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,   719,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,   720,
     303,   304,   305,   306,   307,   721,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   722,   315,     0,     0,
     723,   317,   724,   318,     0,   319,   725,   726,   727,   728,
     729,   324,   325,   326,   327,   328,     0,   730,   329,   330,
       0,     0,   331,   332,   333,   334,   335,   731,   732,   733,
     336,   337,     0,   734,   735,   338,     0,   339,   340,   736,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,   737,   349,
     350,     0,   351,   352,   738,   354,   355,   356,   357,   739,
     740,   360,   741,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   742,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,   743,   744,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   745,     0,   746,   405,   406,
     407,   408,   409,   747,   748,   412,   413,   414,   415,     0,
     749,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,   750,   751,   447,   448,     0,   449,
     450,   752,   452,   453,   454,   753,   754,   455,   456,   457,
     458,   755,   459,   460,     0,     0,   461,   462,   463,   464,
       0,   756,   465,   466,     0,   757,   758,   759,   760,     0,
       0,     0,     0,     0,   471,   472,     0,   761,   762,   763,
     474,   475,   476,   764,   477,   478,   765,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   766,   487,     0,     0,   767,   768,   769,   770,   488,
       0,     0,   489,   771,     0,   772,   490,   491,   492,   773,
     774,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   775,     0,     0,     0,   776,
     777,  1369,     0,     0,     0,   778,   779,     0,     0,   780,
     781,     0,     0,   782,   783,   136,     0,   677,   138,   139,
     140,   141,     0,     0,   142,     0,     0,     0,   143,     0,
       0,   678,     0,   145,   146,   147,   148,   679,   150,     0,
     151,     0,     0,   680,   152,   681,   682,   683,   153,   684,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,   685,   686,   161,   162,     0,   163,   687,   688,
     165,     0,   166,   167,   168,   169,   689,   171,     0,   690,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   691,   189,
       0,   692,   693,   190,     0,     0,   191,   694,   192,   695,
       0,   193,   696,   697,     0,   194,   195,   196,   698,   699,
     700,     0,     0,     0,     0,   701,   199,   702,     0,     0,
     703,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,   704,     0,   227,   228,
     229,   230,   231,   705,   706,   232,   233,     0,   234,   235,
     236,   237,   707,     0,   238,   239,     0,     0,     0,   708,
     241,  2380,   242,     0,   243,     0,   244,   709,   246,   710,
       0,   248,     0,   249,     0,   711,     0,   250,   251,     0,
     252,   712,     0,   253,   254,     0,     0,     0,   713,   256,
     257,   258,   714,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,   715,   263,   264,   716,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
     717,   274,   275,     0,     0,     0,     0,     0,   718,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,   719,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,   720,   303,   304,
     305,   306,   307,   721,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   722,   315,     0,     0,   723,   317,
     724,   318,     0,   319,   725,   726,   727,   728,   729,   324,
     325,   326,   327,   328,     0,   730,   329,   330,     0,     0,
     331,   332,   333,   334,   335,   731,   732,   733,   336,   337,
       0,   734,   735,   338,     0,   339,   340,   736,     0,   342,
     343,   344,     0,   345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   346,   347,   348,   737,   349,   350,     0,
     351,   352,   738,   354,   355,   356,   357,   739,   740,   360,
     741,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   742,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,   743,   744,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   745,     0,   746,   405,   406,   407,   408,
     409,   747,   748,   412,   413,   414,   415,     0,   749,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,   750,   751,   447,   448,     0,   449,   450,   752,
     452,   453,   454,   753,   754,   455,   456,   457,   458,   755,
     459,   460,     0,     0,   461,   462,   463,   464,     0,   756,
     465,   466,     0,   757,   758,   759,   760,     0,     0,     0,
       0,     0,   471,   472,     0,   761,   762,   763,   474,   475,
     476,   764,   477,   478,   765,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   766,
     487,     0,     0,   767,   768,   769,   770,   488,     0,     0,
     489,   771,     0,   772,   490,   491,   492,   773,   774,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   775,     0,     0,     0,   776,   777,     0,
       0,     0,     0,   778,   779,     0,     0,   780,   781,     0,
       0,   782,   783,   136,     0,   677,   138,   139,   140,   141,
       0,     0,   142,     0,     0,     0,   143,     0,     0,   678,
       0,   145,   146,   147,   148,   679,   150,     0,   151,     0,
       0,   680,   152,   681,   682,   683,   153,   684,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     685,   686,   161,   162,     0,   163,   687,   688,   165,     0,
     166,   167,   168,   169,   689,   171,     0,   690,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,   691,   189,     0,   692,
     693,   190,     0,     0,   191,   694,   192,   695,     0,   193,
     696,   697,     0,   194,   195,   196,   698,   699,   700,     0,
       0,     0,     0,   701,   199,   702,     0,     0,   703,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   704,     0,   227,   228,   229,   230,
     231,   705,   706,   232,   233,     0,   234,   235,   236,   237,
     707,     0,   238,   239,     0,     0,     0,   708,   241,  2382,
     242,     0,   243,     0,   244,   709,   246,   710,     0,   248,
       0,   249,     0,   711,     0,   250,   251,     0,   252,   712,
       0,   253,   254,     0,     0,     0,   713,   256,   257,   258,
     714,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,   715,   263,   264,   716,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,     0,     0,     0,   270,
       0,     0,   271,   272,     0,     0,   273,     0,   717,   274,
     275,     0,     0,     0,     0,     0,   718,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,   719,     0,     0,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,   720,   303,   304,   305,   306,
     307,   721,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   722,   315,     0,     0,   723,   317,   724,   318,
       0,   319,   725,   726,   727,   728,   729,   324,   325,   326,
     327,   328,     0,   730,   329,   330,     0,     0,   331,   332,
     333,   334,   335,   731,   732,   733,   336,   337,     0,   734,
     735,   338,     0,   339,   340,   736,     0,   342,   343,   344,
       0,   345,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   346,   347,   348,   737,   349,   350,     0,   351,   352,
     738,   354,   355,   356,   357,   739,   740,   360,   741,   361,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   742,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,   743,   744,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,   745,     0,   746,   405,   406,   407,   408,   409,   747,
     748,   412,   413,   414,   415,     0,   749,   417,     0,     0,
       0,   418,   419,   420,   421,     0,     0,     0,   422,     0,
       0,     0,   423,     0,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,   442,   443,   444,   445,   446,     0,
     750,   751,   447,   448,     0,   449,   450,   752,   452,   453,
     454,   753,   754,   455,   456,   457,   458,   755,   459,   460,
       0,     0,   461,   462,   463,   464,     0,   756,   465,   466,
       0,   757,   758,   759,   760,     0,     0,     0,     0,     0,
     471,   472,     0,   761,   762,   763,   474,   475,   476,   764,
     477,   478,   765,   479,   480,     0,   481,   482,     0,     0,
     483,     0,     0,   484,     0,   485,     0,   766,   487,     0,
       0,   767,   768,   769,   770,   488,     0,     0,   489,   771,
       0,   772,   490,   491,   492,   773,   774,     0,     0,     0,
       0,     0,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   775,     0,     0,     0,   776,   777,     0,     0,     0,
       0,   778,   779,     0,     0,   780,   781,     0,     0,   782,
     783,   136,     0,   677,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   678,     0,   145,
     146,   147,   148,   679,   150,     0,   151,     0,     0,   680,
     152,   681,   682,   683,   153,   684,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,   685,   686,
     161,   162,     0,   163,   687,   688,   165,     0,   166,   167,
     168,   169,   689,   171,     0,   690,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   691,   189,     0,   692,   693,   190,
       0,     0,   191,   694,   192,   695,     0,   193,   696,   697,
       0,   194,   195,   196,   698,   699,   700,     0,     0,     0,
       0,   701,   199,   702,     0,     0,   703,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   704,     0,   227,   228,   229,   230,   231,   705,
     706,   232,   233,     0,   234,   235,   236,   237,   707,     0,
     238,   239,     0,     0,     0,   708,   241,  2384,   242,     0,
     243,     0,   244,   709,   246,   710,     0,   248,     0,   249,
       0,   711,     0,   250,   251,     0,   252,   712,     0,   253,
     254,     0,     0,     0,   713,   256,   257,   258,   714,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,   715,
     263,   264,   716,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,   717,   274,   275,     0,
       0,     0,     0,     0,   718,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,   719,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,   720,   303,   304,   305,   306,   307,   721,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     722,   315,     0,     0,   723,   317,   724,   318,     0,   319,
     725,   726,   727,   728,   729,   324,   325,   326,   327,   328,
       0,   730,   329,   330,     0,     0,   331,   332,   333,   334,
     335,   731,   732,   733,   336,   337,     0,   734,   735,   338,
       0,   339,   340,   736,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,   737,   349,   350,     0,   351,   352,   738,   354,
     355,   356,   357,   739,   740,   360,   741,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   742,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,   743,
     744,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   745,
       0,   746,   405,   406,   407,   408,   409,   747,   748,   412,
     413,   414,   415,     0,   749,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,   750,   751,
     447,   448,     0,   449,   450,   752,   452,   453,   454,   753,
     754,   455,   456,   457,   458,   755,   459,   460,     0,     0,
     461,   462,   463,   464,     0,   756,   465,   466,     0,   757,
     758,   759,   760,     0,     0,     0,     0,     0,   471,   472,
       0,   761,   762,   763,   474,   475,   476,   764,   477,   478,
     765,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   766,   487,     0,     0,   767,
     768,   769,   770,   488,     0,     0,   489,   771,     0,   772,
     490,   491,   492,   773,   774,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   775,
       0,     0,     0,   776,   777,     0,     0,     0,     0,   778,
     779,     0,     0,   780,   781,     0,     0,   782,   783,   136,
       0,   677,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,   678,     0,   145,   146,   147,
     148,   679,   150,     0,   151,     0,     0,   680,   152,   681,
     682,   683,   153,   684,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,   685,   686,   161,   162,
       0,   163,   687,   688,   165,     0,   166,   167,   168,   169,
     689,   171,     0,   690,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   691,   189,     0,   692,   693,   190,     0,     0,
     191,   694,   192,   695,     0,   193,   696,   697,     0,   194,
     195,   196,   698,   699,   700,     0,     0,     0,     0,   701,
     199,   702,     0,     0,   703,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
     704,     0,   227,   228,   229,   230,   231,   705,   706,   232,
     233,     0,   234,   235,   236,   237,   707,     0,   238,   239,
       0,     0,     0,   708,   241,     0,   242,     0,   243,     0,
     244,   709,   246,   710,     0,   248,     0,   249,     0,   711,
       0,   250,   251,     0,   252,   712,     0,   253,   254,     0,
       0,     0,   713,   256,   257,   258,   714,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,   715,   263,   264,
     716,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,   717,   274,   275,     0,     0,     0,
       0,     0,   718,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,   719,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,   720,   303,   304,   305,   306,   307,   721,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   722,   315,
       0,     0,   723,   317,   724,   318,     0,   319,   725,   726,
     727,   728,   729,   324,   325,   326,   327,   328,     0,   730,
     329,   330,     0,     0,   331,   332,   333,   334,   335,   731,
     732,   733,   336,   337,     0,   734,   735,   338,     0,   339,
     340,   736,     0,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
     737,   349,   350,     0,   351,   352,   738,   354,   355,   356,
     357,   739,   740,   360,   741,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   742,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   743,   744,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   745,     0,   746,
     405,   406,   407,   408,   409,   747,   748,   412,   413,   414,
     415,     0,   749,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,   750,   751,   447,   448,
       0,   449,   450,   752,   452,   453,   454,   753,   754,   455,
     456,   457,   458,   755,   459,   460,     0,     0,   461,   462,
     463,   464,     0,   756,   465,   466,     0,   757,   758,   759,
     760,     0,     0,     0,     0,     0,   471,   472,     0,   761,
     762,   763,   474,   475,   476,   764,   477,   478,   765,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   766,   487,     0,     0,   767,   768,   769,
     770,   488,     0,     0,   489,   771,     0,   772,   490,   491,
     492,   773,   774,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   775,     0,     0,
       0,   776,   777,     0,     0,     0,     0,   778,   779,     0,
       0,   780,   781,     0,     0,   782,   783,   136,     0,   677,
     138,   139,   140,   141,     0,     0,   142,     0,     0,     0,
     143,     0,     0,   678,     0,   145,   146,   147,   148,   679,
     150,     0,   151,     0,     0,   680,   152,   681,   682,   683,
     153,   684,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,   685,   686,   161,   162,     0,   163,
     687,   688,   165,     0,   166,   167,   168,   169,   689,   171,
       0,   690,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
     691,   189,     0,   692,   693,   190,     0,     0,   191,   694,
     192,   695,     0,   193,   696,   697,     0,   194,   195,   196,
     698,   699,   700,     0,     0,     0,     0,   701,   199,   702,
       0,     0,   703,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,   704,     0,
     227,   228,   229,   230,   231,   705,   706,   232,   233,     0,
     234,   235,   236,   237,   707,     0,   238,   239,     0,     0,
       0,   708,   241,     0,   242,     0,   243,     0,   244,   709,
     246,   710,     0,   248,     0,   249,     0,   711,     0,   250,
     251,     0,   252,   712,     0,   253,   254,     0,     0,     0,
     713,   256,   257,   258,   714,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,   715,   263,   264,   716,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,   717,   274,   275,     0,     0,     0,     0,     0,
     718,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,   719,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,   720,
     303,   304,   305,   306,   307,   721,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   722,   315,     0,     0,
     723,   317,   724,   318,     0,   319,   725,   726,   727,   728,
     729,   324,   325,   326,   327,   328,     0,   730,   329,   330,
       0,     0,   331,   332,   333,   334,   335,   731,   732,   733,
     336,   337,     0,   734,   735,   338,     0,   339,   340,   736,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,   737,   349,
     350,     0,   351,   352,   738,   354,   355,   356,   357,   739,
     740,   360,   741,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   742,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,   743,   744,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   745,     0,   746,   405,   406,
     407,   408,   409,   747,   748,   412,   413,   414,   415,     0,
     749,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,   750,   751,   447,   448,     0,   449,
     450,   752,   452,   453,   454,   753,   754,   455,   456,   457,
     458,   755,   459,   460,     0,     0,   461,   462,   463,   464,
       0,   756,   465,   466,     0,   757,   758,   759,   760,     0,
       0,     0,     0,     0,   471,   472,     0,   761,   762,   763,
     474,   475,   476,   764,   477,   478,   765,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   766,   487,     0,     0,   767,   768,   769,   770,   488,
       0,     0,   489,   771,     0,   772,   490,   491,   492,   773,
     774,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   775,     0,     0,     0,   776,
     777,     0,     0,     0,     0,   778,  1108,     0,     0,   780,
     781,     0,     0,   782,   783,   136,     0,   677,   138,   139,
     140,   141,  1810,     0,   142,     0,     0,     0,  1811,     0,
       0,   678,     0,   145,   146,   147,   148,   679,   150,     0,
     151,     0,     0,   680,   152,   681,   682,   683,   153,   684,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,   685,   686,   161,   162,     0,   163,   687,   688,
     165,     0,   166,   167,   168,   169,   689,   171,     0,   690,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   691,   189,
       0,   692,   693,   190,     0,     0,   191,   694,   192,   695,
       0,   193,   696,   697,     0,   194,   195,   196,   698,   699,
     700,     0,     0,     0,     0,   701,   199,   702,     0,     0,
     703,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,   704,     0,   227,   228,
     229,   230,   231,   705,   706,   232,   233,     0,   234,   235,
     236,   237,   707,     0,   238,   239,     0,     0,     0,   708,
     241,     0,   242,     0,   243,     0,   244,   709,   246,   710,
       0,   248,     0,   249,     0,   711,     0,   250,   251,     0,
     252,   712,     0,   253,   254,     0,     0,     0,   713,   256,
     257,   258,   714,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,   715,   263,   264,   716,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
     717,   274,   275,     0,     0,     0,     0,     0,   718,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,   719,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,   720,   303,   304,
     305,   306,   307,   721,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   722,   315,     0,     0,   723,   317,
     724,   318,     0,   319,   725,   726,   727,   728,   729,   324,
     325,   326,   327,   328,     0,   730,   329,   330,     0,     0,
     331,   332,   333,   334,   335,   731,     0,   733,   336,   337,
       0,   734,   735,   338,     0,   339,   340,   736,     0,   342,
     343,   344,     0,   345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   346,   347,   348,   737,   349,   350,     0,
     351,   352,   738,   354,   355,   356,   357,   739,   740,   360,
     741,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   742,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,   743,   744,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   745,     0,   746,   405,   406,   407,   408,
     409,   747,   748,   412,   413,   414,   415,     0,   749,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,   750,   751,   447,   448,     0,   449,   450,   752,
     452,   453,   454,   753,   754,   455,   456,   457,   458,   755,
     459,   460,     0,     0,   461,   462,   463,   464,     0,   756,
     465,   466,     0,   757,   758,   759,   760,     0,     0,     0,
       0,     0,   471,   472,     0,   761,   762,   763,   474,   475,
     476,   764,   477,   478,   765,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   766,
     487,     0,     0,   767,   768,   769,   770,   488,     0,     0,
     489,   771,     0,   772,   490,   491,   492,   773,   774,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   775,     0,     0,     0,   776,   777,     0,
       0,     0,     0,   778,   779,     0,     0,   780,   781,     0,
       0,   782,   783,   136,     0,   677,   138,   139,   140,   141,
       0,     0,   142,     0,     0,     0,   143,     0,     0,   678,
       0,   145,   146,   147,   148,   679,   150,     0,   151,     0,
       0,   680,   152,   681,   682,   683,   153,   684,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     685,   686,   161,   162,     0,   163,   687,   688,   165,     0,
     166,   167,   168,   169,   689,   171,     0,   690,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,   691,   189,     0,   692,
     693,   190,     0,     0,   191,   694,   192,   695,     0,   193,
     696,   697,     0,   194,   195,   196,   698,   699,   700,     0,
       0,     0,     0,   701,   199,   702,     0,     0,   703,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   704,     0,   227,   228,   229,   230,
     231,   705,   706,   232,   233,     0,   234,   235,   236,   237,
     707,     0,   238,   239,     0,     0,     0,   708,   241,     0,
     242,     0,   243,     0,   244,   709,   246,   710,     0,   248,
       0,   249,     0,   711,     0,   250,   251,     0,   252,   712,
       0,   253,   254,     0,     0,     0,   713,   256,   257,   258,
     714,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,   715,   263,   264,  2879,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,     0,     0,     0,   270,
       0,     0,   271,   272,     0,     0,   273,     0,   717,   274,
     275,     0,     0,     0,     0,     0,   718,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,   719,     0,     0,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,   720,   303,   304,   305,   306,
     307,   721,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   722,   315,     0,     0,   723,   317,   724,   318,
       0,   319,   725,   726,   727,   728,   729,   324,   325,   326,
     327,   328,     0,   730,   329,   330,     0,     0,   331,   332,
     333,   334,   335,   731,   732,   733,   336,   337,     0,   734,
     735,   338,     0,   339,   340,   736,     0,   342,   343,   344,
       0,   345,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   346,   347,   348,   737,   349,   350,     0,   351,   352,
     738,   354,   355,   356,   357,   739,   740,   360,   741,   361,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   742,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,   743,   744,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,   745,     0,   746,   405,   406,   407,   408,   409,   747,
     748,   412,   413,   414,   415,     0,   749,   417,     0,     0,
       0,   418,   419,   420,   421,     0,     0,     0,   422,     0,
       0,     0,   423,     0,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,   442,   443,   444,   445,   446,     0,
     750,   751,   447,   448,     0,   449,   450,   752,   452,   453,
     454,   753,   754,   455,   456,   457,   458,   755,   459,   460,
       0,     0,   461,   462,   463,   464,     0,   756,   465,   466,
       0,   757,   758,   759,   760,     0,     0,     0,     0,     0,
     471,   472,     0,   761,   762,   763,   474,   475,   476,   764,
     477,   478,   765,   479,   480,     0,   481,   482,     0,     0,
     483,     0,     0,   484,     0,   485,     0,   766,   487,     0,
       0,   767,   768,   769,   770,   488,     0,     0,   489,   771,
       0,   772,   490,   491,   492,   773,   774,     0,     0,     0,
       0,     0,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   775,     0,     0,     0,   776,   777,     0,     0,     0,
       0,   778,   779,     0,     0,   780,   781,     0,     0,   782,
     783,   136,     0,   677,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   678,     0,   145,
     146,   147,   148,   679,   150,     0,   151,     0,     0,   680,
     152,   681,   682,   683,   153,   684,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,   685,   686,
     161,   162,     0,   163,   687,   688,   165,     0,   166,   167,
     168,   169,   689,   171,     0,   690,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   691,   189,     0,   692,   693,   190,
       0,     0,   191,   694,   192,   695,     0,   193,   696,   697,
       0,   194,   195,   196,   698,   699,   700,     0,     0,     0,
       0,   701,   199,   702,     0,     0,   703,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   704,     0,   227,   228,   229,   230,   231,   705,
     706,   232,   233,     0,   234,   235,   236,   237,   707,     0,
     238,   239,     0,     0,     0,   708,   241,     0,   242,     0,
     243,     0,   244,   709,   246,   710,     0,   248,     0,   249,
       0,   711,     0,   250,   251,     0,   252,   712,     0,   253,
     254,     0,     0,     0,   713,   256,   257,   258,   714,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,   715,
     263,   264,  2924,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,   717,   274,   275,     0,
       0,     0,     0,     0,   718,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,   719,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,   720,   303,   304,   305,   306,   307,   721,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     722,   315,     0,     0,   723,   317,   724,   318,     0,   319,
     725,   726,   727,   728,   729,   324,   325,   326,   327,   328,
       0,   730,   329,   330,     0,     0,   331,   332,   333,   334,
     335,   731,   732,   733,   336,   337,     0,   734,   735,   338,
       0,   339,   340,   736,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,   737,   349,   350,     0,   351,   352,   738,   354,
     355,   356,   357,   739,   740,   360,   741,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   742,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,   743,
     744,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   745,
       0,   746,   405,   406,   407,   408,   409,   747,   748,   412,
     413,   414,   415,     0,   749,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,   750,   751,
     447,   448,     0,   449,   450,   752,   452,   453,   454,   753,
     754,   455,   456,   457,   458,   755,   459,   460,     0,     0,
     461,   462,   463,   464,     0,   756,   465,   466,     0,   757,
     758,   759,   760,     0,     0,     0,     0,     0,   471,   472,
       0,   761,   762,   763,   474,   475,   476,   764,   477,   478,
     765,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   766,   487,     0,     0,   767,
     768,   769,   770,   488,     0,     0,   489,   771,     0,   772,
     490,   491,   492,   773,   774,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   775,
       0,     0,     0,   776,   777,     0,     0,     0,     0,   778,
     779,     0,     0,   780,   781,     0,     0,   782,   783,   136,
       0,   677,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,   678,     0,   145,   146,   147,
     148,   679,   150,     0,   151,     0,     0,   680,   152,   681,
     682,   683,   153,   684,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,   685,   686,   161,   162,
       0,   163,   687,   688,   165,     0,   166,   167,   168,   169,
     689,   171,     0,   690,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   691,   189,     0,   692,   693,   190,     0,     0,
     191,   694,   192,   695,     0,   193,   696,   697,     0,   194,
     195,   196,   698,   699,   700,     0,     0,     0,     0,   701,
     199,   702,     0,     0,  3720,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
     704,     0,   227,   228,   229,   230,   231,   705,   706,   232,
     233,     0,   234,   235,   236,   237,   707,     0,   238,   239,
       0,     0,     0,   708,   241,     0,   242,     0,   243,     0,
     244,   709,   246,   710,     0,   248,     0,   249,     0,   711,
       0,   250,   251,     0,   252,   712,     0,   253,   254,     0,
       0,     0,   713,   256,   257,   258,   714,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,   715,   263,   264,
     716,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,   717,   274,   275,     0,     0,     0,
       0,     0,   718,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,   719,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,   720,   303,   304,   305,   306,   307,   721,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   722,   315,
       0,     0,   723,   317,   724,   318,     0,   319,   725,   726,
     727,   728,   729,   324,   325,   326,   327,   328,     0,   730,
     329,   330,     0,     0,   331,   332,   333,   334,   335,   731,
     732,   733,   336,   337,     0,   734,   735,   338,     0,   339,
     340,   736,     0,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
     737,   349,   350,     0,   351,   352,   738,   354,   355,   356,
     357,   739,   740,   360,   741,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   742,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,   743,   744,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   745,     0,   746,
     405,   406,   407,   408,   409,   747,   748,   412,   413,   414,
     415,     0,   749,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,   750,   751,   447,   448,
       0,   449,   450,   752,   452,   453,   454,   753,   754,   455,
     456,   457,   458,   755,   459,   460,     0,     0,   461,   462,
     463,   464,     0,   756,   465,   466,     0,   757,   758,   759,
     760,     0,     0,     0,     0,     0,   471,   472,     0,   761,
     762,   763,   474,   475,   476,   764,   477,   478,   765,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   766,   487,     0,     0,   767,   768,   769,
     770,   488,     0,     0,   489,   771,     0,   772,   490,   491,
     492,   773,   774,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   775,     0,     0,
       0,   776,   777,     0,     0,     0,     0,   778,   779,     0,
       0,   780,   781,     0,     0,   782,   783,   136,     0,   677,
     138,   139,   140,   141,     0,     0,   142,     0,     0,     0,
     143,     0,     0,   678,     0,   145,   146,   147,   148,   679,
     150,     0,   151,     0,     0,   680,   152,   681,   682,   683,
     153,   684,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,   685,   686,   161,   162,     0,   163,
     687,   688,   165,     0,   166,   167,   168,   169,   689,   171,
       0,   690,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
     691,   189,     0,   692,   693,   190,     0,     0,   191,   694,
     192,   695,     0,   193,   696,   697,     0,   194,   195,   196,
     698,   699,   700,     0,     0,     0,     0,   701,   199,   702,
       0,     0,   703,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,   704,     0,
     227,   228,   229,   230,   231,   705,   706,   232,   233,     0,
     234,   235,   236,   237,   707,     0,   238,   239,     0,     0,
       0,   708,   241,     0,   242,     0,   243,     0,   244,   709,
     246,   710,     0,   248,     0,   249,     0,   711,     0,   250,
     251,     0,   252,   712,     0,   253,   254,     0,     0,     0,
     713,   256,   257,   258,   714,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,   715,   263,   264,   716,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,   717,   274,   275,     0,     0,     0,     0,     0,
     718,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,   719,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,   720,
     303,   304,   305,   306,   307,   721,   308,   309,  4504,     0,
       0,     0,   310,   311,   312,   313,   722,   315,     0,     0,
     723,   317,   724,   318,     0,   319,   725,   726,   727,   728,
     729,   324,   325,   326,   327,   328,     0,   730,   329,   330,
       0,     0,   331,   332,   333,   334,   335,   731,     0,   733,
     336,   337,     0,   734,   735,   338,     0,   339,   340,   736,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,   737,   349,
     350,     0,   351,   352,   738,   354,   355,   356,   357,   739,
     740,   360,   741,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   742,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,   743,   744,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   745,     0,   746,   405,   406,
     407,   408,   409,   747,   748,   412,   413,   414,   415,     0,
     749,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,   750,   751,   447,   448,     0,   449,
     450,   752,   452,   453,   454,   753,   754,   455,   456,   457,
     458,   755,   459,   460,     0,     0,   461,   462,   463,   464,
       0,   756,   465,   466,     0,   757,   758,   759,   760,     0,
       0,     0,     0,     0,   471,   472,     0,   761,   762,   763,
     474,   475,   476,   764,   477,   478,   765,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   766,   487,     0,     0,   767,   768,   769,   770,   488,
       0,     0,   489,   771,     0,   772,   490,   491,   492,   773,
     774,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   775,     0,     0,     0,   776,
     777,     0,     0,     0,     0,   778,   779,     0,     0,   780,
     781,     0,     0,   782,   783,   136,     0,   677,   138,   139,
     140,   141,     0,     0,   142,     0,     0,     0,   143,     0,
       0,   678,     0,   145,   146,   147,   148,   679,   150,     0,
     151,     0,     0,   680,   152,   681,   682,   683,   153,   684,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,   685,   686,   161,   162,     0,   163,   687,   688,
     165,     0,   166,   167,   168,   169,   689,   171,     0,   690,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   691,   189,
       0,   692,   693,   190,     0,     0,   191,   694,   192,   695,
       0,   193,   696,   697,     0,   194,   195,   196,   698,   699,
     700,     0,     0,     0,     0,   701,   199,   702,     0,     0,
     703,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,   704,     0,   227,   228,
     229,   230,   231,   705,   706,   232,   233,     0,   234,   235,
     236,   237,   707,     0,   238,   239,     0,     0,     0,   708,
     241,     0,   242,     0,   243,     0,   244,   709,   246,   710,
       0,   248,     0,   249,     0,   711,     0,   250,   251,     0,
     252,   712,     0,   253,   254,     0,     0,     0,   713,   256,
     257,   258,   714,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,   715,   263,   264,   716,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
     717,   274,   275,     0,     0,     0,     0,     0,   718,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,   719,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,   720,   303,   304,
     305,   306,   307,   721,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   722,   315,     0,     0,   723,   317,
     724,   318,     0,   319,   725,   726,   727,   728,   729,   324,
     325,   326,   327,   328,     0,   730,   329,   330,     0,     0,
     331,   332,   333,   334,   335,   731,     0,   733,   336,   337,
       0,   734,   735,   338,     0,   339,   340,   736,     0,   342,
     343,   344,     0,   345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   346,   347,   348,   737,   349,   350,     0,
     351,   352,   738,   354,   355,   356,   357,   739,   740,   360,
     741,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   742,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,   743,   744,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   745,     0,   746,   405,   406,   407,   408,
     409,   747,   748,   412,   413,   414,   415,     0,   749,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,   750,   751,   447,   448,     0,   449,   450,   752,
     452,   453,   454,   753,   754,   455,   456,   457,   458,   755,
     459,   460,     0,     0,   461,   462,   463,   464,     0,   756,
     465,   466,     0,   757,   758,   759,   760,     0,     0,     0,
       0,     0,   471,   472,     0,   761,   762,   763,   474,   475,
     476,   764,   477,   478,   765,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   766,
     487,     0,     0,   767,   768,   769,   770,   488,     0,     0,
     489,   771,     0,   772,   490,   491,   492,   773,   774,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   775,     0,     0,     0,   776,   777,     0,
       0,     0,     0,   778,   779,     0,     0,   780,   781,     0,
       0,   782,   783,   136,     0,   677,   138,   139,   140,   141,
       0,     0,   142,     0,     0,     0,   143,     0,     0,   678,
       0,   145,   146,   147,   148,   679,   150,     0,   151,     0,
       0,   680,   152,   681,   682,   683,   153,   684,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     685,   686,   161,   162,     0,   163,   687,   688,   165,     0,
     166,   167,   168,   169,   689,   171,     0,   690,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,   691,   189,     0,   692,
     693,   190,     0,     0,   191,   694,   192,   695,     0,   193,
     696,   697,     0,   194,   195,   196,   698,   699,   700,     0,
       0,     0,     0,   701,   199,   702,     0,     0,   703,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   704,     0,   227,   228,   229,   230,
     231,   705,   706,   232,   233,     0,   234,   235,   236,   237,
     707,     0,   238,   239,     0,     0,     0,   708,   241,     0,
     242,     0,   243,     0,   244,   709,   246,   710,     0,   248,
       0,   249,     0,   711,     0,   250,   251,     0,   252,   712,
       0,   253,   254,     0,     0,     0,   713,   256,   257,   258,
     714,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,   715,   263,   264,  1825,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,     0,     0,     0,   270,
       0,     0,   271,   272,     0,     0,   273,     0,   717,   274,
     275,     0,     0,     0,     0,     0,   718,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,   719,     0,     0,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,   720,   303,   304,   305,   306,
     307,   721,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   722,   315,     0,     0,   723,   317,   724,   318,
       0,   319,   725,   726,   727,   728,   729,   324,   325,   326,
     327,   328,     0,   730,   329,   330,     0,     0,   331,   332,
     333,   334,   335,   731,     0,   733,   336,   337,     0,   734,
     735,   338,     0,   339,   340,   736,     0,   342,   343,   344,
       0,   345,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   346,   347,   348,   737,   349,   350,     0,   351,   352,
     738,   354,   355,   356,   357,   739,   740,   360,   741,   361,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   742,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,   743,   744,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,   745,     0,   746,   405,   406,   407,   408,   409,   747,
     748,   412,   413,   414,   415,     0,   749,   417,     0,     0,
       0,   418,   419,   420,   421,     0,     0,     0,   422,     0,
       0,     0,   423,     0,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,   442,   443,   444,   445,   446,     0,
     750,   751,   447,   448,     0,   449,   450,   752,   452,   453,
     454,   753,   754,   455,   456,   457,   458,   755,   459,   460,
       0,     0,   461,   462,   463,   464,     0,   756,   465,   466,
       0,   757,   758,   759,   760,     0,     0,     0,     0,     0,
     471,   472,     0,   761,   762,   763,   474,   475,   476,   764,
     477,   478,   765,   479,   480,     0,   481,   482,     0,     0,
     483,     0,     0,   484,     0,   485,     0,   766,   487,     0,
       0,   767,   768,   769,   770,   488,     0,     0,   489,   771,
       0,   772,   490,   491,   492,   773,   774,     0,     0,     0,
       0,     0,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   775,     0,     0,     0,   776,   777,     0,     0,     0,
       0,   778,   779,     0,     0,   780,   781,     0,     0,   782,
     783,   136,     0,   677,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   678,     0,   145,
     146,   147,   148,   679,   150,     0,   151,     0,     0,   680,
     152,   681,   682,   683,   153,   684,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,   685,   686,
     161,   162,     0,   163,   687,   688,   165,     0,   166,   167,
     168,   169,   689,   171,     0,   690,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   691,   189,     0,   692,   693,   190,
       0,     0,   191,   694,   192,   695,     0,   193,   696,   697,
       0,   194,   195,   196,   698,   699,   700,     0,     0,     0,
       0,   701,   199,   702,     0,     0,   703,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   704,     0,   227,   228,   229,   230,   231,   705,
     706,   232,   233,     0,   234,   235,   236,   237,   707,     0,
     238,   239,     0,     0,     0,   708,   241,     0,   242,     0,
     243,     0,   244,   709,   246,   710,     0,   248,     0,   249,
       0,   711,     0,   250,   251,     0,   252,   712,     0,   253,
     254,     0,     0,     0,   713,   256,   257,   258,   714,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,   715,
     263,   264,  1827,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,   717,   274,   275,     0,
       0,     0,     0,     0,   718,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,   719,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,   720,   303,   304,   305,   306,   307,   721,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     722,   315,     0,     0,   723,   317,   724,   318,     0,   319,
     725,   726,   727,   728,   729,   324,   325,   326,   327,   328,
       0,   730,   329,   330,     0,     0,   331,   332,   333,   334,
     335,   731,     0,   733,   336,   337,     0,   734,   735,   338,
       0,   339,   340,   736,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,   737,   349,   350,     0,   351,   352,   738,   354,
     355,   356,   357,   739,   740,   360,   741,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   742,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,   743,
     744,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   745,
       0,   746,   405,   406,   407,   408,   409,   747,   748,   412,
     413,   414,   415,     0,   749,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,   750,   751,
     447,   448,     0,   449,   450,   752,   452,   453,   454,   753,
     754,   455,   456,   457,   458,   755,   459,   460,     0,     0,
     461,   462,   463,   464,     0,   756,   465,   466,     0,   757,
     758,   759,   760,     0,     0,     0,     0,     0,   471,   472,
       0,   761,   762,   763,   474,   475,   476,   764,   477,   478,
     765,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   766,   487,     0,     0,   767,
     768,   769,   770,   488,     0,     0,   489,   771,     0,   772,
     490,   491,   492,   773,   774,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   775,
       0,     0,     0,   776,   777,     0,     0,     0,     0,   778,
     779,     0,     0,   780,   781,     0,     0,   782,   783,   136,
       0,   137,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,   681,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   188,   189,     0,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,  1863,     0,     0,     0,     0,   198,
     199,   702,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,   230,   231,     0,   706,   232,
     233,     0,   234,   235,   236,   237,   707,     0,   238,   239,
       0,     0,     0,   240,   241,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
       0,   250,   251,     0,   252,   712,     0,   253,   254,     0,
       0,     0,   255,   256,   257,   258,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,     0,   274,   275,     0,     0,     0,
       0,     0,   276,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,   719,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   314,   315,
       0,     0,   316,   317,     0,   318,     0,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,   730,
     329,   330,     0,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   336,   337,     0,   734,   735,   338,     0,   339,
     340,   341,     0,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
       0,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
     456,   457,   458,     0,   459,   460,     0,     0,   461,   462,
     463,   464,     0,   756,   465,   466,     0,  1864,   468,   469,
    1865,     0,     0,     0,     0,     0,   471,   472,     0,     0,
     762,   473,   474,   475,   476,   764,   477,   478,   765,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   486,   487,     0,     0,     0,     0,     0,
       0,   488,     0,     0,   489,     0,     0,     0,   490,   491,
     492,   493,   494,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,     0,     0,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,   782,   783,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
    2115,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,   515,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,  2116,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,  2117,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,     0,
    3281,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,  1542,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,  -508,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   518,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   144,  2192,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
    2115,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,   515,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,  2116,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,  2117,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,     0,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,   518,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   144,  2192,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,     0,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,  2513,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
     142,  3027,     0,     0,   143,     0,     0,   144,   783,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,     0,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
       0,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,  4611,   142,     0,     0,     0,   143,  4612,   783,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,   188,   189,     0,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,   230,
     231,     0,     0,   232,   233,     0,   234,   235,   236,   237,
       0,     0,   238,   239,     0,     0,     0,   240,   241,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
       0,   249,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,   257,   258,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,     0,     0,     0,   270,
       0,     0,   271,   272,     0,     0,   273,     0,     0,   274,
     275,     0,     0,     0,     0,     0,   276,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,     0,     0,     0,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   314,   315,     0,     0,   316,   317,     0,   318,
       0,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   336,   337,     0,     0,
       0,   338,     0,   339,   340,   341,     0,   342,   343,   344,
       0,   345,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   346,   347,   348,     0,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,   404,     0,     0,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
       0,   418,   419,   420,   421,     0,     0,     0,   422,     0,
       0,     0,   423,     0,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,   456,   457,   458,     0,   459,   460,
       0,     0,   461,   462,   463,   464,     0,     0,   465,   466,
       0,   467,   468,   469,   470,     0,     0,     0,     0,     0,
     471,   472,     0,     0,     0,   473,   474,   475,   476,     0,
     477,   478,     0,   479,   480,     0,   481,   482,     0,     0,
     483,     0,     0,   484,     0,   485,     0,   486,   487,     0,
       0,     0,     0,     0,     0,   488,     0,     0,   489,     0,
       0,     0,   490,   491,   492,   493,   494,     0,     0,     0,
       0,     0,     0,   495,   496,     0,   497,   498,   499,     0,
       0,   500,     0,     0,     0,   136,     0,   137,   138,   139,
     140,   141,  1112,     0,   142,     0,     0,     0,   143,     0,
     783,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   188,   189,
       0,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,   230,   231,     0,     0,   232,   233,     0,   234,   235,
     236,   237,     0,     0,   238,   239,     0,     0,     0,   240,
     241,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
     257,   258,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,  1325,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
       0,   274,   275,     0,     0,     0,     0,     0,   276,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,     0,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   314,   315,     0,     0,   316,   317,
       0,   318,     0,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   336,   337,
       0,     0,     0,   338,     0,   339,   340,   341,     0,   342,
     343,   344,     0,   345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   346,   347,   348,     0,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,   456,   457,   458,     0,
     459,   460,     0,     0,   461,   462,   463,   464,     0,     0,
     465,   466,     0,   467,   468,   469,   470,     0,     0,     0,
       0,     0,   471,   472,     0,     0,     0,   473,   474,   475,
     476,     0,   477,   478,     0,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   486,
     487,     0,     0,     0,     0,     0,     0,   488,     0,     0,
     489,     0,     0,     0,   490,   491,   492,   493,   494,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,     0,   136,     0,   137,   138,   139,
     140,   141,     0,     0,   142,     0,     0,     0,   143,     0,
       0,   144,   551,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   188,   189,
       0,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,   230,   231,     0,     0,   232,   233,     0,   234,   235,
     236,   237,     0,     0,   238,   239,     0,     0,     0,   240,
     241,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
     257,   258,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
       0,   274,   275,     0,     0,     0,     0,     0,   276,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,     0,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   314,   315,     0,     0,   316,   317,
       0,   318,     0,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   336,   337,
       0,     0,     0,   338,     0,   339,   340,   341,     0,   342,
     343,   344,     0,   345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   346,   347,   348,     0,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,   456,   457,   458,     0,
     459,   460,     0,     0,   461,   462,   463,   464,     0,     0,
     465,   466,     0,   467,   468,   469,   470,     0,     0,     0,
       0,     0,   471,   472,     0,     0,     0,   473,   474,   475,
     476,     0,   477,   478,     0,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   486,
     487,     0,     0,     0,     0,     0,     0,   488,     0,     0,
     489,     0,     0,     0,   490,   491,   492,   493,   494,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,     0,     0,   500,     0,     0,     0,   136,     0,   137,
     138,   139,   140,   141,  2191,     0,   142,     0,     0,     0,
     143,     0,  2192,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
     188,   189,     0,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,   230,   231,     0,     0,   232,   233,     0,
     234,   235,   236,   237,     0,     0,   238,   239,     0,     0,
       0,   240,   241,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,   257,   258,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,     0,   274,   275,     0,     0,     0,     0,     0,
     276,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,     0,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,   307,     0,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   314,   315,     0,     0,
     316,   317,     0,   318,     0,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     336,   337,     0,     0,     0,   338,     0,   339,   340,   341,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,     0,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,   456,   457,
     458,     0,   459,   460,     0,     0,   461,   462,   463,   464,
       0,     0,   465,   466,     0,   467,   468,   469,   470,     0,
       0,     0,     0,     0,   471,   472,     0,     0,     0,   473,
     474,   475,   476,     0,   477,   478,     0,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   486,   487,     0,     0,     0,     0,     0,     0,   488,
       0,     0,   489,     0,     0,     0,   490,   491,   492,   493,
     494,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,     0,     0,     0,     0,
     136,  2993,   137,   138,   139,   140,   141,     0,     0,   142,
       0,     0,     0,   143,   551,     0,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,     0,   183,   184,     0,
     185,   186,   187,   188,   189,     0,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,   230,   231,     0,     0,
     232,   233,     0,   234,   235,   236,   237,     0,     0,   238,
     239,     0,     0,     0,   240,   241,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,   257,   258,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,   265,     0,     0,     0,   266,   267,
       0,   268,   269,     0,     0,     0,   270,     0,     0,   271,
     272,     0,     0,   273,     0,     0,   274,   275,     0,     0,
       0,     0,     0,   276,   277,     0,   278,     0,   279,     0,
     280,   281,     0,     0,     0,     0,     0,     0,     0,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,     0,     0,   310,   311,   312,   313,   314,
     315,     0,     0,   316,   317,     0,   318,     0,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   336,   337,     0,     0,     0,   338,     0,
     339,   340,   341,     0,   342,   343,   344,     0,   345,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   346,   347,
     348,     0,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,     0,   418,   419,
     420,   421,     0,     0,     0,   422,     0,     0,     0,   423,
       0,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,     0,     0,     0,     0,     0,   433,   434,   435,     0,
     436,   437,     0,   438,     0,     0,   439,     0,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,   456,   457,   458,     0,   459,   460,     0,     0,   461,
     462,   463,   464,     0,     0,   465,   466,     0,   467,   468,
     469,   470,     0,     0,     0,     0,     0,   471,   472,     0,
       0,     0,   473,   474,   475,   476,     0,   477,   478,     0,
     479,   480,     0,   481,   482,     0,     0,   483,     0,     0,
     484,     0,   485,     0,   486,   487,     0,     0,     0,     0,
       0,     0,   488,     0,     0,   489,     0,     0,     0,   490,
     491,   492,   493,   494,     0,     0,     0,     0,     0,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,     0,
       0,     0,   136,     0,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,  4612,   783,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,     0,   136,     0,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,   144,   551,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   615,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   616,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   617,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,     0,   136,     0,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,   144,   551,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,     0,   136,     0,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,   144,   783,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,     0,   136,     0,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,   144,  2192,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   890,   891,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,   892,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   893,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   894,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   895,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   896,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   897,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   898,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   136,     0,   137,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   144,   899,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,   628,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,   133,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     136,     0,   137,   138,   139,   140,   141,     0,     0,   142,
       0,     0,     0,   143,     0,     0,   144,  1389,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,     0,   183,   184,     0,
     185,   186,   187,   188,   189,     0,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,   230,   231,     0,     0,
     232,   233,     0,   234,   235,   236,   237,     0,     0,   238,
     239,     0,     0,     0,   240,   241,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,   257,   258,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,   265,     0,     0,     0,   266,   267,
       0,   268,   269,     0,     0,     0,   270,     0,     0,   271,
     272,     0,     0,   273,     0,     0,   274,   275,   628,     0,
       0,     0,     0,   276,   277,     0,   278,     0,   279,     0,
     280,   281,     0,     0,     0,     0,     0,     0,     0,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,     0,     0,   310,   311,   312,   313,   314,
     315,     0,     0,   316,   317,     0,   318,     0,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   336,   337,     0,     0,     0,   338,     0,
     339,   340,   341,     0,   342,   343,   344,     0,   345,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   346,   347,
     348,     0,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,     0,   418,   419,
     420,   421,     0,     0,     0,   422,     0,     0,     0,   423,
       0,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,     0,     0,     0,     0,     0,   433,   434,   435,     0,
     436,   437,     0,   438,     0,     0,   439,     0,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,   456,   457,   458,     0,   459,   460,     0,     0,   461,
     462,   463,   464,     0,   133,   465,   466,     0,   467,   468,
     469,   470,     0,     0,     0,     0,     0,   471,   472,     0,
       0,     0,   473,   474,   475,   476,     0,   477,   478,     0,
     479,   480,     0,   481,   482,     0,     0,   483,     0,     0,
     484,     0,   485,     0,   486,   487,     0,     0,     0,     0,
       0,     0,   488,     0,     0,   489,     0,     0,     0,   490,
     491,   492,   493,   494,     0,     0,     0,     0,     0,     0,
     495,   496,     0,   497,   498,   499,     0,     0,   500,   136,
       0,   137,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,   144,  1797,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   188,   189,     0,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,   230,   231,     0,     0,   232,
     233,     0,   234,   235,   236,   237,     0,     0,   238,   239,
       0,     0,     0,   240,   241,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,   257,   258,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,     0,   274,   275,   628,     0,     0,
       0,     0,   276,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,     0,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   314,   315,
       0,     0,   316,   317,     0,   318,     0,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   336,   337,     0,     0,     0,   338,     0,   339,
     340,   341,     0,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
       0,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
     456,   457,   458,     0,   459,   460,     0,     0,   461,   462,
     463,   464,     0,   133,   465,   466,     0,   467,   468,   469,
     470,     0,     0,     0,     0,     0,   471,   472,     0,     0,
       0,   473,   474,   475,   476,     0,   477,   478,     0,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   486,   487,     0,     0,     0,     0,     0,
       0,   488,     0,     0,   489,     0,     0,     0,   490,   491,
     492,   493,   494,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,     0,   500,   136,     0,
     137,   138,   139,   140,   141,     0,     0,   142,     0,     0,
       0,   143,     0,     0,   144,  2533,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   890,   891,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,     0,   183,   184,     0,   185,   186,
     187,   188,   189,     0,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,   892,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,   230,   231,     0,     0,   232,   233,
       0,   234,   235,   236,   237,     0,     0,   238,   239,     0,
       0,     0,   240,   241,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   893,     0,   249,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,   257,   258,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,   265,     0,     0,     0,   266,   267,     0,   268,
     269,     0,     0,     0,   270,     0,     0,   271,   272,     0,
       0,   273,     0,     0,   274,   275,     0,     0,     0,     0,
       0,   276,   277,     0,   894,     0,   279,     0,   280,   281,
       0,     0,     0,     0,     0,     0,     0,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,     0,     0,   310,   311,   312,   313,   314,   315,     0,
       0,   316,   317,     0,   318,     0,   319,     0,   320,   321,
     322,   323,   324,   325,   895,   327,   328,     0,     0,   329,
     330,     0,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   336,   337,     0,     0,     0,   338,     0,   339,   340,
     341,     0,   342,   343,   344,     0,   345,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   346,   347,   348,     0,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,     0,   362,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,   386,     0,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,     0,   418,   419,   897,   421,
       0,     0,     0,   422,     0,     0,     0,   423,     0,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,     0,
       0,     0,     0,     0,   433,   434,   435,     0,   436,   437,
       0,   438,     0,     0,   439,     0,   440,     0,   441,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,   456,
     457,   458,     0,   459,   460,     0,     0,   461,   462,   463,
     464,     0,     0,   465,   466,     0,   467,   468,   469,   470,
       0,     0,     0,     0,     0,   471,   472,     0,     0,     0,
     473,   474,   475,   476,     0,   477,   478,     0,   479,   480,
       0,   481,   482,     0,     0,   483,     0,     0,   484,     0,
     485,     0,   486,   487,     0,     0,     0,     0,     0,     0,
     488,     0,     0,   489,     0,     0,     0,   490,   491,   492,
     493,   494,     0,     0,     0,     0,     0,     0,   495,   496,
       0,   497,   498,   499,     0,     0,   500,   136,     0,   137,
     138,   139,   140,   141,     0,     0,   142,     0,     0,     0,
     143,     0,     0,   144,   899,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,  1258,   183,   184,     0,   185,   186,   187,
     188,   189,     0,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,   230,   231,     0,     0,   232,   233,     0,
     234,   235,   236,   237,     0,     0,   238,   239,     0,     0,
       0,   240,   241,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,   257,   258,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,     0,   274,   275,     0,     0,     0,     0,     0,
     276,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,     0,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,   307,     0,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   314,   315,     0,     0,
     316,   317,     0,   318,     0,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     336,   337,     0,     0,     0,   338,     0,   339,   340,   341,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,     0,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,   456,   457,
     458,     0,   459,   460,     0,     0,   461,   462,   463,   464,
       0,     0,   465,   466,     0,   467,   468,   469,   470,     0,
       0,     0,     0,     0,   471,   472,     0,     0,     0,   473,
     474,   475,   476,     0,   477,   478,     0,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   486,   487,     0,     0,     0,     0,     0,     0,   488,
       0,     0,   489,     0,     0,     0,   490,   491,   492,   493,
     494,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,     0,   500,   136,     0,   137,   138,
     139,   140,   141,     0,     0,   142,     0,     0,     0,   143,
       0,     0,   144,  1259,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,     0,   183,   184,     0,   185,   186,   187,   188,
     189,     0,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,   230,   231,     0,     0,   232,   233,     0,   234,
     235,   236,   237,     0,     0,   238,   239,     0,     0,     0,
     240,   241,     0,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,     0,   250,   251,
       0,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,   257,   258,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
     265,     0,     0,     0,   266,   267,     0,   268,   269,     0,
       0,     0,   270,     0,     0,   271,   272,     0,     0,   273,
       0,     0,   274,   275,     0,     0,     0,     0,     0,   276,
     277,     0,   278,     0,   279,     0,   280,   281,     0,     0,
       0,     0,     0,     0,     0,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,     0,
       0,   310,   311,   312,   313,   314,   315,     0,     0,   316,
     317,     0,   318,     0,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   336,
     337,     0,     0,     0,   338,     0,   339,   340,   341,     0,
     342,   343,   344,     0,   345,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   346,   347,   348,     0,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,     0,   418,   419,   420,   421,     0,     0,
       0,   422,     0,     0,     0,   423,     0,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,     0,     0,     0,
       0,     0,   433,   434,   435,     0,   436,   437,     0,   438,
       0,     0,   439,     0,   440,     0,   441,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,   456,   457,   458,
       0,   459,   460,     0,     0,   461,   462,   463,   464,     0,
       0,   465,   466,     0,   467,   468,   469,   470,     0,     0,
       0,     0,     0,   471,   472,     0,     0,     0,   473,   474,
     475,   476,     0,   477,   478,     0,   479,   480,     0,   481,
     482,     0,     0,   483,     0,     0,   484,     0,   485,     0,
     486,   487,     0,     0,     0,     0,     0,     0,   488,     0,
       0,   489,     0,     0,     0,   490,   491,   492,   493,   494,
       0,     0,     0,     0,     0,     0,   495,   496,     0,   497,
     498,   499,     0,     0,   500,   136,     0,   137,   138,   139,
     140,   141,     0,     0,   142,     0,     0,     0,   143,     0,
       0,     0,  1259,   145,   146,   147,   148,   149,     0,     0,
    -396,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,     0,     0,     0,
       0,   160,  4113,     0,   161,   162,     0,   163,     0,     0,
       0,     0,   166,   167,   168,  4114,   170,   171,     0,   172,
     173,     0,   174,   175,     0,   177,     0,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,     0,   189,
       0,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,     0,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,     0,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,     0,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,     0,     0,     0,   227,   228,
     229,   230,   231,     0,     0,   232,   233,  4115,   234,   235,
     236,   237,     0,     0,     0,     0,     0,     0,     0,     0,
     241,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,     0,     0,   251,     0,
       0,     0,     0,     0,   254,     0,     0,     0,   255,   256,
     257,   258,  4116,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,  4117,     0,
       0,   270,     0,     0,     0,   272,     0,     0,   273,  4118,
       0,   274,   275,     0,     0,     0,     0,     0,   276,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,     0,
       0,  -351,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   314,   315,     0,     0,   316,   317,
       0,   318,     0,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,     0,
     331,   332,   333,   334,   335,     0,     0,     0,     0,   337,
       0,     0,     0,   338,     0,   339,   340,   341,     0,   342,
     343,  4119,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,     0,
       0,     0,     0,     0,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,     0,     0,
     387,     0,   389,  -351,     0,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,     0,   399,     0,     0,   401,
     402,   403,  4120,   404,     0,     0,     0,   406,   407,   408,
     409,   410,   411,   412,     0,   414,   415,     0,   416,     0,
       0,     0,     0,   418,   419,   420,     0,     0,     0,     0,
     422,     0,     0,     0,   423,     0,     0,   425,     0,   427,
       0,   428,     0,     0,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,   456,   457,   458,     0,
     459,   460,     0,     0,   461,   462,   463,   464,     0,     0,
     465,   466,     0,   467,   468,   469,   470,     0,     0,     0,
       0,     0,   471,   472,     0,     0,     0,     0,   474,   475,
     476,     0,   477,   478,     0,   479,   480,     0,     0,     0,
       0,     0,   483,     0,     0,   484,     0,     0,     0,   486,
     487,     0,     0,     0,     0,     0,     0,   488,     0,     0,
     489,     0,     0,     0,   490,   491,   492,   493,   494,     0,
       0,  -351,     0,     0,     0,   495,     0,     0,   497,     0,
     499,     0,   136,   500,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,  4604,     0,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,     0,
     500,   136,     0,   137,   138,   139,   140,   141,     0,     0,
     142,     0,  3244,     0,   143,     0,     0,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,     0,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,     0,   500,
     136,     0,   137,   138,   139,   140,   141,     0,     0,   142,
       0,  3248,     0,   143,     0,     0,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,     0,   183,   184,     0,
     185,   186,   187,   188,   189,     0,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,   230,   231,     0,     0,
     232,   233,     0,   234,   235,   236,   237,     0,     0,   238,
     239,     0,     0,     0,   240,   241,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,   257,   258,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,   265,     0,     0,     0,   266,   267,
       0,   268,   269,     0,     0,     0,   270,     0,     0,   271,
     272,     0,     0,   273,     0,     0,   274,   275,     0,     0,
       0,     0,     0,   276,   277,     0,   278,     0,   279,     0,
     280,   281,     0,     0,     0,     0,     0,     0,     0,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,     0,     0,   310,   311,   312,   313,   314,
     315,     0,     0,   316,   317,     0,   318,     0,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   336,   337,     0,     0,     0,   338,     0,
     339,   340,   341,     0,   342,   343,   344,     0,   345,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   346,   347,
     348,     0,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,     0,   418,   419,
     420,   421,     0,     0,     0,   422,     0,     0,     0,   423,
       0,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,     0,     0,     0,     0,     0,   433,   434,   435,     0,
     436,   437,     0,   438,     0,     0,   439,     0,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,   456,   457,   458,     0,   459,   460,     0,     0,   461,
     462,   463,   464,     0,     0,   465,   466,     0,   467,   468,
     469,   470,     0,     0,     0,     0,     0,   471,   472,     0,
       0,     0,   473,   474,   475,   476,     0,   477,   478,     0,
     479,   480,     0,   481,   482,     0,     0,   483,     0,     0,
     484,     0,   485,     0,   486,   487,     0,     0,     0,     0,
       0,     0,   488,     0,     0,   489,     0,     0,     0,   490,
     491,   492,   493,   494,     0,     0,     0,     0,     0,     0,
     495,   496,     0,   497,   498,   499,     0,   136,   500,   137,
     138,   139,   140,   141,  2296,     0,   142,     0,     0,     0,
     143,     0,     0,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
     188,   189,     0,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,   230,   231,     0,     0,   232,   233,     0,
     234,   235,   236,   237,     0,     0,   238,   239,     0,     0,
       0,   240,   241,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,   257,   258,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,     0,   274,   275,     0,     0,     0,     0,     0,
     276,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,     0,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,   307,     0,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   314,   315,     0,     0,
     316,   317,     0,   318,     0,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     336,   337,     0,     0,     0,   338,     0,   339,   340,   341,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,     0,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,   456,   457,
     458,     0,   459,   460,     0,     0,   461,   462,   463,   464,
       0,     0,   465,   466,     0,   467,   468,   469,   470,     0,
       0,     0,     0,     0,   471,   472,     0,     0,     0,   473,
     474,   475,   476,     0,   477,   478,     0,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   486,   487,     0,     0,     0,     0,     0,     0,   488,
       0,     0,   489,     0,     0,     0,   490,   491,   492,   493,
     494,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,   136,   500,   137,   138,   139,   140,
     141,  2567,     0,   142,     0,     0,     0,   143,     0,     0,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
       0,   183,   184,     0,   185,   186,   187,   188,   189,     0,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
     230,   231,     0,     0,   232,   233,     0,   234,   235,   236,
     237,     0,     0,   238,   239,     0,     0,     0,   240,   241,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,     0,   250,   251,     0,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,   257,
     258,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,   265,     0,
       0,     0,   266,   267,     0,   268,   269,     0,     0,     0,
     270,     0,     0,   271,   272,     0,     0,   273,     0,     0,
     274,   275,     0,     0,     0,     0,     0,   276,   277,     0,
     278,     0,   279,     0,   280,   281,     0,     0,     0,     0,
       0,     0,     0,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,     0,     0,   310,
     311,   312,   313,   314,   315,     0,     0,   316,   317,     0,
     318,     0,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,     0,   331,
     332,   333,   334,   335,     0,     0,     0,   336,   337,     0,
       0,     0,   338,     0,   339,   340,   341,     0,   342,   343,
     344,     0,   345,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   346,   347,   348,     0,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,     0,   362,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,   386,     0,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,     0,   418,   419,   420,   421,     0,     0,     0,   422,
       0,     0,     0,   423,     0,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,     0,     0,     0,     0,     0,
     433,   434,   435,     0,   436,   437,     0,   438,     0,     0,
     439,     0,   440,     0,   441,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,   456,   457,   458,     0,   459,
     460,     0,     0,   461,   462,   463,   464,     0,     0,   465,
     466,     0,   467,   468,   469,   470,     0,     0,     0,     0,
       0,   471,   472,     0,     0,     0,   473,   474,   475,   476,
       0,   477,   478,     0,   479,   480,     0,   481,   482,     0,
       0,   483,     0,     0,   484,     0,   485,     0,   486,   487,
       0,     0,     0,     0,     0,     0,   488,     0,     0,   489,
       0,     0,     0,   490,   491,   492,   493,   494,     0,     0,
       0,     0,     0,     0,   495,   496,     0,   497,   498,   499,
       0,   136,   500,   137,   138,   139,   140,   141,  3484,     0,
     142,     0,     0,     0,   143,     0,     0,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,     0,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,   136,   500,
     137,   138,   139,   140,   141,  3716,     0,   142,     0,     0,
       0,   143,     0,     0,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,     0,   183,   184,     0,   185,   186,
     187,   188,   189,     0,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
    2645,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,   230,   231,     0,     0,   232,   233,
       0,   234,   235,   236,   237,  2646,     0,   238,   239,     0,
       0,     0,   240,   241,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,     0,
     250,   251,     0,   252,  2647,     0,   253,   254,     0,     0,
       0,   255,   256,   257,   258,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,   265,     0,     0,     0,   266,   267,     0,   268,
     269,     0,     0,     0,   270,     0,     0,   271,   272,     0,
       0,   273,     0,     0,   274,   275,     0,     0,     0,     0,
       0,   276,   277,     0,   278,     0,   279,     0,   280,   281,
       0,     0,  2648,     0,     0,     0,     0,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,     0,     0,   310,   311,   312,   313,   314,   315,     0,
       0,   316,   317,     0,   318,     0,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,     0,   331,   332,   333,   334,   335,  1027,  1028,
       0,   336,   337,     0,     0,  2649,   338,     0,   339,   340,
     341,     0,   342,   343,   344,     0,   345,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   346,   347,   348,     0,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,     0,   362,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,   386,     0,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,     0,   418,   419,   420,   421,
       0,     0,     0,   422,     0,     0,     0,   423,     0,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,     0,
       0,  4591,   576,  4592,   433,   434,   435,     0,   436,   437,
       0,   438,     0,     0,   439,     0,   440,     0,   441,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,   456,
     457,   458,     0,   459,   460,     0,     0,   461,   462,   463,
     464,     0,     0,   465,   466,     0,   467,   468,   469,   470,
       0,     0,     0,     0,     0,   471,   472,     0,     0,     0,
     473,   474,   475,   476,  2650,   477,   478,     0,   479,   480,
       0,   481,   482,     0,     0,   483,     0,     0,   484,     0,
     485,     0,   486,   487,     0,     0,     0,     0,     0,     0,
     488,     0,     0,   489,     0,     0,     0,   490,   491,   492,
     493,   494,     0,     0,     0,     0,     0,     0,   495,   496,
       0,   497,   498,   499,     0,   136,   500,   137,   138,   139,
     140,   141,     0,     0,   142,     0,  1177,  1178,   143,  1980,
       0,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   188,   189,
       0,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,   230,   231,     0,     0,   232,   233,     0,   234,   235,
     236,   237,     0,     0,   238,   239,     0,     0,     0,   240,
     241,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
     257,   258,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
       0,   274,   275,     0,     0,     0,     0,     0,   276,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,     0,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   314,   315,     0,     0,   316,   317,
       0,   318,     0,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   336,   337,
       0,     0,     0,   338,     0,   339,   340,   341,     0,   342,
     343,   344,     0,   345,     0,     0,  1179,     0,     0,  1180,
       0,     0,     0,   346,   347,   348,     0,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,   456,   457,   458,     0,
     459,   460,     0,     0,   461,   462,   463,   464,     0,   133,
     465,   466,     0,   467,   468,   469,   470,     0,     0,     0,
       0,     0,   471,   472,     0,     0,     0,   473,   474,   475,
     476,     0,   477,   478,     0,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   486,
     487,     0,     0,     0,     0,     0,     0,   488,     0,     0,
     489,     0,     0,     0,   490,   491,   492,   493,   494,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,  1181,   136,   500,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
    1378,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,  1379,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,  1380,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
     628,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,  1381,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,   133,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,   136,
     500,   137,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,  1391,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   188,   189,     0,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,  1392,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,   230,   231,     0,     0,   232,
     233,     0,   234,   235,   236,   237,     0,     0,   238,   239,
       0,     0,     0,   240,   241,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,   257,   258,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,     0,   274,   275,   628,     0,     0,
       0,     0,   276,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,     0,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   314,   315,
       0,     0,   316,   317,     0,   318,     0,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   336,   337,     0,     0,     0,   338,     0,   339,
     340,   341,     0,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
       0,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
     456,   457,   458,     0,   459,   460,     0,     0,   461,   462,
     463,   464,     0,   133,   465,   466,     0,   467,   468,   469,
     470,     0,     0,     0,     0,     0,   471,   472,     0,     0,
       0,   473,   474,   475,   476,     0,   477,   478,     0,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   486,   487,     0,     0,     0,     0,     0,
       0,   488,     0,     0,   489,     0,     0,     0,   490,   491,
     492,   493,   494,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,   136,   500,   137,   138,
     139,   140,   141,     0,     0,   142,     0,     0,     0,   143,
       0,     0,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,     0,   183,   184,     0,   185,   186,   187,   188,
     189,     0,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,   230,   231,     0,     0,   232,   233,     0,   234,
     235,   236,   237,     0,     0,   238,   239,     0,     0,     0,
     240,   241,     0,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,     0,   250,   251,
       0,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,   257,   258,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
     265,     0,     0,     0,   266,   267,     0,   268,   269,     0,
       0,     0,   270,     0,     0,   271,   272,     0,     0,   273,
       0,     0,   274,   275,     0,     0,     0,     0,     0,   276,
     277,     0,   278,     0,   279,     0,   280,   281,     0,     0,
    2540,     0,     0,     0,     0,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,     0,
       0,   310,   311,   312,   313,   314,   315,     0,     0,   316,
     317,     0,   318,     0,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   336,
     337,     0,     0,  2541,   338,     0,   339,   340,   341,     0,
     342,   343,   344,     0,   345,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   346,   347,   348,   737,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,     0,   418,   419,   420,   421,     0,     0,
       0,   422,     0,     0,     0,   423,     0,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,     0,     0,     0,
       0,     0,   433,   434,   435,     0,   436,   437,     0,   438,
       0,     0,   439,     0,   440,     0,   441,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,   456,   457,   458,
       0,   459,   460,     0,     0,   461,   462,   463,   464,     0,
       0,   465,   466,     0,   467,   468,   469,   470,     0,     0,
       0,     0,     0,   471,   472,     0,     0,     0,   473,   474,
     475,   476,  2542,   477,   478,     0,   479,   480,     0,   481,
     482,     0,     0,   483,     0,     0,   484,     0,   485,     0,
     486,   487,     0,     0,     0,     0,     0,     0,   488,     0,
       0,   489,     0,     0,     0,   490,   491,   492,   493,   494,
       0,     0,     0,     0,     0,     0,   495,   496,     0,   497,
     498,   499,     0,   136,   500,   137,   138,   139,   140,   141,
       0,     0,   142,     0,     0,     0,   143,     0,     0,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,  1378,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,   188,   189,     0,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,  1379,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,   230,
     231,     0,     0,   232,   233,     0,   234,   235,   236,   237,
       0,     0,   238,   239,     0,     0,     0,   240,   241,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
       0,   249,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,   257,   258,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,     0,     0,     0,   270,
       0,     0,   271,   272,     0,     0,   273,     0,     0,   274,
     275,   628,     0,     0,     0,     0,   276,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,     0,     0,     0,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   314,   315,     0,     0,   316,   317,     0,   318,
       0,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   336,   337,     0,     0,
       0,   338,     0,   339,   340,   341,     0,   342,   343,   344,
       0,   345,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   346,   347,   348,     0,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,   404,     0,     0,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
       0,   418,   419,   420,   421,     0,     0,     0,   422,     0,
       0,     0,   423,     0,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,   456,   457,   458,     0,   459,   460,
       0,     0,   461,   462,   463,   464,     0,   133,   465,   466,
       0,   467,   468,   469,   470,     0,     0,     0,     0,     0,
     471,   472,     0,     0,     0,   473,   474,   475,   476,     0,
     477,   478,     0,   479,   480,     0,   481,   482,     0,     0,
     483,     0,     0,   484,     0,   485,     0,   486,   487,     0,
       0,     0,     0,     0,     0,   488,     0,     0,   489,     0,
       0,     0,   490,   491,   492,   493,   494,     0,     0,     0,
       0,     0,     0,   495,   496,     0,   497,   498,   499,     0,
     136,   500,   137,   138,   139,   140,   141,     0,     0,   142,
       0,     0,     0,   143,     0,     0,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,     0,   183,   184,     0,
     185,   186,   187,   188,   189,     0,     0,     0,   190,     0,
       0,   191,     0,   192,   982,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,   230,   231,     0,     0,
     232,   233,     0,   234,   235,   236,   237,     0,     0,   238,
     239,     0,     0,     0,   240,   241,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,   257,   258,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,   265,     0,     0,     0,   266,   267,
       0,   268,   269,     0,     0,     0,   270,     0,     0,   271,
     272,     0,     0,   273,     0,     0,   274,   275,   628,     0,
       0,     0,     0,   276,   277,     0,   278,     0,   279,     0,
     280,   281,     0,     0,     0,     0,     0,     0,     0,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,     0,     0,   310,   311,   312,   313,   314,
     315,     0,     0,   316,   317,     0,   318,     0,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   336,   337,     0,     0,     0,   338,     0,
     339,   340,   341,     0,   342,   343,   344,     0,   345,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   346,   347,
     348,     0,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,     0,   418,   419,
     420,   421,     0,     0,     0,   422,     0,     0,     0,   423,
       0,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,     0,     0,     0,     0,     0,   433,   434,   435,     0,
     436,   437,     0,   438,     0,     0,   439,     0,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,   456,   457,   458,     0,   459,   460,     0,     0,   461,
     462,   463,   464,     0,   133,   465,   466,     0,   467,   468,
     469,   470,     0,     0,     0,     0,     0,   471,   472,     0,
       0,     0,   473,   474,   475,   476,     0,   477,   478,     0,
     479,   480,     0,   481,   482,     0,     0,   483,     0,     0,
     484,     0,   485,     0,   486,   487,     0,     0,     0,     0,
       0,     0,   488,     0,     0,   489,     0,     0,     0,   490,
     491,   492,   493,   494,     0,     0,     0,     0,     0,     0,
     495,   496,     0,   497,   498,   499,     0,   136,   500,   137,
     138,   139,   140,   141,  1413,     0,   142,     0,     0,     0,
     143,     0,     0,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
     188,   189,     0,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,   230,   231,     0,     0,   232,   233,     0,
     234,   235,   236,   237,     0,     0,   238,   239,     0,     0,
       0,   240,   241,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,   257,   258,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,     0,   274,   275,   628,     0,     0,     0,     0,
     276,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,     0,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,   307,     0,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   314,   315,     0,     0,
     316,   317,     0,   318,     0,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     336,   337,     0,     0,     0,   338,     0,   339,   340,   341,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,     0,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,   456,   457,
     458,     0,   459,   460,     0,     0,   461,   462,   463,   464,
       0,   133,   465,   466,     0,   467,   468,   469,   470,     0,
       0,     0,     0,     0,   471,   472,     0,     0,     0,   473,
     474,   475,   476,     0,   477,   478,     0,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   486,   487,     0,     0,     0,     0,     0,     0,   488,
       0,     0,   489,     0,     0,     0,   490,   491,   492,   493,
     494,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,   136,   500,   137,   138,   139,   140,
     141,     0,     0,   142,     0,     0,     0,   143,     0,     0,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,   959,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
       0,   183,   184,     0,   185,   186,   187,   188,   189,     0,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
     230,   231,     0,     0,   232,   233,     0,   234,   235,   236,
     237,     0,     0,   238,   239,     0,     0,     0,   240,   241,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,     0,   250,   251,     0,   252,
     960,     0,   253,   254,     0,     0,     0,   255,   256,   257,
     258,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,   265,     0,
       0,     0,   266,   267,     0,   268,   269,     0,     0,     0,
     270,     0,     0,   271,   272,     0,     0,   273,     0,     0,
     274,   275,     0,     0,     0,     0,     0,   276,   277,     0,
     278,     0,   279,     0,   280,   281,     0,     0,     0,     0,
       0,     0,     0,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,     0,     0,   310,
     311,   312,   313,   314,   315,     0,     0,   316,   317,     0,
     318,     0,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,     0,   331,
     332,   333,   334,   335,     0,     0,     0,   336,   337,     0,
       0,     0,   338,     0,   339,   340,   341,     0,   342,   343,
     344,     0,   345,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   346,   347,   348,     0,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,     0,   362,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,   386,     0,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,     0,   418,   419,   420,   421,     0,     0,     0,   422,
       0,     0,     0,   423,     0,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,     0,     0,     0,     0,     0,
     433,   434,   435,     0,   436,   437,     0,   438,     0,     0,
     439,     0,   440,     0,   441,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,   456,   457,   458,     0,   459,
     460,     0,     0,   461,   462,   463,   464,     0,   961,   465,
     466,     0,   467,   468,   469,   470,     0,     0,     0,     0,
       0,   471,   472,     0,     0,     0,   473,   474,   475,   476,
       0,   477,   478,     0,   479,   480,     0,   481,   482,     0,
       0,   483,     0,     0,   484,     0,   485,     0,   486,   487,
       0,     0,     0,     0,     0,     0,   488,     0,     0,   489,
       0,     0,     0,   490,   491,   492,   493,   494,     0,     0,
       0,     0,     0,     0,   495,   496,     0,   497,   498,   499,
       0,   136,   500,   137,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,  2569,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,   628,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,   133,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,   136,   500,
     137,   138,   139,   140,   141,     0,     0,   142,     0,     0,
       0,   143,     0,     0,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,  1378,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,     0,   183,   184,     0,   185,   186,
     187,   188,   189,     0,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,   230,   231,     0,     0,   232,   233,
       0,   234,   235,   236,   237,     0,     0,   238,   239,     0,
       0,     0,   240,   241,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,   257,   258,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,   265,     0,     0,     0,   266,   267,     0,   268,
     269,     0,     0,     0,   270,     0,     0,   271,   272,     0,
       0,   273,     0,     0,   274,   275,   628,     0,     0,     0,
       0,   276,   277,     0,   278,     0,   279,     0,   280,   281,
       0,     0,     0,     0,     0,     0,     0,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,     0,     0,   310,   311,   312,   313,   314,   315,     0,
       0,   316,   317,     0,   318,     0,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   336,   337,     0,     0,     0,   338,     0,   339,   340,
     341,     0,   342,   343,   344,     0,   345,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   346,   347,   348,     0,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,     0,   362,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,   386,     0,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,     0,   418,   419,   420,   421,
       0,     0,     0,   422,     0,     0,     0,   423,     0,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,     0,
       0,     0,     0,     0,   433,   434,   435,     0,   436,   437,
       0,   438,     0,     0,   439,     0,   440,     0,   441,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,   456,
     457,   458,     0,   459,   460,     0,     0,   461,   462,   463,
     464,     0,   133,   465,   466,     0,   467,   468,   469,   470,
       0,     0,     0,     0,     0,   471,   472,     0,     0,     0,
     473,   474,   475,   476,     0,   477,   478,     0,   479,   480,
       0,   481,   482,     0,     0,   483,     0,     0,   484,     0,
     485,     0,   486,   487,     0,     0,     0,     0,     0,     0,
     488,     0,     0,   489,     0,     0,     0,   490,   491,   492,
     493,   494,     0,     0,     0,     0,     0,     0,   495,   496,
       0,   497,   498,   499,     0,   136,   500,   137,   138,   139,
     140,   141,     0,     0,   142,     0,     0,     0,   143,     0,
       0,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   188,   189,
       0,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,   230,   231,     0,     0,   232,   233,     0,   234,   235,
     236,   237,     0,     0,   238,   239,     0,     0,     0,   240,
     241,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
     257,   258,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
       0,   274,   275,   628,     0,     0,     0,     0,   276,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,     0,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   314,   315,     0,     0,   316,   317,
       0,   318,     0,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   336,   337,
       0,     0,     0,   338,     0,   339,   340,   341,     0,   342,
     343,   344,     0,   345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   346,   347,   348,     0,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,   456,   457,   458,     0,
     459,   460,     0,     0,   461,   462,   463,   464,     0,   133,
     465,   466,     0,   467,   468,   469,   470,     0,     0,     0,
       0,     0,   471,   472,     0,     0,     0,   473,   474,   475,
     476,     0,   477,   478,     0,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   486,
     487,     0,     0,     0,     0,     0,     0,   488,     0,     0,
     489,     0,     0,     0,   490,   491,   492,   493,   494,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,     0,   136,   500,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,  4524,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,  4525,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,   136,
     500,   137,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   188,   189,     0,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,   230,   231,     0,     0,   232,
     233,     0,   234,   235,   236,   237,     0,     0,   238,   239,
       0,     0,     0,   240,   241,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,   257,   258,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,     0,   274,   275,     0,     0,     0,
       0,     0,   276,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,     0,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   314,   315,
       0,     0,   316,   317,     0,   318,     0,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   336,   337,     0,     0,     0,   338,     0,   339,
     340,   341,     0,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
       0,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,   576,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
     456,   457,   458,     0,   459,   460,     0,     0,   461,   462,
     463,   464,     0,     0,   465,   466,     0,   467,   468,   469,
     470,     0,     0,     0,     0,     0,   471,   472,     0,     0,
       0,   473,   474,   475,   476,     0,   477,   478,     0,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   486,   487,     0,     0,     0,     0,     0,
       0,   488,     0,     0,   489,     0,     0,     0,   490,   491,
     492,   493,   494,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,   136,   500,   137,   138,
     139,   140,   141,     0,     0,   142,     0,     0,     0,   143,
       0,     0,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,     0,   183,   184,     0,   185,   186,   187,   188,
     189,     0,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,   230,   231,     0,     0,   232,   233,     0,   234,
     235,   236,   237,     0,     0,   238,   239,     0,     0,     0,
     240,   241,  1064,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,     0,   250,   251,
       0,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,   257,   258,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
     265,     0,     0,     0,   266,   267,     0,   268,   269,     0,
       0,     0,   270,     0,     0,   271,   272,     0,     0,   273,
       0,     0,   274,   275,     0,     0,     0,     0,     0,   276,
     277,     0,   278,     0,   279,     0,   280,   281,     0,     0,
       0,     0,     0,     0,     0,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,     0,
       0,   310,   311,   312,   313,   314,   315,     0,     0,   316,
     317,     0,   318,     0,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
       0,   331,   332,   333,   334,   335,     0,     0,     0,   336,
     337,     0,     0,     0,   338,     0,   339,   340,   341,     0,
     342,   343,   344,     0,   345,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   346,   347,   348,     0,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,     0,   418,   419,   420,   421,     0,     0,
       0,   422,     0,     0,     0,   423,     0,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,     0,     0,     0,
       0,     0,   433,   434,   435,     0,   436,   437,     0,   438,
       0,     0,   439,     0,   440,     0,   441,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,   456,   457,   458,
       0,   459,   460,     0,     0,   461,   462,   463,   464,     0,
       0,   465,   466,     0,   467,   468,   469,   470,     0,     0,
       0,     0,     0,   471,   472,     0,     0,     0,   473,   474,
     475,   476,     0,   477,   478,     0,   479,   480,     0,   481,
     482,     0,     0,   483,     0,     0,   484,     0,   485,     0,
     486,   487,     0,     0,     0,     0,     0,     0,   488,     0,
       0,   489,     0,     0,     0,   490,   491,   492,   493,   494,
       0,     0,     0,     0,     0,     0,   495,   496,     0,   497,
     498,   499,     0,   136,   500,   137,   138,   139,   140,   141,
       0,     0,   142,     0,     0,     0,   143,     0,     0,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,   188,   189,     0,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,   892,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,   230,
     231,     0,     0,   232,   233,     0,   234,   235,   236,   237,
       0,     0,   238,   239,     0,     0,     0,   240,   241,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
       0,   249,     0,     0,     0,   250,   251,     0,   252,     0,
       0,   253,   254,     0,     0,     0,   255,   256,   257,   258,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,     0,     0,     0,   270,
       0,     0,   271,   272,     0,     0,   273,     0,     0,   274,
     275,     0,     0,     0,     0,     0,   276,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,     0,     0,     0,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   314,   315,     0,     0,   316,   317,     0,   318,
       0,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,     0,   331,   332,
     333,   334,   335,     0,     0,     0,   336,   337,     0,     0,
       0,   338,     0,   339,   340,   341,     0,   342,   343,   344,
       0,   345,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   346,   347,   348,     0,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,     0,   361,
       0,   362,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,   386,     0,   387,   388,
     389,     0,     0,   390,   391,   392,   393,   394,   395,   396,
     397,     0,   398,     0,   399,   400,     0,   401,   402,   403,
       0,   404,     0,     0,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,     0,   416,   417,     0,     0,
       0,   418,   419,   420,   421,     0,     0,     0,   422,     0,
       0,     0,   423,     0,   424,   425,   426,   427,     0,   428,
     429,   430,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,   442,   443,   444,   445,   446,     0,
       0,     0,   447,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,   456,   457,   458,     0,   459,   460,
       0,     0,   461,   462,   463,   464,     0,     0,   465,   466,
       0,   467,   468,   469,   470,     0,     0,     0,     0,     0,
    2006,   472,     0,     0,     0,   473,   474,   475,   476,     0,
     477,   478,     0,   479,   480,     0,   481,   482,     0,     0,
     483,     0,     0,   484,     0,   485,     0,   486,   487,     0,
       0,     0,     0,     0,     0,   488,     0,     0,   489,     0,
       0,     0,   490,   491,   492,   493,   494,     0,     0,     0,
       0,     0,     0,   495,   496,     0,   497,   498,   499,     0,
     136,   500,   137,   138,   139,   140,   141,     0,     0,   142,
       0,     0,     0,   143,     0,     0,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,   182,     0,   183,   184,     0,
     185,   186,   187,   188,   189,     0,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,  2205,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,   230,   231,     0,     0,
     232,   233,     0,   234,   235,   236,   237,     0,     0,   238,
     239,     0,     0,     0,   240,   241,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,     0,   250,   251,     0,   252,     0,     0,   253,   254,
       0,     0,     0,   255,   256,   257,   258,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,   265,     0,     0,     0,   266,   267,
       0,   268,   269,     0,     0,     0,   270,     0,     0,   271,
     272,     0,     0,   273,     0,     0,   274,   275,     0,     0,
       0,     0,     0,   276,   277,     0,   278,     0,   279,     0,
     280,   281,     0,     0,     0,     0,     0,     0,     0,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,     0,     0,   310,   311,   312,   313,   314,
     315,     0,     0,   316,   317,     0,   318,     0,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,     0,   331,   332,   333,   334,   335,
       0,     0,     0,   336,   337,     0,     0,     0,   338,     0,
     339,   340,   341,     0,   342,   343,   344,     0,   345,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   346,   347,
     348,     0,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,     0,   361,     0,   362,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,   386,     0,   387,   388,   389,     0,     0,
     390,   391,   392,   393,   394,   395,   396,   397,     0,   398,
       0,   399,   400,     0,   401,   402,   403,     0,   404,     0,
       0,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,     0,   416,   417,     0,     0,     0,   418,   419,
     420,   421,     0,     0,     0,   422,     0,     0,     0,   423,
       0,   424,   425,   426,   427,     0,   428,   429,   430,   431,
     432,     0,     0,     0,     0,     0,   433,   434,   435,     0,
     436,   437,     0,   438,     0,     0,   439,     0,   440,     0,
     441,   442,   443,   444,   445,   446,     0,     0,     0,   447,
     448,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,   456,   457,   458,     0,   459,   460,     0,     0,   461,
     462,   463,   464,     0,     0,   465,   466,     0,   467,   468,
     469,   470,     0,     0,     0,     0,     0,   471,   472,     0,
       0,     0,   473,   474,   475,   476,     0,   477,   478,     0,
     479,   480,     0,   481,   482,     0,     0,   483,     0,     0,
     484,     0,   485,     0,   486,   487,     0,     0,     0,     0,
       0,     0,   488,     0,     0,   489,     0,     0,     0,   490,
     491,   492,   493,   494,     0,     0,     0,     0,     0,     0,
     495,   496,     0,   497,   498,   499,     0,   136,   500,   137,
     138,   139,   140,   141,     0,     0,   142,     0,     0,     0,
     143,     0,     0,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
     188,   189,     0,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,   230,   231,     0,     0,   232,   233,     0,
     234,   235,   236,   237,     0,     0,   238,   239,     0,     0,
       0,   240,   241,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,     0,   250,
     251,     0,   252,     0,     0,   253,   254,     0,     0,     0,
     255,   256,   257,   258,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
       0,     0,     0,   270,     0,     0,   271,   272,     0,     0,
     273,     0,     0,   274,   275,     0,     0,     0,     0,     0,
     276,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,     0,     0,     0,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,   307,     0,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   314,   315,     0,     0,
     316,   317,     0,   318,     0,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,     0,   331,   332,   333,   334,   335,     0,     0,     0,
     336,   337,     0,     0,     0,   338,     0,   339,   340,   341,
       0,   342,   343,   344,     0,   345,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   346,   347,   348,     0,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,     0,   361,     0,   362,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
     386,     0,   387,   388,   389,     0,     0,   390,   391,   392,
     393,   394,   395,   396,   397,     0,   398,     0,   399,   400,
       0,   401,   402,   403,     0,   404,     0,     0,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,     0,
     416,   417,     0,     0,     0,   418,   419,   420,   421,     0,
       0,     0,   422,     0,     0,     0,   423,     0,   424,   425,
     426,   427,     0,   428,   429,   430,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,   442,   443,
     444,   445,   446,     0,     0,     0,   447,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,   456,   457,
     458,     0,   459,   460,     0,     0,   461,   462,   463,   464,
       0,   133,   465,   466,     0,   467,   468,   469,   470,     0,
       0,     0,     0,     0,   471,   472,     0,     0,     0,   473,
     474,   475,   476,     0,   477,   478,     0,   479,   480,     0,
     481,   482,     0,     0,   483,     0,     0,   484,     0,   485,
       0,   486,   487,     0,     0,     0,     0,     0,     0,   488,
       0,     0,   489,     0,     0,     0,   490,   491,   492,   493,
     494,     0,     0,     0,     0,     0,     0,   495,   496,     0,
     497,   498,   499,     0,   136,   500,   137,   138,   139,   140,
     141,     0,     0,   142,     0,     0,     0,   143,     0,     0,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,   182,
       0,   183,   184,     0,   185,   186,   187,   188,   189,     0,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,   892,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
     230,   231,     0,     0,   232,   233,     0,   234,   235,   236,
     237,     0,     0,   238,   239,     0,     0,     0,   240,   241,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,     0,   250,   251,     0,   252,
       0,     0,   253,   254,     0,     0,     0,   255,   256,   257,
     258,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,   265,     0,
       0,     0,   266,   267,     0,   268,   269,     0,     0,     0,
     270,     0,     0,   271,   272,     0,     0,   273,     0,     0,
     274,   275,     0,     0,     0,     0,     0,   276,   277,     0,
     278,     0,   279,     0,   280,   281,     0,     0,     0,     0,
       0,     0,     0,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,     0,     0,   310,
     311,   312,   313,   314,   315,     0,     0,   316,   317,     0,
     318,     0,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,     0,   331,
     332,   333,   334,   335,     0,     0,     0,   336,   337,     0,
       0,     0,   338,     0,   339,   340,   341,     0,   342,   343,
     344,     0,   345,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   346,   347,   348,     0,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,     0,
     361,     0,   362,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,   386,     0,   387,
     388,   389,     0,     0,   390,   391,   392,   393,   394,   395,
     396,   397,     0,   398,     0,   399,   400,     0,   401,   402,
     403,     0,   404,     0,     0,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,     0,   416,   417,     0,
       0,     0,   418,   419,   420,   421,     0,     0,     0,   422,
       0,     0,     0,   423,     0,   424,   425,   426,   427,     0,
     428,   429,   430,   431,   432,     0,     0,     0,     0,     0,
     433,   434,   435,     0,   436,   437,     0,   438,     0,     0,
     439,     0,   440,     0,   441,   442,   443,   444,   445,   446,
       0,     0,     0,   447,   448,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,   456,   457,   458,     0,   459,
     460,     0,     0,   461,   462,   463,   464,     0,     0,   465,
     466,     0,   467,   468,   469,   470,     0,     0,     0,     0,
       0,   471,   472,     0,     0,     0,   473,   474,   475,   476,
       0,   477,   478,     0,   479,   480,     0,   481,   482,     0,
       0,   483,     0,     0,   484,     0,   485,     0,   486,   487,
       0,     0,     0,     0,     0,     0,   488,     0,     0,   489,
       0,     0,     0,   490,   491,   492,   493,   494,     0,     0,
       0,     0,     0,     0,   495,   496,     0,   497,   498,   499,
       0,   136,   500,   137,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,   188,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,  2678,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,     0,   234,   235,   236,   237,     0,     0,
     238,   239,     0,     0,     0,   240,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,   250,   251,     0,   252,     0,     0,   253,
     254,     0,     0,     0,   255,   256,   257,   258,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,     0,     0,     0,   270,     0,     0,
     271,   272,     0,     0,   273,     0,     0,   274,   275,     0,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,     0,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,   336,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,   344,     0,   345,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   346,
     347,   348,     0,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,     0,   361,     0,   362,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,   386,     0,   387,   388,   389,     0,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
     398,     0,   399,   400,     0,   401,   402,   403,     0,   404,
       0,     0,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,     0,   416,   417,     0,     0,     0,   418,
     419,   420,   421,     0,     0,     0,   422,     0,     0,     0,
     423,     0,   424,   425,   426,   427,     0,   428,   429,   430,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
     447,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,   473,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,   481,   482,     0,     0,   483,     0,
       0,   484,     0,   485,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,     0,     0,     0,
       0,   495,   496,     0,   497,   498,   499,     0,   136,   500,
     137,   138,   139,   140,   141,  2691,     0,   142,     0,     0,
       0,   143,     0,     0,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,   182,     0,   183,   184,     0,   185,   186,
     187,   188,   189,     0,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,   230,   231,     0,     0,   232,   233,
       0,   234,   235,   236,   237,     0,     0,   238,   239,     0,
       0,     0,   240,   241,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,     0,
     250,   251,     0,   252,     0,     0,   253,   254,     0,     0,
       0,   255,   256,   257,   258,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,   265,     0,     0,     0,   266,   267,     0,   268,
     269,     0,     0,     0,   270,     0,     0,   271,   272,     0,
       0,   273,     0,     0,   274,   275,     0,     0,     0,     0,
       0,   276,   277,     0,   278,     0,   279,     0,   280,   281,
       0,     0,     0,     0,     0,     0,     0,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,     0,     0,   310,   311,   312,   313,   314,   315,     0,
       0,   316,   317,     0,   318,     0,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,     0,   331,   332,   333,   334,   335,     0,     0,
       0,   336,   337,     0,     0,     0,   338,     0,   339,   340,
     341,     0,   342,   343,   344,     0,   345,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   346,   347,   348,     0,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,     0,   361,     0,   362,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,   386,     0,   387,   388,   389,     0,     0,   390,   391,
     392,   393,   394,   395,   396,   397,     0,   398,     0,   399,
     400,     0,   401,   402,   403,     0,   404,     0,     0,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
       0,   416,   417,     0,     0,     0,   418,   419,   420,   421,
       0,     0,     0,   422,     0,     0,     0,   423,     0,   424,
     425,   426,   427,     0,   428,   429,   430,   431,   432,     0,
       0,     0,     0,     0,   433,   434,   435,     0,   436,   437,
       0,   438,     0,     0,   439,     0,   440,     0,   441,   442,
     443,   444,   445,   446,     0,     0,     0,   447,   448,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,   456,
     457,   458,     0,   459,   460,     0,     0,   461,   462,   463,
     464,     0,     0,   465,   466,     0,   467,   468,   469,   470,
       0,     0,     0,     0,     0,   471,   472,     0,     0,     0,
     473,   474,   475,   476,     0,   477,   478,     0,   479,   480,
       0,   481,   482,     0,     0,   483,     0,     0,   484,     0,
     485,     0,   486,   487,     0,     0,     0,     0,     0,     0,
     488,     0,     0,   489,     0,     0,     0,   490,   491,   492,
     493,   494,     0,     0,     0,     0,     0,     0,   495,   496,
       0,   497,   498,   499,     0,   136,   500,   137,   138,   139,
     140,   141,     0,     0,   142,     0,     0,     0,   143,     0,
       0,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,   188,   189,
       0,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
    2718,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,   230,   231,     0,     0,   232,   233,     0,   234,   235,
     236,   237,     0,     0,   238,   239,     0,     0,     0,   240,
     241,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,     0,   250,   251,     0,
     252,     0,     0,   253,   254,     0,     0,     0,   255,   256,
     257,   258,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,     0,     0,
       0,   270,     0,     0,   271,   272,     0,     0,   273,     0,
       0,   274,   275,     0,     0,     0,     0,     0,   276,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,     0,
       0,     0,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   314,   315,     0,     0,   316,   317,
       0,   318,     0,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,     0,
     331,   332,   333,   334,   335,     0,     0,     0,   336,   337,
       0,     0,     0,   338,     0,   339,   340,   341,     0,   342,
     343,   344,     0,   345,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   346,   347,   348,     0,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
       0,   361,     0,   362,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,   386,     0,
     387,   388,   389,     0,     0,   390,   391,   392,   393,   394,
     395,   396,   397,     0,   398,     0,   399,   400,     0,   401,
     402,   403,     0,   404,     0,     0,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,     0,   416,   417,
       0,     0,     0,   418,   419,   420,   421,     0,     0,     0,
     422,     0,     0,     0,   423,     0,   424,   425,   426,   427,
       0,   428,   429,   430,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,   442,   443,   444,   445,
     446,     0,     0,     0,   447,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,   456,   457,   458,     0,
     459,   460,     0,     0,   461,   462,   463,   464,     0,     0,
     465,   466,     0,   467,   468,   469,   470,     0,     0,     0,
       0,     0,   471,   472,     0,     0,     0,   473,   474,   475,
     476,     0,   477,   478,     0,   479,   480,     0,   481,   482,
       0,     0,   483,     0,     0,   484,     0,   485,     0,   486,
     487,     0,     0,     0,     0,     0,     0,   488,     0,     0,
     489,     0,     0,     0,   490,   491,   492,   493,   494,     0,
       0,     0,     0,     0,     0,   495,   496,     0,   497,   498,
     499,     0,   136,   500,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,   188,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,     0,   234,   235,   236,   237,     0,
       0,   238,   239,     0,     0,     0,   240,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,   250,   251,     0,   252,     0,     0,
     253,   254,     0,     0,     0,   255,   256,   257,   258,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,     0,     0,     0,   270,     0,
       0,   271,   272,     0,     0,   273,     0,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,     0,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,   336,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,   344,     0,
     345,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     346,   347,   348,     0,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,     0,   361,     0,
     362,   363,   364,  3236,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,   386,     0,   387,   388,   389,
       0,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,   398,     0,   399,   400,     0,   401,   402,   403,     0,
     404,     0,     0,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,     0,   416,   417,     0,     0,     0,
     418,   419,   420,   421,     0,     0,     0,   422,     0,     0,
       0,   423,     0,   424,   425,   426,   427,     0,   428,   429,
     430,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,   447,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,   473,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,   481,   482,     0,     0,   483,
       0,     0,   484,     0,   485,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,     0,     0,
       0,     0,   495,   496,     0,   497,   498,   499,     0,   136,
     500,   137,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,   188,   189,     0,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,   230,   231,     0,     0,   232,
     233,     0,   234,   235,   236,   237,     0,     0,   238,   239,
       0,     0,     0,   240,   241,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
       0,   250,   251,     0,   252,     0,     0,   253,   254,     0,
       0,     0,   255,   256,   257,   258,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,     0,     0,     0,   270,     0,     0,   271,   272,
       0,     0,   273,     0,     0,   274,   275,     0,     0,     0,
       0,     0,   276,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,     0,     0,     0,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   314,   315,
       0,     0,   316,   317,     0,   318,     0,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,     0,   331,   332,   333,   334,   335,     0,
       0,     0,   336,   337,     0,     0,     0,   338,     0,   339,
     340,   341,     0,   342,   343,   344,     0,   345,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   346,   347,   348,
       0,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,     0,   361,     0,   362,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,   386,     0,   387,   388,   389,     0,     0,   390,
     391,   392,   393,   394,   395,   396,   397,     0,   398,     0,
     399,   400,     0,   401,   402,   403,     0,   404,     0,     0,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,     0,   416,   417,     0,     0,     0,   418,   419,   420,
     421,     0,     0,     0,   422,     0,     0,     0,   423,     0,
     424,   425,   426,   427,     0,   428,   429,   430,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
     442,   443,   444,   445,   446,     0,     0,     0,   447,   448,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
     456,   457,   458,     0,   459,   460,     0,     0,   461,   462,
     463,   464,     0,     0,   465,   466,     0,   467,   468,   469,
     470,     0,     0,     0,     0,     0,   471,   472,     0,     0,
       0,   473,   474,   475,   476,     0,   477,   478,     0,   479,
     480,     0,   481,   482,     0,     0,   483,     0,     0,   484,
       0,   485,     0,   486,   487,     0,     0,     0,     0,     0,
       0,   488,     0,     0,   489,     0,     0,     0,   490,   491,
     492,   493,   494,     0,     0,     0,     0,     0,     0,   495,
     496,     0,   497,   498,   499,     0,   136,   500,   137,   138,
     139,   140,   141,     0,     0,   142,     0,     0,     0,   143,
       0,     0,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,   182,     0,   183,   184,     0,   185,   186,   187,   188,
     189,     0,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,   230,   231,     0,     0,   232,   233,     0,   234,
     235,  1896,   237,     0,     0,   238,   239,     0,     0,     0,
     240,   241,     0,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,     0,   250,   251,
       0,   252,     0,     0,   253,   254,     0,     0,     0,   255,
     256,   257,   258,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
     265,     0,     0,     0,   266,   267,     0,   268,   269,     0,
       0,     0,   270,     0,     0,   271,   272,     0,     0,   273,
       0,     0,   274,   275,     0,     0,     0,     0,     0,   276,
     277,     0,   278,     0,   279,     0,   280,   281,     0,     0,
       0,     0,     0,     0,     0,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,     0,
       0,   310,   311,   312,   313,   314,   315,     0,     0,   316,
     317,     0,   318,     0,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
       0,   331,   332,  1897,   334,   335,     0,     0,     0,   336,
     337,     0,     0,     0,   338,     0,   339,   340,   341,     0,
     342,   343,   344,     0,   345,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   346,   347,   348,     0,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,     0,   361,     0,   362,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,   386,
       0,   387,   388,   389,     0,     0,   390,   391,   392,   393,
     394,   395,   396,   397,     0,   398,     0,   399,   400,     0,
     401,   402,   403,     0,   404,     0,     0,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,     0,   416,
     417,     0,     0,     0,   418,   419,   420,   421,     0,     0,
       0,   422,     0,     0,     0,   423,     0,   424,   425,   426,
     427,     0,   428,   429,   430,   431,   432,     0,     0,     0,
       0,     0,   433,   434,   435,     0,   436,   437,     0,   438,
       0,     0,   439,     0,   440,     0,   441,   442,   443,   444,
     445,   446,     0,     0,     0,   447,   448,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,   456,   457,   458,
       0,   459,   460,     0,     0,   461,   462,   463,   464,     0,
       0,   465,   466,     0,   467,   468,   469,   470,     0,     0,
       0,     0,     0,   471,   472,     0,     0,     0,   473,   474,
     475,   476,     0,   477,   478,     0,   479,   480,     0,   481,
     482,     0,     0,   483,     0,     0,   484,     0,   485,     0,
     486,   487,     0,     0,     0,     0,     0,     0,   488,     0,
       0,   489,     0,     0,     0,   490,   491,   492,   493,   494,
       0,     0,     0,     0,     0,     0,   495,   496,     0,   497,
     498,   499,     0,   136,   500,   137,   138,   139,   140,   141,
       0,     0,   142,     0,     0,     0,   143,     0,     0,     0,
       0,   145,   146,   147,   148,   149,     0,     0,  -396,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,     0,     0,     0,     0,   160,
    4113,     0,   161,   162,     0,   163,     0,     0,     0,     0,
     166,   167,   168,  4114,   170,   171,     0,   172,   173,     0,
     174,   175,     0,   177,     0,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,     0,   189,     0,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,     0,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,     0,     0,     0,   210,
     211,   212,     0,  -366,  -366,   213,     0,  -366,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,     0,     0,     0,   227,   228,   229,   230,
     231,     0,     0,   232,   233,  4115,   234,   235,   236,   237,
       0,     0,     0,     0,     0,     0,     0,     0,   241,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
       0,   249,     0,     0,     0,     0,   251,     0,     0,     0,
       0,     0,   254,     0,     0,     0,   255,   256,   257,   258,
    4116,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,  4117,     0,     0,   270,
       0,     0,     0,   272,     0,     0,   273,  4118,     0,   274,
     275,     0,     0,     0,     0,     0,   276,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,     0,     0,  -351,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   314,   315,     0,     0,   316,   317,     0,   318,
       0,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,     0,   331,   332,
     333,   334,   335,     0,     0,     0,     0,   337,     0,     0,
       0,   338,     0,   339,   340,   341,     0,   342,   343,  4119,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,     0,     0,     0,
       0,     0,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,     0,     0,   387,     0,
     389,  -351,     0,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,     0,   399,     0,     0,   401,   402,   403,
    4120,   404,     0,     0,     0,   406,   407,   408,   409,   410,
     411,   412,     0,   414,   415,     0,   416,     0,     0,     0,
       0,   418,   419,   420,     0,     0,     0,     0,   422,     0,
       0,     0,   423,     0,     0,   425,     0,   427,     0,   428,
       0,     0,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,   456,   457,   458,     0,   459,   460,
       0,     0,   461,   462,   463,   464,     0,     0,   465,   466,
       0,   467,   468,   469,   470,     0,     0,     0,     0,     0,
     471,   472,     0,     0,     0,     0,   474,   475,   476,     0,
     477,   478,     0,   479,   480,     0,     0,     0,     0,     0,
     483,     0,     0,   484,     0,     0,     0,   486,   487,     0,
       0,     0,     0,     0,     0,   488,     0,     0,   489,     0,
       0,     0,   490,   491,   492,   493,   494,     0,     0,  -351,
       0,     0,     0,   495,     0,     0,   497,     0,   499,     0,
     136,   500,   137,   138,   139,   140,   141,     0,     0,   142,
       0,     0,     0,   143,     0,     0,     0,     0,   145,   146,
     147,   148,   149,     0,     0,  -396,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,     0,     0,     0,     0,   160,  4113,     0,   161,
     162,     0,   163,     0,     0,     0,     0,   166,   167,   168,
    4114,   170,   171,     0,   172,   173,     0,   174,   175,     0,
     177,     0,   179,   180,   181,   182,     0,   183,   184,     0,
     185,   186,   187,     0,   189,     0,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,     0,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,     0,     0,     0,   210,   211,   212,     0,
    -387,     0,   213,     0,  -387,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
       0,     0,     0,   227,   228,   229,   230,   231,     0,     0,
     232,   233,  4115,   234,   235,   236,   237,     0,     0,     0,
       0,     0,     0,     0,     0,   241,     0,   242,     0,   243,
       0,   244,   245,   246,   247,     0,   248,     0,   249,     0,
       0,     0,     0,   251,     0,     0,     0,     0,     0,   254,
       0,     0,     0,   255,   256,   257,   258,  4116,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
       0,     0,     0,     0,   265,     0,     0,     0,   266,   267,
       0,   268,   269,  4117,     0,     0,   270,     0,     0,     0,
     272,     0,     0,   273,  4118,     0,   274,   275,     0,     0,
       0,     0,     0,   276,   277,     0,   278,     0,   279,     0,
     280,   281,     0,     0,     0,     0,  -351,     0,     0,   282,
       0,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,     0,   300,
     301,   302,     0,   303,   304,   305,   306,   307,     0,   308,
     309,     0,     0,     0,     0,   310,   311,   312,   313,   314,
     315,     0,     0,   316,   317,     0,   318,     0,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,     0,
       0,   329,   330,     0,     0,   331,   332,   333,   334,   335,
       0,     0,     0,     0,   337,     0,     0,     0,   338,     0,
     339,   340,   341,     0,   342,   343,  4119,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   347,
     348,     0,     0,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,     0,     0,     0,     0,     0,   363,
     364,     0,   365,     0,   366,   367,   368,   369,   370,     0,
     371,   372,   373,     0,     0,   374,     0,     0,     0,   375,
     376,   377,   378,   379,     0,     0,   380,   381,   382,   383,
     384,     0,   385,     0,     0,   387,     0,   389,  -351,     0,
     390,   391,   392,   393,   394,   395,   396,   397,     0,     0,
       0,   399,     0,     0,   401,   402,   403,  4120,   404,     0,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     414,   415,     0,   416,     0,     0,     0,     0,   418,   419,
     420,     0,     0,     0,     0,   422,     0,     0,     0,   423,
       0,     0,   425,     0,   427,     0,   428,     0,     0,   431,
     432,     0,     0,     0,     0,     0,   433,   434,   435,     0,
     436,   437,     0,   438,     0,     0,   439,     0,   440,     0,
     441,     0,   443,   444,   445,   446,     0,     0,     0,     0,
     448,     0,   449,   450,   451,   452,   453,   454,     0,     0,
     455,   456,   457,   458,     0,   459,   460,     0,     0,   461,
     462,   463,   464,     0,     0,   465,   466,     0,   467,   468,
     469,   470,     0,     0,     0,     0,     0,   471,   472,     0,
       0,     0,     0,   474,   475,   476,     0,   477,   478,     0,
     479,   480,     0,     0,     0,     0,     0,   483,     0,     0,
     484,     0,     0,     0,   486,   487,     0,     0,     0,     0,
       0,     0,   488,     0,     0,   489,     0,     0,     0,   490,
     491,   492,   493,   494,  -387,     0,  -351,     0,     0,     0,
     495,     0,     0,   497,     0,   499,     0,   136,   500,   137,
     138,   139,   140,   141,     0,     0,   142,     0,     0,     0,
     143,     0,     0,     0,     0,   145,   146,   147,   148,   149,
       0,     0,  -396,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,     0,
       0,     0,     0,   160,  4113,     0,   161,   162,     0,   163,
       0,     0,     0,     0,   166,   167,   168,  4114,   170,   171,
       0,   172,   173,     0,   174,   175,     0,   177,     0,   179,
     180,   181,   182,     0,   183,   184,     0,   185,   186,   187,
       0,   189,     0,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,     0,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
       0,     0,     0,   210,   211,   212,     0,  -384,     0,   213,
       0,  -384,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,     0,     0,     0,
     227,   228,   229,   230,   231,     0,     0,   232,   233,  4115,
     234,   235,   236,   237,     0,     0,     0,     0,     0,     0,
       0,     0,   241,     0,   242,     0,   243,     0,   244,   245,
     246,   247,     0,   248,     0,   249,     0,     0,     0,     0,
     251,     0,     0,     0,     0,     0,   254,     0,     0,     0,
     255,   256,   257,   258,  4116,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,   265,     0,     0,     0,   266,   267,     0,   268,   269,
    4117,     0,     0,   270,     0,     0,     0,   272,     0,     0,
     273,  4118,     0,   274,   275,     0,     0,     0,     0,     0,
     276,   277,     0,   278,     0,   279,     0,   280,   281,     0,
       0,     0,     0,  -351,     0,     0,   282,     0,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,     0,   300,   301,   302,     0,
     303,   304,   305,   306,   307,     0,   308,   309,     0,     0,
       0,     0,   310,   311,   312,   313,   314,   315,     0,     0,
     316,   317,     0,   318,     0,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,     0,     0,   329,   330,
       0,     0,   331,   332,   333,   334,   335,     0,     0,     0,
       0,   337,     0,     0,     0,   338,     0,   339,   340,   341,
       0,   342,   343,  4119,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   347,   348,     0,     0,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,     0,     0,     0,     0,     0,   363,   364,     0,   365,
       0,   366,   367,   368,   369,   370,     0,   371,   372,   373,
       0,     0,   374,     0,     0,     0,   375,   376,   377,   378,
     379,     0,     0,   380,   381,   382,   383,   384,     0,   385,
       0,     0,   387,     0,   389,  -351,     0,   390,   391,   392,
     393,   394,   395,   396,   397,     0,     0,     0,   399,     0,
       0,   401,   402,   403,  4120,   404,     0,     0,     0,   406,
     407,   408,   409,   410,   411,   412,     0,   414,   415,     0,
     416,     0,     0,     0,     0,   418,   419,   420,     0,     0,
       0,     0,   422,     0,     0,     0,   423,     0,     0,   425,
       0,   427,     0,   428,     0,     0,   431,   432,     0,     0,
       0,     0,     0,   433,   434,   435,     0,   436,   437,     0,
     438,     0,     0,   439,     0,   440,     0,   441,     0,   443,
     444,   445,   446,     0,     0,     0,     0,   448,     0,   449,
     450,   451,   452,   453,   454,     0,     0,   455,   456,   457,
     458,     0,   459,   460,     0,     0,   461,   462,   463,   464,
       0,     0,   465,   466,     0,   467,   468,   469,   470,     0,
       0,     0,     0,     0,   471,   472,     0,     0,     0,     0,
     474,   475,   476,     0,   477,   478,     0,   479,   480,     0,
       0,     0,     0,     0,   483,     0,     0,   484,     0,     0,
       0,   486,   487,     0,     0,     0,     0,     0,     0,   488,
       0,     0,   489,     0,     0,     0,   490,   491,   492,   493,
     494,  -384,     0,  -351,     0,     0,     0,   495,     0,     0,
     497,     0,   499,     0,   136,   500,   137,   138,   139,   140,
     141,     0,     0,   142,     0,     0,     0,   143,     0,     0,
       0,     0,   145,   146,   147,   148,   149,     0,     0,  -396,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,     0,     0,     0,     0,
     160,  4113,     0,   161,   162,     0,   163,     0,     0,     0,
       0,   166,   167,   168,  4114,   170,   171,     0,   172,   173,
       0,   174,   175,     0,   177,     0,   179,   180,   181,   182,
       0,   183,   184,     0,   185,   186,   187,     0,   189,     0,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,     0,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,     0,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,  4440,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,     0,     0,     0,   227,   228,   229,
     230,   231,     0,     0,   232,   233,  4115,   234,   235,   236,
     237,     0,     0,     0,     0,     0,     0,     0,     0,   241,
       0,   242,     0,   243,     0,   244,   245,   246,   247,     0,
     248,     0,   249,     0,     0,     0,     0,   251,     0,     0,
       0,     0,     0,   254,     0,     0,     0,   255,   256,   257,
     258,  4116,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,     0,     0,     0,     0,   265,     0,
       0,     0,   266,   267,     0,   268,   269,  4117,     0,     0,
     270,     0,     0,     0,   272,     0,     0,   273,  4118,     0,
     274,   275,     0,     0,     0,     0,     0,   276,   277,     0,
     278,     0,   279,     0,   280,   281,     0,     0,     0,     0,
    -351,     0,     0,   282,     0,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,     0,   300,   301,   302,     0,   303,   304,   305,
     306,   307,     0,   308,   309,     0,     0,     0,     0,   310,
     311,   312,   313,   314,   315,     0,     0,   316,   317,     0,
     318,     0,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,     0,     0,   329,   330,     0,     0,   331,
     332,   333,   334,   335,     0,     0,     0,     0,   337,     0,
       0,     0,   338,     0,   339,   340,   341,     0,   342,   343,
    4119,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   347,   348,     0,     0,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,     0,     0,
       0,     0,     0,   363,   364,     0,   365,     0,   366,   367,
     368,   369,   370,     0,   371,   372,   373,     0,     0,   374,
       0,     0,     0,   375,   376,   377,   378,   379,     0,     0,
     380,   381,   382,   383,   384,     0,   385,     0,     0,   387,
       0,   389,  -351,     0,   390,   391,   392,   393,   394,   395,
     396,   397,     0,     0,     0,   399,     0,     0,   401,   402,
     403,  4120,   404,     0,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   414,   415,     0,   416,     0,     0,
       0,     0,   418,   419,   420,     0,     0,     0,     0,   422,
       0,     0,     0,   423,     0,     0,   425,     0,   427,     0,
     428,     0,     0,   431,   432,     0,     0,     0,     0,     0,
     433,   434,   435,     0,   436,   437,     0,   438,     0,     0,
     439,     0,   440,     0,   441,     0,   443,   444,   445,   446,
       0,     0,     0,     0,   448,     0,   449,   450,   451,   452,
     453,   454,     0,     0,   455,   456,   457,   458,     0,   459,
     460,     0,     0,   461,   462,   463,   464,     0,     0,   465,
     466,     0,   467,   468,   469,   470,     0,     0,     0,     0,
       0,   471,   472,     0,     0,     0,     0,   474,   475,   476,
       0,   477,   478,     0,   479,   480,     0,     0,     0,     0,
       0,   483,     0,     0,   484,     0,     0,     0,   486,   487,
       0,     0,     0,     0,     0,     0,   488,     0,     0,   489,
       0,     0,     0,   490,   491,   492,   493,   494,     0,     0,
    -351,     0,     0,     0,   495,     0,     0,   497,     0,   499,
       0,   136,   500,   137,   138,   139,   140,   141,     0,     0,
     142,     0,     0,     0,   143,     0,     0,     0,     0,   145,
     146,   147,   148,   149,     0,     0,  -396,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,     0,     0,     0,     0,   160,  4113,     0,
     161,   162,     0,   163,     0,     0,     0,     0,   166,   167,
     168,  4114,   170,   171,     0,   172,   173,     0,   174,   175,
       0,   177,     0,   179,   180,   181,   182,     0,   183,   184,
       0,   185,   186,   187,     0,   189,     0,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,     0,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,     0,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,  -389,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,     0,     0,     0,   227,   228,   229,   230,   231,     0,
       0,   232,   233,  4115,   234,   235,   236,   237,     0,     0,
       0,     0,     0,     0,     0,     0,   241,     0,   242,     0,
     243,     0,   244,   245,   246,   247,     0,   248,     0,   249,
       0,     0,     0,     0,   251,     0,     0,     0,     0,     0,
     254,     0,     0,     0,   255,   256,   257,   258,  4116,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,     0,     0,     0,     0,   265,     0,     0,     0,   266,
     267,     0,   268,   269,  4117,     0,     0,   270,     0,     0,
       0,   272,     0,     0,   273,  4118,     0,   274,   275,     0,
       0,     0,     0,     0,   276,   277,     0,   278,     0,   279,
       0,   280,   281,     0,     0,     0,     0,  -351,     0,     0,
     282,     0,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,     0,
     300,   301,   302,     0,   303,   304,   305,   306,   307,     0,
     308,   309,     0,     0,     0,     0,   310,   311,   312,   313,
     314,   315,     0,     0,   316,   317,     0,   318,     0,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
       0,     0,   329,   330,     0,     0,   331,   332,   333,   334,
     335,     0,     0,     0,     0,   337,     0,     0,     0,   338,
       0,   339,   340,   341,     0,   342,   343,  4119,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     347,   348,     0,     0,   350,     0,   351,   352,   353,   354,
     355,   356,   357,   358,   359,     0,     0,     0,     0,     0,
     363,   364,     0,   365,     0,   366,   367,   368,   369,   370,
       0,   371,   372,   373,     0,     0,   374,     0,     0,     0,
     375,   376,   377,   378,   379,     0,     0,   380,   381,   382,
     383,   384,     0,   385,     0,     0,   387,     0,   389,  -351,
       0,   390,   391,   392,   393,   394,   395,   396,   397,     0,
       0,     0,   399,     0,     0,   401,   402,   403,  4120,   404,
       0,     0,     0,   406,   407,   408,   409,   410,   411,   412,
       0,   414,   415,     0,   416,     0,     0,     0,     0,   418,
     419,   420,     0,     0,     0,     0,   422,     0,     0,     0,
     423,     0,     0,   425,     0,   427,     0,   428,     0,     0,
     431,   432,     0,     0,     0,     0,     0,   433,   434,   435,
       0,   436,   437,     0,   438,     0,     0,   439,     0,   440,
       0,   441,     0,   443,   444,   445,   446,     0,     0,     0,
       0,   448,     0,   449,   450,   451,   452,   453,   454,     0,
       0,   455,   456,   457,   458,     0,   459,   460,     0,     0,
     461,   462,   463,   464,     0,     0,   465,   466,     0,   467,
     468,   469,   470,     0,     0,     0,     0,     0,   471,   472,
       0,     0,     0,     0,   474,   475,   476,     0,   477,   478,
       0,   479,   480,     0,     0,     0,     0,     0,   483,     0,
       0,   484,     0,     0,     0,   486,   487,     0,     0,     0,
       0,     0,     0,   488,     0,     0,   489,     0,     0,     0,
     490,   491,   492,   493,   494,     0,     0,  -351,     0,     0,
       0,   495,     0,     0,   497,     0,   499,     0,   136,   500,
     137,   138,   139,   140,   141,     0,     0,   142,     0,     0,
       0,   143,     0,     0,     0,     0,   145,   146,   147,   148,
     149,     0,     0,  -396,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
       0,     0,     0,     0,   160,  4113,     0,   161,   162,     0,
     163,     0,     0,     0,     0,   166,   167,   168,  4114,   170,
     171,     0,   172,   173,     0,   174,   175,     0,   177,     0,
     179,   180,   181,   182,     0,   183,   184,     0,   185,   186,
     187,     0,   189,     0,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,     0,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,     0,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,  4529,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,     0,     0,
       0,   227,   228,   229,   230,   231,     0,     0,   232,   233,
    4115,   234,   235,   236,   237,     0,     0,     0,     0,     0,
       0,     0,     0,   241,     0,   242,     0,   243,     0,   244,
     245,   246,   247,     0,   248,     0,   249,     0,     0,     0,
       0,   251,     0,     0,     0,     0,     0,   254,     0,     0,
       0,   255,   256,   257,   258,  4116,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,     0,     0,
       0,     0,   265,     0,     0,     0,   266,   267,     0,   268,
     269,  4117,     0,     0,   270,     0,     0,     0,   272,     0,
       0,   273,  4118,     0,   274,   275,     0,     0,     0,     0,
       0,   276,   277,     0,   278,     0,   279,     0,   280,   281,
       0,     0,     0,     0,  -351,     0,     0,   282,     0,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,     0,   300,   301,   302,
       0,   303,   304,   305,   306,   307,     0,   308,   309,     0,
       0,     0,     0,   310,   311,   312,   313,   314,   315,     0,
       0,   316,   317,     0,   318,     0,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,     0,     0,   329,
     330,     0,     0,   331,   332,   333,   334,   335,     0,     0,
       0,     0,   337,     0,     0,     0,   338,     0,   339,   340,
     341,     0,   342,   343,  4119,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   347,   348,     0,
       0,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,     0,     0,     0,     0,     0,   363,   364,     0,
     365,     0,   366,   367,   368,   369,   370,     0,   371,   372,
     373,     0,     0,   374,     0,     0,     0,   375,   376,   377,
     378,   379,     0,     0,   380,   381,   382,   383,   384,     0,
     385,     0,     0,   387,     0,   389,  -351,     0,   390,   391,
     392,   393,   394,   395,   396,   397,     0,     0,     0,   399,
       0,     0,   401,   402,   403,  4120,   404,     0,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   414,   415,
       0,   416,     0,     0,     0,     0,   418,   419,   420,     0,
       0,     0,     0,   422,     0,     0,     0,   423,     0,     0,
     425,     0,   427,     0,   428,     0,     0,   431,   432,     0,
       0,     0,     0,     0,   433,   434,   435,     0,   436,   437,
       0,   438,     0,     0,   439,     0,   440,     0,   441,     0,
     443,   444,   445,   446,     0,     0,     0,     0,   448,     0,
     449,   450,   451,   452,   453,   454,     0,     0,   455,   456,
     457,   458,     0,   459,   460,     0,     0,   461,   462,   463,
     464,     0,     0,   465,   466,     0,   467,   468,   469,   470,
       0,     0,     0,     0,     0,   471,   472,     0,     0,     0,
       0,   474,   475,   476,     0,   477,   478,     0,   479,   480,
       0,     0,     0,     0,     0,   483,     0,     0,   484,     0,
       0,     0,   486,   487,     0,     0,     0,     0,     0,     0,
     488,     0,     0,   489,     0,     0,     0,   490,   491,   492,
     493,   494,     0,     0,  -351,     0,     0,     0,   495,     0,
       0,   497,     0,   499,     0,   136,   500,   137,   138,   139,
     140,   141,     0,     0,   142,     0,     0,     0,   143,     0,
       0,     0,     0,   145,   146,   147,   148,   149,     0,     0,
    -396,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,     0,     0,     0,
       0,   160,  4113,     0,   161,   162,     0,   163,     0,     0,
       0,     0,   166,   167,   168,  4114,   170,   171,     0,   172,
     173,     0,   174,   175,     0,   177,     0,   179,   180,   181,
     182,     0,   183,   184,     0,   185,   186,   187,     0,   189,
       0,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,     0,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,     0,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,  4564,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,     0,     0,     0,   227,   228,
     229,   230,   231,     0,     0,   232,   233,  4115,   234,   235,
     236,   237,     0,     0,     0,     0,     0,     0,     0,     0,
     241,     0,   242,     0,   243,     0,   244,   245,   246,   247,
       0,   248,     0,   249,     0,     0,     0,     0,   251,     0,
       0,     0,     0,     0,   254,     0,     0,     0,   255,   256,
     257,   258,  4116,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,   265,
       0,     0,     0,   266,   267,     0,   268,   269,  4117,     0,
       0,   270,     0,     0,     0,   272,     0,     0,   273,  4118,
       0,   274,   275,     0,     0,     0,     0,     0,   276,   277,
       0,   278,     0,   279,     0,   280,   281,     0,     0,     0,
       0,  -351,     0,     0,   282,     0,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,     0,   300,   301,   302,     0,   303,   304,
     305,   306,   307,     0,   308,   309,     0,     0,     0,     0,
     310,   311,   312,   313,   314,   315,     0,     0,   316,   317,
       0,   318,     0,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,     0,     0,   329,   330,     0,     0,
     331,   332,   333,   334,   335,     0,     0,     0,     0,   337,
       0,     0,     0,   338,     0,   339,   340,   341,     0,   342,
     343,  4119,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   347,   348,     0,     0,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,     0,
       0,     0,     0,     0,   363,   364,     0,   365,     0,   366,
     367,   368,   369,   370,     0,   371,   372,   373,     0,     0,
     374,     0,     0,     0,   375,   376,   377,   378,   379,     0,
       0,   380,   381,   382,   383,   384,     0,   385,     0,     0,
     387,     0,   389,  -351,     0,   390,   391,   392,   393,   394,
     395,   396,   397,     0,     0,     0,   399,     0,     0,   401,
     402,   403,  4120,   404,     0,     0,     0,   406,   407,   408,
     409,   410,   411,   412,     0,   414,   415,     0,   416,     0,
       0,     0,     0,   418,   419,   420,     0,     0,     0,     0,
     422,     0,     0,     0,   423,     0,     0,   425,     0,   427,
       0,   428,     0,     0,   431,   432,     0,     0,     0,     0,
       0,   433,   434,   435,     0,   436,   437,     0,   438,     0,
       0,   439,     0,   440,     0,   441,     0,   443,   444,   445,
     446,     0,     0,     0,     0,   448,     0,   449,   450,   451,
     452,   453,   454,     0,     0,   455,   456,   457,   458,     0,
     459,   460,     0,     0,   461,   462,   463,   464,     0,     0,
     465,   466,     0,   467,   468,   469,   470,     0,     0,     0,
       0,     0,   471,   472,     0,     0,     0,     0,   474,   475,
     476,     0,   477,   478,     0,   479,   480,     0,     0,     0,
       0,     0,   483,     0,     0,   484,     0,     0,     0,   486,
     487,     0,     0,     0,     0,     0,     0,   488,     0,     0,
     489,     0,     0,     0,   490,   491,   492,   493,   494,     0,
       0,  -351,     0,     0,     0,   495,     0,     0,   497,     0,
     499,     0,   136,   500,   137,   138,   139,   140,   141,     0,
       0,   142,     0,     0,     0,   143,     0,     0,     0,     0,
     145,   146,   147,   148,   149,     0,     0,  -396,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,     0,     0,     0,     0,   160,  4113,
       0,   161,   162,     0,   163,     0,     0,     0,     0,   166,
     167,   168,  4114,   170,   171,     0,   172,   173,     0,   174,
     175,     0,   177,     0,   179,   180,   181,   182,     0,   183,
     184,     0,   185,   186,   187,     0,   189,     0,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,     0,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,     0,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,  -370,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,     0,     0,     0,   227,   228,   229,   230,   231,
       0,     0,   232,   233,  4115,   234,   235,   236,   237,     0,
       0,     0,     0,     0,     0,     0,     0,   241,     0,   242,
       0,   243,     0,   244,   245,   246,   247,     0,   248,     0,
     249,     0,     0,     0,     0,   251,     0,     0,     0,     0,
       0,   254,     0,     0,     0,   255,   256,   257,   258,  4116,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,     0,     0,     0,     0,   265,     0,     0,     0,
     266,   267,     0,   268,   269,  4117,     0,     0,   270,     0,
       0,     0,   272,     0,     0,   273,  4118,     0,   274,   275,
       0,     0,     0,     0,     0,   276,   277,     0,   278,     0,
     279,     0,   280,   281,     0,     0,     0,     0,  -351,     0,
       0,   282,     0,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
       0,   300,   301,   302,     0,   303,   304,   305,   306,   307,
       0,   308,   309,     0,     0,     0,     0,   310,   311,   312,
     313,   314,   315,     0,     0,   316,   317,     0,   318,     0,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,     0,     0,   329,   330,     0,     0,   331,   332,   333,
     334,   335,     0,     0,     0,     0,   337,     0,     0,     0,
     338,     0,   339,   340,   341,     0,   342,   343,  4119,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   347,   348,     0,     0,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,     0,     0,     0,     0,
       0,   363,   364,     0,   365,     0,   366,   367,   368,   369,
     370,     0,   371,   372,   373,     0,     0,   374,     0,     0,
       0,   375,   376,   377,   378,   379,     0,     0,   380,   381,
     382,   383,   384,     0,   385,     0,     0,   387,     0,   389,
    -351,     0,   390,   391,   392,   393,   394,   395,   396,   397,
       0,     0,     0,   399,     0,     0,   401,   402,   403,  4120,
     404,     0,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   414,   415,     0,   416,     0,     0,     0,     0,
     418,   419,   420,     0,     0,     0,     0,   422,     0,     0,
       0,   423,     0,     0,   425,     0,   427,     0,   428,     0,
       0,   431,   432,     0,     0,     0,     0,     0,   433,   434,
     435,     0,   436,   437,     0,   438,     0,     0,   439,     0,
     440,     0,   441,     0,   443,   444,   445,   446,     0,     0,
       0,     0,   448,     0,   449,   450,   451,   452,   453,   454,
       0,     0,   455,   456,   457,   458,     0,   459,   460,     0,
       0,   461,   462,   463,   464,     0,     0,   465,   466,     0,
     467,   468,   469,   470,     0,     0,     0,     0,     0,   471,
     472,     0,     0,     0,     0,   474,   475,   476,     0,   477,
     478,     0,   479,   480,     0,     0,     0,     0,     0,   483,
       0,     0,   484,     0,     0,     0,   486,   487,     0,     0,
       0,     0,     0,     0,   488,     0,     0,   489,     0,     0,
       0,   490,   491,   492,   493,   494,     0,     0,  -351,     0,
       0,     0,   495,     0,     0,   497,     0,   499,     0,   136,
     500,   137,   138,   139,   140,   141,     0,     0,   142,     0,
       0,     0,   143,     0,     0,     0,     0,   145,   146,   147,
     148,   149,     0,     0,  -396,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,     0,     0,     0,     0,   160,  4113,     0,   161,   162,
       0,   163,     0,     0,     0,     0,   166,   167,   168,  4114,
     170,   171,     0,   172,   173,     0,   174,   175,     0,   177,
       0,   179,   180,   181,   182,     0,   183,   184,     0,   185,
     186,   187,     0,   189,     0,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
       0,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,     0,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,     0,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,     0,
       0,     0,   227,   228,   229,   230,   231,     0,     0,   232,
     233,  4115,   234,   235,   236,   237,     0,     0,     0,     0,
       0,     0,     0,     0,   241,     0,   242,     0,   243,     0,
     244,   245,   246,   247,     0,   248,     0,   249,     0,     0,
       0,     0,   251,     0,     0,     0,     0,     0,   254,     0,
       0,     0,   255,   256,   257,   258,  4116,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,     0,
       0,     0,     0,   265,     0,     0,     0,   266,   267,     0,
     268,   269,  4117,     0,     0,   270,     0,     0,     0,   272,
       0,     0,   273,  4118,     0,   274,   275,     0,     0,     0,
       0,     0,   276,   277,     0,   278,     0,   279,     0,   280,
     281,     0,     0,     0,     0,  -351,     0,     0,   282,     0,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,     0,   300,   301,
     302,     0,   303,   304,   305,   306,   307,     0,   308,   309,
       0,     0,     0,     0,   310,   311,   312,   313,   314,   315,
       0,     0,   316,   317,     0,   318,     0,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,     0,     0,
     329,   330,     0,     0,   331,   332,   333,   334,   335,     0,
       0,     0,     0,   337,     0,     0,     0,   338,     0,   339,
     340,   341,     0,   342,   343,  4119,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   347,   348,
       0,     0,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,     0,     0,     0,     0,     0,   363,   364,
       0,   365,     0,   366,   367,   368,   369,   370,     0,   371,
     372,   373,     0,     0,   374,     0,     0,     0,   375,   376,
     377,   378,   379,     0,     0,   380,   381,   382,   383,   384,
       0,   385,     0,     0,   387,     0,   389,  -351,     0,   390,
     391,   392,   393,   394,   395,   396,   397,     0,     0,     0,
     399,     0,     0,   401,   402,   403,  4120,   404,     0,     0,
       0,   406,   407,   408,   409,   410,   411,   412,     0,   414,
     415,     0,   416,     0,     0,     0,     0,   418,   419,   420,
       0,     0,     0,     0,   422,     0,     0,     0,   423,     0,
       0,   425,     0,   427,     0,   428,     0,     0,   431,   432,
       0,     0,     0,     0,     0,   433,   434,   435,     0,   436,
     437,     0,   438,     0,     0,   439,     0,   440,     0,   441,
       0,   443,   444,   445,   446,     0,     0,     0,     0,   448,
       0,   449,   450,   451,   452,   453,   454,     0,     0,   455,
     456,   457,   458,     0,   459,   460,     0,     0,   461,   462,
     463,   464,     0,     0,   465,   466,     0,   467,   468,   469,
     470,     0,     0,     0,     0,     0,   471,   472,     0,     0,
       0,     0,   474,   475,   476,     0,   477,   478,     0,   479,
     480,     0,     0,     0,     0,     0,   483,     0,     0,   484,
       0,     0,     0,   486,   487,     0,     0,     0,     0,     0,
       0,   488,     0,     0,   489,     0,     0,     0,   490,   491,
     492,   493,   494,     0,     0,  -351,     0,     0,     0,   495,
       0,     0,   497,     0,   499,     0,   136,   500,   137,   138,
     139,   140,   141,     0,     0,   142,     0,     0,     0,   143,
       0,     0,     0,     0,   145,   146,   147,   148,   149,     0,
       0,  -396,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,     0,     0,
       0,     0,   160,  4113,     0,   161,   162,     0,   163,     0,
       0,     0,     0,   166,   167,   168,  4114,   170,   171,     0,
     172,   173,     0,   174,   175,     0,   177,     0,   179,   180,
     181,   182,     0,   183,   184,     0,   185,   186,   187,     0,
     189,     0,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,     0,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,     0,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,     0,     0,     0,   227,
     228,   229,   230,   231,     0,     0,   232,   233,  4115,   234,
     235,   236,   237,     0,     0,     0,     0,     0,     0,     0,
       0,   241,     0,   242,     0,   243,     0,   244,   245,   246,
     247,     0,   248,     0,   249,     0,     0,     0,     0,   251,
       0,     0,     0,     0,     0,   254,     0,     0,     0,   255,
     256,   257,   258,  4116,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,     0,     0,     0,     0,
     265,     0,     0,     0,   266,   267,     0,   268,   269,  4117,
       0,     0,   270,     0,     0,     0,   272,     0,     0,   273,
    4118,     0,   274,   275,     0,     0,     0,     0,     0,   276,
     277,     0,   278,     0,   279,     0,   280,   281,     0,     0,
       0,     0,  -351,     0,     0,   282,     0,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,     0,   300,   301,   302,     0,   303,
     304,   305,   306,   307,     0,   308,   309,     0,     0,     0,
       0,   310,   311,   312,   313,   314,   315,     0,     0,   316,
     317,     0,   318,     0,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,     0,     0,   329,   330,     0,
       0,   331,   332,   333,   334,   335,     0,     0,     0,     0,
     337,     0,     0,     0,   338,     0,   339,   340,   341,     0,
     342,   343,  4119,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   347,   348,     0,     0,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
       0,     0,     0,     0,     0,   363,   364,     0,   365,     0,
     366,   367,   368,   369,   370,     0,   371,   372,   373,     0,
       0,   374,     0,     0,     0,   375,   376,   377,   378,   379,
       0,     0,   380,   381,   382,   383,   384,     0,   385,     0,
       0,   387,     0,   389,  -351,     0,   390,   391,   392,   393,
     394,   395,   396,   397,     0,     0,     0,   399,     0,     0,
     401,   402,   403,  4120,   404,     0,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   414,   415,     0,   416,
       0,     0,     0,     0,   418,   419,   420,     0,     0,     0,
       0,   422,     0,     0,     0,   423,     0,     0,   425,     0,
     427,     0,   428,     0,     0,   431,   432,     0,     0,     0,
       0,     0,   433,   434,   435,     0,   436,   437,     0,   438,
       0,     0,   439,     0,   440,     0,   441,     0,   443,   444,
     445,   446,     0,     0,     0,     0,   448,     0,   449,   450,
     451,   452,   453,   454,     0,     0,   455,   456,   457,   458,
       0,   459,   460,     0,     0,   461,   462,   463,   464,     0,
       0,   465,   466,     0,   467,   468,   469,   470,     0,     0,
       0,     0,     0,   471,   472,     0,     0,     0,     0,   474,
     475,   476,     0,   477,   478,     0,   479,   480,     0,     0,
       0,     0,     0,   483,     0,     0,  4443,     0,     0,     0,
     486,   487,     0,     0,     0,     0,     0,     0,   488,     0,
       0,   489,     0,     0,     0,   490,   491,   492,   493,   494,
       0,     0,  -351,     0,     0,     0,   495,     0,     0,   497,
       0,   499,     0,   136,   500,   137,   138,   139,   140,   141,
       0,     0,   142,     0,     0,     0,   143,     0,     0,     0,
       0,   145,   146,   147,   148,   149,     0,     0,     0,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,     0,     0,     0,     0,   160,
       0,     0,   161,   162,     0,   163,     0,     0,     0,     0,
     166,   167,   168,     0,   170,   171,     0,   172,   173,     0,
     174,   175,     0,   177,     0,   179,   180,   181,   182,     0,
     183,   184,     0,   185,   186,   187,     0,   189,     0,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,     0,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,     0,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,     0,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,     0,     0,     0,   227,   228,   229,   230,
     231,     0,     0,   232,   233,     0,   234,   235,   236,   237,
       0,     0,     0,     0,     0,     0,     0,     0,   241,     0,
     242,     0,   243,     0,   244,   245,   246,   247,     0,   248,
       0,   249,     0,     0,     0,     0,   251,     0,     0,     0,
       0,     0,   254,     0,     0,     0,   255,   256,   257,   258,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,   265,     0,     0,
       0,   266,   267,     0,   268,   269,     0,     0,     0,   270,
       0,     0,     0,   272,     0,     0,   273,     0,     0,   274,
     275,     0,     0,     0,     0,     0,   276,   277,     0,   278,
       0,   279,     0,   280,   281,     0,     0,     0,     0,     0,
       0,     0,   282,     0,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,     0,   300,   301,   302,     0,   303,   304,   305,   306,
     307,     0,   308,   309,     0,     0,     0,     0,   310,   311,
     312,   313,   314,   315,     0,     0,   316,   317,     0,   318,
       0,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,     0,     0,   329,   330,     0,     0,   331,   332,
     333,   334,   335,     0,     0,     0,     0,   337,     0,     0,
       0,   338,     0,   339,   340,   341,     0,   342,   343,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   347,   348,     0,     0,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,     0,     0,     0,
       0,     0,   363,   364,     0,   365,     0,   366,   367,   368,
     369,   370,     0,   371,   372,   373,     0,     0,   374,     0,
       0,     0,   375,   376,   377,   378,   379,     0,     0,   380,
     381,   382,   383,   384,     0,   385,     0,     0,   387,     0,
     389,     0,     0,   390,   391,   392,   393,   394,   395,   396,
     397,     0,     0,     0,   399,     0,     0,   401,   402,   403,
       0,   404,     0,     0,     0,   406,   407,   408,   409,   410,
     411,   412,     0,   414,   415,     0,   416,     0,     0,     0,
       0,   418,   419,   420,     0,     0,     0,     0,   422,     0,
       0,     0,   423,     0,     0,   425,     0,   427,     0,   428,
       0,     0,   431,   432,     0,     0,     0,     0,     0,   433,
     434,   435,     0,   436,   437,     0,   438,     0,     0,   439,
       0,   440,     0,   441,     0,   443,   444,   445,   446,     0,
       0,     0,     0,   448,     0,   449,   450,   451,   452,   453,
     454,     0,     0,   455,   456,   457,   458,     0,   459,   460,
       0,     0,   461,   462,   463,   464,     0,     0,   465,   466,
       0,   467,   468,   469,   470,     0,     0,     0,     0,     0,
     471,   472,     0,     0,     0,     0,   474,   475,   476,     0,
     477,   478,     0,   479,   480,     0,     0,     0,     0,     0,
     483,     0,     0,   484,     0,     0,     0,   486,   487,     0,
       0,     0,     0,     0,     0,   488,     0,     0,   489,     0,
       0,     0,   490,   491,   492,   493,   494,     0,     0,     0,
       0,     0,     0,   495,     0,     0,   497,     0,   499,     0,
       0,   500
};

static const yytype_int16 yycheck[] =
{
       6,   653,   589,   588,   589,   975,   868,   121,   971,   895,
     896,  1361,  1368,    19,   976,     4,  1068,    23,  1526,   905,
    1661,    20,   720,  1162,   913,   998,    32,   911,  1258,   998,
    1162,    30,  2438,    39,     6,   624,    42,    36,  1546,  1109,
      46,  1582,   680,  1306,  1397,  1899,   935,    53,  1951,   638,
    1062,  1063,   936,  1258,  1185,  2726,  1583,  1132,  2237,  2517,
    2312,  1192,  1099,   980,  1509,  2317,  1462,   998,   980,  1312,
    1511,  1867,  2555,  3034,  1515,  1937,  2638,  1585,   649,   650,
     531,  2406,  3047,  2053,  2860,  1526,  2146,  2184,    94,  2152,
    2627,  2517,  2548,  2270,  2656,  2657,  2270,  1538,  3074,  1501,
    2556,  3256,  1491,  1501,  3146,    23,    19,  1505,  2112,  1507,
     116,  2112,   118,   667,   120,   121,   122,   123,  1193,  1194,
    1965,  3737,  1197,  1198,  1199,  1200,  2992,  1202,  1203,  1204,
    1205,  1206,  1207,  1208,  1209,  3741,   788,    17,   776,   777,
     778,  1425,  2122,  1501,  3051,  3052,   118,  1505,   120,  1507,
     955,   789,  3228,    50,    33,  1568,    21,  3188,    24,  1443,
    3191,    19,  2699,  3380,    46,  3781,  3508,  1451,  1452,  2125,
    3381,  1946,    20,  3039,  1231,  2259,    94,    70,    17,  3210,
    2086,    16,    17,  2656,  2657,  3216,     9,    75,   145,    67,
    2660,    16,    17,    58,    59,   174,   171,   158,    62,   125,
    3027,  2831,  2104,   145,   151,   123,    29,   145,  2095,   118,
    2402,  2769,    35,  1513,  1514,    11,  1516,    16,    17,  1519,
    1520,    59,    19,  1523,   229,    29,    16,    17,  1528,   818,
     214,  2674,   139,  1533,  1534,  1535,  1536,  1537,   151,    57,
    1642,  1541,   155,  1543,  1642,  2132,   371,  2134,   194,  1549,
    1550,  1551,  1552,    65,  2141,  1555,    61,  1557,    98,   316,
     849,  2823,  2824,    57,   937,   362,  2270,    74,  4019,  2270,
    2157,   151,   104,  3304,   128,  4154,   223,  2164,   126,    33,
    4107,    50,    16,    17,  1642,   249,   276,   120,   155,   120,
    2177,  2178,  2179,   366,   223,    55,  2183,   155,  1074,  1075,
    1076,    68,    35,    51,    42,   106,   120,    35,   131,   246,
    1086,   421,  3575,    61,   461,    16,    17,  3933,  3294,    74,
     151,   188,    16,    17,   453,    19,   122,   223,   480,   238,
    2217,   392,  2219,  2220,   282,    16,    17,   151,  2225,  2226,
    2955,  1117,   191,   120,  1120,    16,    17,  2234,  2235,   339,
    2823,  2824,  2239,   171,   359,  2588,   117,   175,   155,    16,
      17,   363,    74,   229,    12,  1141,  1142,    16,    17,  1145,
     188,   530,   123,   426,   151,    20,    40,   171,  2554,    21,
    2959,   175,   361,   247,    21,    12,   282,  1163,  1164,    41,
     559,    33,    16,    17,   188,   498,    33,    16,    17,   271,
    1098,   191,  4153,   517,   799,    47,   208,  3518,   435,   524,
      47,    21,   265,   590,  1112,  4021,    58,    59,   519,   559,
      67,    58,    59,    33,   282,  2862,   227,    16,    17,    64,
     227,     8,   208,   219,   125,   221,  1007,    47,   539,    80,
     227,   555,   417,   558,   251,   356,   312,   622,    58,    59,
     252,   610,    29,    16,    17,   252,    24,   191,    16,    17,
     124,    20,   408,   107,  3619,   252,   110,   862,   645,   572,
     472,   646,    45,   421,   151,  3054,   252,   644,   211,   188,
     132,   126,   651,   211,   421,   652,  1040,   135,   360,    16,
      17,    78,   644,   404,   521,   459,   251,   444,   559,    16,
      17,  1463,   320,   352,  1390,   652,    16,    17,   135,  2396,
     191,   517,   622,   519,   423,   444,  3481,   646,   279,    16,
      17,   417,    19,   271,   377,  3556,   320,   652,   361,   535,
     535,   282,   585,   539,  3565,  1419,  1188,    70,  1422,   251,
     530,   376,   233,  1427,   379,   551,   530,  1847,   645,   555,
     304,   557,  3418,  3419,  3420,    16,    17,  3588,  1196,  1915,
    1258,   458,  3593,   421,   570,    16,    17,   126,   262,  1453,
    1454,   264,  4451,   646,  1491,  1213,  3839,   376,  3061,  1491,
     379,   488,   588,   379,  2681,   153,   376,   644,   265,   379,
     596,  3457,  3458,  3459,   662,   663,  3154,   576,   358,   417,
     155,   362,  2143,  4430,  4431,  2702,   344,   553,   614,   421,
     615,   378,  2153,   592,  2711,   463,  2124,  2125,   624,   155,
     626,  3448,   489,   417,   429,   155,  2723,  2168,   537,  1560,
    1081,  1082,   638,   639,  2731,   208,   140,  3267,   644,  2736,
     646,   282,   376,   649,   650,   379,   155,    82,   654,   655,
    2003,  1102,   530,   659,  2831,   616,  2660,  2831,  3128,  2660,
    1111,   229,   619,   669,   670,   671,  1237,   639,  4274,   675,
     596,   646,  1123,  1124,  1125,   376,   540,   619,   379,   627,
    1131,   619,   376,   523,  2086,   379,    16,    17,  2086,   458,
      16,    17,  3135,  2673,   582,   376,  2676,  2677,   379,    16,
      17,   815,  2547,   650,  3266,   376,  2104,  1937,   379,  2065,
    2112,  2486,    16,    17,   720,  2671,  2129,  3872,  3873,   376,
    2133,   544,   379,   588,  1641,  3942,   644,   376,  2086,  1641,
     379,   570,  1937,  2639,  2621,  2148,  2149,   650,  1309,  3950,
     622,  2825,   622,   566,   312,  3962,  2104,  1822,  2161,   646,
     573,   644,   376,  1324,  2608,   379,  2658,   376,  1833,  2172,
     379,  1836,  4104,  2047,  2956,   644,   570,  2067,  2068,   627,
     650,   609,    24,   570,   597,   781,  1449,   783,  2191,  1816,
     646,   895,   614,  4389,  2084,   899,   900,   376,  1845,   637,
     379,   359,  3463,  3266,    16,    17,   631,  1386,   912,  4550,
    3876,  2101,  2102,   809,   810,   811,   631,   813,   814,   815,
     664,   817,   818,   376,   649,   622,   379,   823,   376,   650,
     581,   379,  1627,   829,  3439,  3283,   559,  2831,   646,   630,
    2831,   559,   631,   839,  1423,  1910,   650,  3879,   810,  4455,
    2140,   631,   814,   849,   850,   817,   645,   646,   854,   376,
    3287,  1405,   379,  3086,   843,  2155,   646,  2259,   522,   376,
     974,  2259,   379,   498,  2253,  3480,   376,   579,  2270,   379,
      16,    17,  2270,   650,  3985,    16,    17,   410,   542,   376,
     886,  3747,   379,   530,    16,    17,  3062,  3063,   475,   895,
     602,    16,    17,   899,   900,  1671,  2783,   631,   192,  2295,
     473,  2259,    16,    17,   463,   596,   912,   571,    16,    17,
    1495,   645,  2270,   622,     8,   376,   194,  2558,   379,   563,
      12,   839,   566,  3460,    11,   376,   304,   620,   379,   117,
     631,   602,   850,   377,   489,  3959,   854,   631,  1006,   141,
    3905,  2443,   185,   620,   645,   646,   588,  3923,   281,   955,
     631,   588,   646,   489,  2254,  2255,  2256,  2257,  2485,   489,
     631,    16,    17,    16,    17,  1741,   186,   535,   974,  1745,
     976,   608,   609,   650,   631,   646,   480,   229,   588,   186,
     489,   416,   631,    61,  1573,   389,  3893,  3445,  3471,   646,
    1058,   695,  3475,  1769,   182,  3971,  4151,   646,  3963,   822,
     370,  1007,   612,   223,    16,    17,   136,   631,   265,    16,
      17,  4627,   631,    16,    17,  3471,   223,   550,   155,  3475,
    2874,   645,  2876,  3449,  2163,   151,   645,   646,   370,    24,
     227,    31,    16,    17,   644,  1041,  1042,  1043,   201,   359,
     573,  1739,   631,   135,   625,  1051,   376,   615,    10,   379,
     376,   180,   171,   379,  1060,   148,   645,   646,  1064,   376,
     312,  1175,   379,   767,   480,   389,   159,   445,   631,   559,
    1042,  1043,   376,   631,   122,   379,   559,  4108,   646,  4110,
     367,  3144,   645,   646,    16,    17,   180,   645,   646,   390,
    3267,   279,  1098,  3267,   388,    16,    17,   652,  1212,  3770,
    2954,  3161,   122,  1989,   631,   392,  1112,   359,   271,   187,
     443,  3887,    16,    17,   631,   134,   652,  3788,   645,   646,
     377,   631,   652,  2009,  3128,   638,   255,  3128,   645,   646,
     408,   171,   645,  3103,   631,   645,   646,   395,  3235,   265,
     644,  3466,  1060,   652,   648,  1259,  1064,   551,  3051,  3052,
      33,  2035,  3132,  2042,   376,   645,  1162,   379,   401,    16,
      17,   644,  2046,  2671,   246,  2049,  2050,  2894,   117,  1175,
     631,    16,    17,  2062,   362,  3037,    59,    16,    17,   381,
     631,    16,    17,    16,    17,   646,   655,   274,  4149,    16,
      17,   239,  2988,    16,    17,   646,  4220,  1835,  4222,  4160,
     162,  1315,   646,   497,   334,  2707,  1212,  4172,   231,    16,
      17,  1217,   355,   356,  2187,   535,  1222,   240,  2187,   239,
      16,    17,    16,    17,    16,    17,   322,   551,   644,   358,
     376,  1237,   194,   379,   229,   376,   120,  2639,   379,  1937,
     240,  2639,    16,    17,   376,  2297,  2754,   379,    16,    17,
     134,   376,  1258,  1259,   379,  2498,  2187,   627,  2660,  1848,
    2658,   136,   376,  3267,   264,   379,  3267,  2342,   376,  4117,
    4118,   379,   559,    16,    17,   553,  3759,  3760,   982,  1850,
     267,  2639,   375,   535,   188,   627,  2417,   474,   621,  1295,
    2703,  1297,    16,    17,  1300,   615,  1885,  3549,   417,   523,
    2658,   631,   321,  1309,  1222,   631,  2159,  2160,  2753,  1315,
      16,    17,  1301,  2754,   631,    24,   646,   312,  1324,  1325,
     646,   376,   485,   376,   379,  2609,   379,   631,   406,   646,
     279,    16,    17,   590,  1923,  1924,  2253,    16,    17,   421,
    2696,  2253,   646,   644,   813,    50,   498,  1353,    16,    17,
    1939,   344,   489,  2423,  2424,    16,    17,    16,    17,   382,
    4031,   491,   492,   615,   376,    74,  1372,   379,  4266,   376,
    2223,  1377,   379,   376,    12,   368,   379,   417,  2517,  2416,
    1386,   601,  1300,  1372,  1498,  2517,    16,    17,   153,  2426,
    1396,  1397,   376,   581,   601,   379,    16,    17,   553,   480,
    1406,  1407,  1408,  1409,  1410,  1411,    68,  1325,   644,   631,
    4081,   249,  1401,   362,  1420,  1421,  2772,  1423,    16,    17,
    1426,   162,   260,  2825,   646,   125,   395,  2825,  4099,  2831,
     430,  3889,   191,  2831,  1406,  1407,  1408,   321,  1410,  3293,
    1446,   665,   480,   304,   376,  2858,   408,   379,  3175,  1421,
     120,    16,    17,   194,  1426,   376,    16,    17,   379,   334,
      24,   557,   480,   172,   229,   558,  2822,  2825,    16,    17,
     289,   290,   376,  2831,   480,   379,  3003,  2873,   237,  3206,
    3207,   600,   469,    16,    17,   631,  3373,   583,   188,   132,
     631,  1409,  1498,  1411,   620,    16,    17,   135,   160,   631,
     646,   265,   480,   559,   147,   646,   631,   637,   638,   639,
     640,   641,   642,   591,   646,  1504,   579,   631,     0,   376,
     229,   646,   379,   631,   650,   136,  3368,   646,  1446,  2829,
    3372,   376,   646,   233,   379,   151,  4434,   376,   646,   602,
     379,   376,  3591,   376,   379,  3594,   379,    23,  1554,   376,
      16,    17,   379,   376,  2139,   416,   379,   403,   520,   204,
     600,   559,  1568,   644,  4025,  4023,   236,  1573,   231,   376,
    3822,  1577,   379,   644,  1580,  1581,   631,   240,   631,    71,
     376,   652,   376,   379,   376,   379,   358,   379,   644,   153,
    2479,   646,   123,   646,   359,   204,    16,    17,  4446,  4447,
     606,   607,   376,   312,   249,   379,   644,   188,   376,   602,
     648,   379,   574,   377,   433,   434,  3795,  3796,   377,   631,
      12,  1627,   645,  4521,   631,  4523,   644,   465,   631,  4300,
    4091,   117,   581,   376,   646,   389,   379,   498,   644,   646,
    1646,  1647,  1648,   646,   353,  4543,   644,   631,    12,    81,
     359,    33,   376,   358,   191,   379,    16,    17,  1664,  1577,
    1666,  3017,   646,  1581,   436,   229,   644,   408,   100,   122,
     376,   496,   153,   379,  4572,  4573,  1648,    59,    16,    17,
     350,   212,  3021,   155,   438,    16,    17,   163,   155,    16,
      17,   376,   162,   274,   379,   187,   182,   376,  2584,   631,
     379,    16,    17,   240,    62,    16,    17,   652,   376,    74,
     631,   379,    16,    17,   646,   376,   378,   376,   379,   382,
     379,    16,    17,   334,   645,   107,  3128,   631,   110,  3142,
    3617,  3070,   377,  1739,  1740,   227,   118,  1851,   570,   266,
     240,   645,   269,   135,   444,  2598,   376,  3160,   312,   379,
     117,   282,  3165,   458,   179,   421,   376,  4319,  4320,   379,
     252,   261,   637,   638,   639,   640,   641,   642,    17,   594,
     535,   135,    16,    17,   631,  3824,   442,   222,   376,   520,
     480,   379,  2420,   488,    16,    17,   631,   204,   645,   556,
      16,    17,   631,   279,  1800,   359,   631,   553,   631,  4402,
     645,   227,  4405,   227,   631,  3068,   645,  3037,   631,   634,
     645,   376,   645,   227,   379,   182,   376,   483,   645,   379,
      16,    17,   645,  2875,   631,   222,   535,    95,   376,    16,
      17,   379,  3037,   574,  1948,   631,  1842,   631,   645,   631,
     130,  2972,  1848,   376,  1850,  1851,   379,    16,    17,   645,
     615,   645,   219,   645,   221,   376,  1862,   631,   379,    16,
      17,  1867,   204,   631,   229,  3267,  1872,   188,  2319,  3267,
     191,   645,  1986,    24,    17,   125,   362,   645,   359,  1885,
     602,   646,  2333,  3022,   602,    16,    17,   371,   631,   247,
    3022,   418,   646,    16,    17,   191,   596,  1903,  3425,    46,
    4503,  1907,   645,   237,    16,    17,   615,   631,   607,  3267,
     376,  3452,   279,   379,   406,  2366,   488,  1923,  1924,  1925,
    1926,   645,   645,    74,   646,   631,  3780,   282,   646,   480,
     652,  1937,  1921,  1939,   652,   125,   638,   488,   188,   645,
     480,    74,  1948,   645,   644,  1951,   631,    58,    59,   650,
    1956,   155,   631,   274,  2592,   652,   376,    68,  1964,   379,
     645,   597,   230,   631,   346,   191,   645,   103,  3107,    39,
     631,   535,   631,  1979,  1980,  3107,    46,   645,  1984,   117,
    1986,   249,  2433,   233,   645,  1903,   645,   373,   353,  1907,
    3893,  1980,   260,   136,   359,   362,   354,  2003,   188,   187,
     550,   631,   153,   553,   520,  2590,  3362,  1925,  1926,    17,
    4416,   631,  2018,   645,   646,   645,   376,  3156,   644,   379,
     153,   172,   191,   444,  2013,   645,   162,   120,   639,   640,
     641,   642,     6,   631,    11,  3922,    12,  2151,   376,   645,
     646,   379,  2048,   233,   182,   376,  1964,   645,   379,   376,
     143,   615,   379,   644,   535,   606,   607,   550,   194,   644,
     553,   376,   427,   646,   379,   376,   631,   644,   379,   992,
     993,   631,   376,   211,   602,   379,   344,   644,   229,   559,
     645,   376,  2071,   631,   379,   645,   609,   644,   181,   612,
     644,  2080,  2081,   644,   652,   581,   229,   645,   631,   645,
     646,   644,  2091,  2092,  2093,  2094,   599,  2096,  2097,  2115,
     631,  1034,   645,   166,   496,   644,  2122,   645,   646,  2118,
     645,   646,  2128,  2129,   645,  3137,  3138,  2133,   136,  2135,
    2048,  2130,   376,   644,   615,   379,   644,  2136,   733,  3492,
    2146,   279,  2148,  2149,   376,  2151,  2152,   379,  2137,  2138,
     376,  3507,  2158,   379,  2268,  2161,   644,  2163,  2272,   135,
     755,   312,   368,  2162,   522,   631,  2172,  2173,  2167,   644,
     535,   644,  3034,   768,   769,  2174,  2175,  2166,  2184,   645,
     376,   103,   540,   379,   566,  2191,  2192,  1886,   644,   376,
    1889,   334,   379,  1892,   444,   644,   117,   465,  2312,   602,
      74,   644,   353,  2317,  3467,  3094,   644,   376,   359,  3098,
     379,   631,   594,  4294,   581,  4296,  3100,  4298,    95,   376,
     353,   586,   379,   223,   362,   645,   359,  3297,     6,  2218,
     480,   644,  2221,  2222,   644,  2224,   212,   644,  2227,  2228,
    2229,  2230,  2231,  2232,  2233,   376,   644,  2236,   379,  2238,
     615,  3321,  3322,   376,   444,  2173,   379,   645,   646,  3800,
     117,   182,  2268,   120,   376,   644,  2272,   379,   536,   644,
     628,   631,   408,   202,  3344,    12,  4026,  4027,    56,   153,
    2286,  2287,  2288,  2289,   153,   645,  2292,  3517,   645,   646,
     480,   213,   644,   631,   427,  2409,  4183,  4184,  4185,  4186,
     631,  2464,   503,  2466,   631,   644,  2312,   645,   644,  3177,
    3449,  2317,  3180,  3181,   645,    12,   631,  3449,   645,   644,
     631,   645,   646,    24,  2438,   182,   334,   631,   644,  3197,
     645,    30,   602,   603,   645,   605,   631,   607,   644,  3037,
      19,   645,   645,   646,    41,  3575,   596,  4234,   491,   492,
     645,  4101,  4102,   230,   211,   229,    16,    17,   279,   644,
     229,   139,   644,  2526,  2527,  2528,   645,   646,  2286,  2287,
    2288,   509,   249,    74,    48,   562,   276,    76,   644,   308,
     309,   649,   644,   260,   535,   314,   315,   631,   644,  2888,
      58,    59,    89,  2892,   644,    48,    93,    74,   135,   631,
     646,   645,   535,  2409,   644,   631,   596,   645,   646,   644,
      61,    88,   590,   645,  4164,   136,    95,   553,  4168,  2533,
      71,  3394,   279,  2429,  3393,   644,   645,    19,  2434,   644,
    3019,   644,  2438,    84,   644,   631,   645,   646,   574,   562,
    2429,   362,   644,   581,   631,   645,   646,   645,   646,   645,
     149,  2457,   153,   586,   644,   623,   624,  2463,  2464,  3044,
    2466,   383,   631,    11,   615,   645,   646,   344,   645,   646,
     392,   172,   151,   644,   631,   212,   155,   399,   614,   353,
     645,   646,   615,   491,   492,   359,  2492,   474,   645,   117,
     359,   368,   635,   636,   637,   638,   639,   640,   641,   642,
     631,   645,   646,    95,   644,   362,    46,   186,   631,   188,
     468,  2517,  2626,  2627,   645,  2521,  2967,   645,   646,   631,
    2526,  2527,  2528,   644,   117,   204,   644,  2533,   229,   644,
     209,   645,   646,  3603,   145,   146,   187,   644,   514,   515,
     644,   517,   193,   519,   223,  2463,  2464,   244,  2466,  4190,
     644,   230,    61,   427,   182,   103,  3442,   644,   237,   151,
     536,    35,    71,   155,   645,   646,    95,   174,  4076,  4077,
     249,   645,   646,   310,   122,    84,   227,   254,   356,   644,
     502,   260,   644,   211,  2590,  2699,   265,   644,   465,   182,
     644,   115,   644,   551,  3483,   274,   188,  3736,   556,   645,
     646,   252,   645,   646,  3736,    31,  3658,   644,  2526,  2527,
    2528,   312,   204,   334,   645,   646,   644,   209,   211,  3505,
    2626,  2627,   117,   644,   321,   120,   644,   635,   636,   637,
     638,   639,   640,   641,   642,   644,   110,   644,   230,   644,
    3779,   599,   420,   117,   422,   237,   194,  3779,   645,   646,
     117,   279,   353,   120,   644,   332,   614,   249,   359,   536,
     581,   535,   645,   646,   644,   344,   535,  2673,   260,   644,
    2676,  2677,  3171,   265,   644,  2681,   644,   599,   187,   644,
     117,   358,   274,   120,   193,   644,   279,   182,   385,   368,
     645,   646,   644,  2699,   218,   644,  2702,  2703,   377,   644,
     174,   230,   645,   646,   403,  2711,  3205,   265,   182,   191,
     136,  2700,   586,  3675,  3213,   182,   211,  2723,   227,   155,
     249,  3220,   652,  2712,   581,  2731,   425,   275,    95,   408,
    2736,   260,   645,   646,   362,   488,  4086,   211,   389,   645,
     646,   615,   419,   252,   211,   182,   615,   652,   355,   356,
     645,   646,   344,   161,   361,   406,  2762,   645,   646,  2765,
     645,   646,   645,   646,  2770,   645,   646,   466,   644,   362,
     491,   492,   646,   188,   211,  2781,   368,   514,   515,   516,
     517,   518,   519,   530,   279,   377,   465,   550,   103,   161,
      77,   530,    79,  4093,   645,   646,   276,    74,   152,   536,
     324,   645,   646,  2809,   328,   279,  2812,   646,   505,   488,
      83,   335,   279,   646,   240,   344,   408,   646,   103,   645,
     646,   645,   646,   645,   646,    35,  2815,   526,   369,   106,
     546,   136,  2821,   120,   535,   645,  4192,   151,   264,   368,
    2846,   120,   279,   520,  3655,  3656,  3657,  2765,   645,   646,
     547,  2857,  2858,   106,  3816,   506,   143,   536,   645,   646,
     408,  3936,   651,   230,   645,   646,  3828,   362,   645,   646,
       6,   345,   644,   465,   645,   646,   153,   162,   193,   645,
     646,  3332,   249,   357,   645,   646,    71,   361,   362,   645,
     646,   415,   105,   260,   181,   362,   488,   406,     4,  4199,
     110,   646,  4202,  4203,  4204,  4205,  3491,   117,   334,   194,
     479,   590,   227,   392,   615,   636,   637,   638,   639,   640,
     641,   642,   601,   602,   614,   362,  1149,  1150,   240,   355,
     356,   646,  3046,  4319,  4320,   240,   465,  3388,   486,  2857,
     591,   620,   227,   622,   536,   646,  3718,  3719,   389,  2955,
     227,  4301,    55,   581,   478,  3930,  3931,   166,   436,   106,
     275,  3546,   220,   646,   174,  4321,   645,   646,   194,   576,
     649,   650,   182,   646,  3785,  3786,   652,   344,    68,  3790,
    3791,    12,  2988,   619,   645,   592,  2992,   645,   581,   135,
     275,     9,   646,   652,   264,   645,  3002,   506,   590,   645,
     645,   211,   187,   551,   430,   553,   644,   536,   652,    74,
     602,   652,  3018,  3019,   646,   153,  3022,  4317,  4318,   646,
     651,   276,   276,    88,   276,   276,  4326,    48,   620,   334,
     622,  3037,   276,  3039,   311,   276,   646,   646,    25,    26,
    3046,    13,   227,   155,   407,  3051,  3052,   468,  3543,  3544,
     374,   599,   329,   645,   646,   289,   290,   649,   650,   550,
     368,   368,   646,   271,   129,   491,   492,   252,  3563,   279,
    3076,    58,    59,    60,   646,  3570,   353,   390,   504,   646,
     570,    68,   591,   646,  3002,   559,   581,    74,   389,   563,
      12,   646,   566,   617,   570,    82,   155,   368,   465,   368,
    3595,  3107,   576,  3598,   620,   240,   652,   581,   596,   633,
     584,   646,  3101,  3102,   581,  3104,    68,   240,   403,   106,
     646,   639,    94,   408,   243,   548,  3132,   176,   188,   646,
     531,   595,   501,   120,   393,   345,  3142,   124,  3144,    82,
     131,   428,    71,   389,   581,   570,   389,  4109,  4037,   389,
    3156,   361,   362,   125,  3160,  3161,   131,  3163,   250,  3165,
     389,   250,   131,   637,   638,   389,   153,   139,    46,   536,
    4309,   486,   389,   391,   389,   389,   169,  4309,   389,   368,
    4143,   646,   645,   597,   646,   155,   491,   492,    25,   254,
     162,   506,   155,   165,   155,   155,   155,   155,   155,   433,
     434,   486,   155,   646,   389,   155,   178,   155,   155,   635,
     636,   637,   638,   639,   640,   641,   642,   155,   155,   155,
     155,   406,   155,  3229,   155,   155,   646,  3233,   155,  3235,
     202,    68,   155,   626,   155,    72,   551,    74,   553,   155,
     227,   556,   155,   155,   136,   155,   155,   234,  4210,  4211,
    3256,  4213,   155,   155,   155,   227,   155,  3229,   535,  3265,
     155,   233,   136,   601,   251,   644,   551,   332,   368,   368,
     368,   556,   646,  3279,   551,  3281,   591,   511,   512,   513,
     191,  3270,   639,   120,   599,   645,  3292,  4149,  3277,   574,
     355,   356,   645,   358,   645,   645,   533,   534,  4160,   645,
     537,   538,   274,   645,   541,   645,   543,   446,   447,   448,
     449,   450,   451,   452,   599,  4454,   645,   638,   191,   646,
     645,   644,  4454,   645,   311,   645,   645,   645,   645,   614,
     635,   636,   637,   638,   639,   640,   641,   642,   644,   155,
     156,   645,   329,   646,   646,   645,  3460,   489,   240,   559,
      25,    26,   590,   563,   419,   644,   566,   559,   644,   642,
     644,  3279,   559,  3281,   646,   559,   576,  4329,   550,  4331,
    4332,   581,   644,   228,   584,   542,  3382,   644,    11,   195,
     644,   646,   559,    58,    59,    60,  4461,   204,   490,   646,
     206,   262,   652,    68,   644,   644,   652,   384,   646,    74,
     191,   646,   416,   599,   488,   392,   645,    82,  3414,   188,
     652,  3417,  3418,  3419,  3420,   252,   646,   342,   479,   520,
     252,   252,   439,   520,   520,  3431,   520,   637,   638,   245,
     652,   106,   520,  3439,   275,  3549,   461,   409,   644,   644,
     256,    33,   334,  3449,  3450,   120,   644,  3453,   602,   124,
     645,  3457,  3458,  3459,  3460,   520,   644,   429,  3572,   652,
     334,  4536,   149,  4602,   644,   437,   644,   283,   644,   236,
    4602,  4058,   645,   445,  3480,   236,   645,  4616,   153,   645,
     652,   645,  4621,   470,  4616,  3491,  3492,  4626,   645,  4621,
     645,   480,   645,   645,  4626,   646,   155,   646,   570,   627,
     271,   646,  4154,    46,   645,   155,    54,  3513,   480,   155,
     644,  3500,  4398,   644,   644,    63,   570,  3523,   355,   356,
     644,   493,   494,   202,   361,    73,   191,  3526,  3534,   646,
     646,   368,   348,   249,   249,   380,   128,    85,    86,    87,
     527,   528,   529,  3549,    46,   209,   331,   559,   535,   559,
     246,   421,   227,   101,   362,   646,   155,   155,   155,   234,
     646,   153,   392,   325,   551,   157,  3572,   554,   106,   406,
     106,   644,   252,   545,   252,   646,   251,     6,   622,   646,
     570,   644,    11,   820,    13,  3574,    15,   645,   570,   264,
     646,   644,   644,  3599,   204,   373,    25,    26,   368,   491,
     492,    19,   574,   590,   196,  3523,   503,   389,  4570,  3615,
     559,   368,   652,  3619,  4584,  3621,  3622,   491,   492,  3608,
    4207,   644,   214,   639,   596,   644,   598,    56,   652,   644,
    3636,    60,    61,    54,   238,  3624,   311,    66,   238,   645,
     645,   645,    63,   645,  3633,    74,   644,   484,   645,  3655,
    3656,  3657,    73,    82,   329,   570,   652,   652,   646,   646,
     646,  2891,    91,   570,    85,    86,    87,   645,   645,   645,
     570,   644,   223,   368,   645,   266,   389,   106,   646,   646,
     101,   645,   374,   191,   276,   191,   652,    33,   191,   249,
     249,   120,   368,   377,   645,   124,   421,   121,   535,   645,
     155,   120,   644,   132,   133,   120,   553,   551,  3822,   384,
     139,   551,   644,   402,   115,   368,   644,   392,   147,   404,
     368,    74,   151,    19,   153,  3731,   652,   645,   652,   646,
    3736,   503,    16,    17,   475,   164,   644,   480,  4624,   645,
     645,  3747,   646,   635,   636,   637,   638,   639,   640,   641,
     642,   644,    46,   644,   591,   644,  4004,   186,   645,   362,
     482,   635,   636,   637,   638,   639,   640,   641,   642,   645,
     622,   262,   463,  3779,   274,   323,   645,    11,   421,  3785,
    3786,   639,   128,   142,  3790,  3791,   258,  3776,   645,   191,
     646,   155,   340,   249,   644,   470,   225,   249,   227,  4451,
     394,    33,   644,   646,    33,   234,   644,   153,   644,    12,
      13,   157,   645,   307,  4399,   407,  3822,   644,   612,   612,
     644,   596,   251,   120,   416,   252,   252,   111,   112,   113,
     114,   115,   361,    33,   362,    78,   498,   138,   645,   431,
     646,   644,   646,   645,   188,   274,   645,   645,    19,   265,
     196,   331,   527,   528,   529,   645,  3862,   645,   645,   645,
     535,   645,   645,   254,   456,   155,  3872,  3873,   214,  4117,
    4118,   645,   645,   202,   416,   170,   551,  3883,   646,   554,
     645,   274,   311,   237,   644,    70,   645,  3893,   646,   652,
     180,    94,   602,   602,   644,   646,   408,   155,   644,   237,
     329,   368,   323,   357,   333,   195,   607,   499,   646,   461,
     645,   144,   460,   362,   331,   590,   206,   168,   622,   340,
     252,  4508,   125,   374,   553,   644,  4578,   267,   476,   606,
     276,   215,   216,   217,   218,   602,   139,    14,   530,  3169,
    3170,   602,   362,   372,   237,   644,   525,  3177,   377,   622,
    3180,  3181,  4604,  3959,   644,   384,   471,   645,   550,   162,
     389,   553,   165,   392,   646,   255,   256,  3197,   596,   644,
     559,  3977,   646,   645,   645,   178,   559,   559,   541,   645,
    3969,  3211,  3988,    46,    46,   148,  3216,  3217,  3218,  3219,
     538,    46,   644,   283,   429,   424,   645,   644,   150,   202,
     619,    30,   653,   645,   480,   645,   387,   555,   374,   438,
     439,   440,   441,   131,   561,   131,   153,  4265,  4266,   644,
      46,    46,    46,   188,   227,     5,   644,   368,    30,   368,
     233,   619,   191,   645,    61,   138,   645,   374,    61,  4287,
     324,   470,   326,   327,   328,   129,   542,  4053,   644,   362,
    4056,   335,   596,  4287,   125,   476,   237,   149,   374,   374,
     650,   407,   352,   644,    46,   111,   112,   113,   114,   115,
     416,   274,   646,   531,    46,   644,   644,   149,   645,   619,
     646,   222,   281,   653,   119,   431,   650,    52,   562,   138,
     469,   646,   376,   650,   562,   379,   645,   149,   527,   528,
     529,   646,   560,  4092,   650,   207,   535,   646,  4114,  4357,
     456,   220,   645,  4119,    52,   405,   149,   538,   188,   188,
     188,    46,   551,  4357,  4372,   554,   562,   120,   621,   443,
     223,   415,   362,   644,   555,  4053,   190,   488,  4372,   646,
    4388,  4124,  2248,  2445,  2242,  4151,  3621,  2244,   577,  2240,
    2246,  3624,  3617,   499,  4388,  3634,  3628,  2655,   663,  4152,
    4383,   590,  4013,   989,  4384,  3645,  3636,  3882,  4604,   215,
     216,   217,   218,    46,  4568,  2988,  4290,   590,  1936,  1872,
    4004,  4574,  4004,  4004,   530,  4004,  4434,  4004,  4004,  4004,
    4480,  4004,  4350,   477,   478,  4004,  4004,  4480,  4446,  4447,
    4447,  4004,  4376,  4375,  4004,  1567,   409,  1032,  4322,  4004,
     413,  1507,  4022,  3013,  4220,  2729,  4222,   998,  3730,  3018,
    3431,   650,   680,  4313,  4400,  1312,   429,   685,  3936,  4536,
    3733,  4469,  4508,  4207,   437,  4483,  1641,   526,  3649,  2844,
    2858,  3165,   445,  2194,  1560,  4493,  3142,  3188,  3188,  4483,
    4498,  3221,  4258,  3814,  3525,  3583,  4399,  1568,   716,  4493,
    3572,  2942,  3369,  2626,  4498,  3364,  3372,    11,    11,  1655,
    4090,  4101,  4164,  4521,   732,  4523,  4102,   480,   324,  4168,
     326,   327,   328,  2284,  4290,  3977,  3828,  1567,  2187,   335,
     493,   494,  1573,   593,  1456,  4543,  3531,  4545,   958,  4547,
    1460,  2512,  4416,  4309,  4095,  1637,  3143,  4313,  1925,  3002,
    2485,  4545,  4560,  4547,  3426,  1581,  4322,  2529,   776,   777,
     778,   779,   608,  2403,  4572,  4573,  4560,  4316,  2429,   887,
    1979,   789,   873,   617,  2978,  1112,  2318,  2557,  3469,  2960,
    4588,  4589,   545,  4079,  4225,  4593,  4473,   631,   632,   633,
    3615,  4474,  1086,  4467,  4588,  4589,  3702,  3374,  2427,  4593,
    1475,  3156,  1475,  4089,  2218,  4176,  3046,  2221,  2222,   415,
    2224,   574,  4476,  2227,  2228,  2229,  2230,  2231,  2232,  2233,
    2289,  3967,  2236,  3967,  2238,  1325,  1300,  2516,  1223,   975,
     975,  2480,  3736,   596,    13,   598,    15,  3444,  3443,   975,
    3779,   598,  4454,   975,   676,  1414,  2043,   589,  1440,  2044,
    4416,    30,  1861,  3163,  3429,    34,  4534,  1664,  4407,  4408,
    4555,  4064,  4621,  4626,  4217,  3575,  2587,  3449,   886,    48,
      49,   477,   478,  3491,  1332,   588,  1797,    56,  3492,   588,
    2006,    60,    61,  2580,  2579,  1646,  2573,  1907,  4454,  1894,
    4181,  1940,  1348,   865,  3414,  4187,   582,    76,   867,   523,
    3054,  4467,   523,  4146,  4144,   663,    -1,  4473,  4474,   663,
     663,    -1,    -1,    -1,    -1,    94,    -1,    -1,    -1,  4485,
      -1,    -1,    -1,    -1,    -1,    -1,  4492,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,  4612,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   125,   126,   127,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   151,    -1,    -1,    -1,    -1,    -1,  4544,    -1,
      -1,    -1,    -1,  4549,    -1,    -1,   165,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1013,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,    -1,
      -1,   617,  4578,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   200,    -1,   202,    -1,    -1,   632,   633,   207,    -1,
      -1,   210,    -1,    -1,    -1,    -1,  4602,    -1,  4604,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4612,    -1,    -1,    -1,
    4616,    -1,  1070,  1071,   233,  4621,   235,    -1,    -1,    -1,
    4626,  1079,  1080,  1081,  1082,  1083,  1084,  1085,    -1,    -1,
      -1,    -1,    -1,    -1,   253,  1093,  1094,    -1,  1096,  1097,
      -1,    -1,    -1,  1101,  1102,    -1,    -1,  1105,  1106,  1107,
    1108,   270,  1110,  1111,    -1,   274,    -1,    -1,    -1,    -1,
    1118,  1119,    -1,  1121,  1122,  1123,  1124,  1125,    -1,    -1,
    1128,  1129,  1130,  1131,  1132,  1133,  1134,  1135,  1136,  1137,
    1138,    -1,  1140,    -1,    -1,  1143,  1144,    -1,    -1,    -1,
    1148,    -1,    -1,    -1,  1152,  1153,  1154,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1165,  1166,  1167,
      -1,    -1,    -1,    -1,    -1,    -1,  1174,    -1,    -1,    -1,
      -1,    -1,    -1,  1181,  1182,  1183,    -1,  1185,    -1,    -1,
      -1,    -1,    -1,    -1,  1192,  1193,  1194,    -1,  1196,  1197,
    1198,  1199,  1200,    -1,  1202,  1203,  1204,  1205,  1206,  1207,
    1208,  1209,    -1,   372,    -1,  1213,  1214,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    13,    -1,    15,    -1,    -1,
     389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   403,    -1,    34,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,    -1,    -1,
      48,    49,    -1,    -1,    -1,    -1,    -1,    -1,    56,    -1,
      -1,    -1,    60,    61,    -1,    -1,    -1,   436,    -1,    -1,
     439,    -1,   441,    -1,    -1,   444,    -1,    -1,    76,    -1,
      -1,    -1,    -1,    -1,    -1,   454,   455,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   464,    94,   466,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   474,    -1,    -1,    -1,    -1,
      -1,   480,    -1,    -1,    -1,    12,    13,    -1,   116,   488,
      -1,    -1,    -1,    -1,   493,    -1,   495,   125,   126,   127,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,    32,    33,
      -1,    -1,    -1,    -1,    38,    -1,    40,   526,    42,    43,
      -1,    -1,    -1,    -1,    -1,   534,    -1,   165,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    59,  1384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   184,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1402,    -1,    -1,    94,    -1,    -1,
      -1,    -1,   200,    -1,   202,    -1,    -1,    -1,   577,   207,
      -1,    -1,   210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     589,    -1,    -1,   107,   593,    -1,   110,   596,   125,    -1,
      -1,    -1,   601,    -1,   118,   233,    -1,   235,    -1,    -1,
      -1,    -1,   139,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   137,    -1,   253,    -1,    -1,    -1,    -1,
     629,    -1,    -1,    -1,    -1,   162,    -1,    -1,   165,    -1,
     154,    -1,   270,    -1,    -1,   644,   274,    -1,    -1,    -1,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,   183,
      -1,    -1,    -1,    -1,    -1,   202,    -1,    -1,    25,    26,
      -1,    -1,    -1,   197,   198,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
      -1,    58,    59,    60,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    68,    -1,    -1,   238,    -1,    -1,    74,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    82,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   372,    -1,    -1,   274,    -1,    -1,
      -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,   106,
      -1,   389,    -1,   277,   278,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,   403,    -1,   124,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   414,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   317,   318,   319,   153,    -1,   436,    -1,
      -1,   439,    -1,   441,    -1,    -1,   444,    -1,    -1,    -1,
      -1,    -1,   336,   337,   338,    -1,   454,   455,    -1,   343,
      -1,    -1,   346,    -1,    -1,    -1,   464,    -1,   466,  1677,
      -1,    -1,    -1,    -1,    -1,    -1,   474,    -1,    -1,    -1,
     364,   365,   480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     488,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,
      -1,    33,    34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     227,    -1,   409,   397,   398,    -1,   413,   234,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    58,    59,   526,    -1,
      -1,    -1,   429,    -1,   251,    -1,   534,    69,    -1,   423,
     437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   445,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      92,    -1,    94,    -1,    -1,    -1,    -1,  1775,  1776,  1777,
      -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,   577,
      -1,    -1,  1790,   480,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   589,    -1,    -1,   311,   593,   493,   494,   596,    -1,
     484,    -1,    -1,   601,   488,    -1,    -1,    -1,  1816,    -1,
      -1,    -1,   329,    -1,  1822,    -1,   500,  1825,    -1,  1827,
     152,   153,    -1,    -1,    -1,  1833,   158,  1835,  1836,   161,
      -1,   629,  1840,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   644,    -1,   545,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     192,    -1,   194,    -1,    -1,    -1,    -1,   384,    -1,   201,
      -1,   203,    -1,    -1,    -1,   392,   560,   574,    -1,   563,
      -1,    -1,   566,   567,   568,   569,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   226,   227,    -1,    -1,    -1,   596,
      -1,   598,  1910,    -1,    -1,    -1,    -1,    -1,    -1,     6,
      -1,    -1,  1920,    -1,    11,    -1,    13,    -1,   250,    -1,
      -1,    -1,    -1,    -1,   608,   609,    -1,    -1,    25,    26,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   271,
      -1,   560,  1950,    -1,    -1,    -1,    -1,    -1,    -1,   633,
      -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,    -1,    56,
      -1,    -1,    -1,    60,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1979,   304,    -1,    -1,    -1,    -1,    74,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    82,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    91,    -1,  2004,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2012,    -1,    -1,    -1,    -1,   106,
     527,   528,   529,    -1,    -1,    -1,    -1,    -1,   535,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,   124,    25,    26,
      -1,    -1,    -1,    -1,   551,   132,    -1,   554,    -1,   371,
      -1,    -1,   139,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     147,    -1,    -1,    -1,    -1,    -1,   153,    -1,    -1,    -1,
      -1,    -1,    -1,    60,   396,    -1,   685,    -1,    -1,    -1,
      -1,    -1,    -1,   590,    -1,   407,   408,    74,    -1,   411,
     412,    -1,    -1,    -1,    -1,    82,    -1,    -1,    -1,   186,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   716,    -1,    -1,
     432,    -1,    -1,    -1,    -1,    -1,    -1,   224,    -1,   106,
      -1,    -1,    -1,   732,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,   124,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   485,   251,    -1,   153,    -1,    -1,    -1,
     779,    -1,    -1,    -1,    -1,    -1,   498,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   274,   295,   296,
     297,   298,   299,   300,   301,   302,   303,    -1,   305,   306,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   530,    -1,
      -1,    -1,    -1,   535,    -1,    -1,    -1,  2215,    -1,    -1,
      -1,    -1,    -1,    -1,   311,    -1,    -1,    -1,    -1,    -1,
      -1,   553,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     227,    -1,   329,    -1,    -1,    -1,   333,   234,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   886,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   610,    -1,
     377,    -1,    -1,    -1,   616,    -1,    -1,   384,    -1,    -1,
    2298,    -1,    -1,    -1,  2302,   392,    -1,    -1,    -1,  2307,
    2308,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2316,    -1,
      -1,  2319,    -1,    -1,   311,    -1,   433,   434,    -1,    -1,
      -1,  2329,  2330,    -1,  2332,  2333,    -1,  2335,  2336,  2337,
    2338,  2339,   329,    -1,  2342,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   439,  2351,    -1,    -1,    -1,    -1,    -1,    -1,
    2358,    -1,  2360,    -1,  2362,  2363,    -1,  2365,  2366,    -1,
      -1,    -1,  2370,  2371,  2372,    -1,    -1,    -1,  2376,  2377,
    2378,    -1,  2380,   470,  2382,    -1,  2384,    -1,  2386,    -1,
    2388,    -1,    -1,    -1,    -1,  2393,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,  1013,   392,    -1,    -1,    -1,    -1,
      -1,    -1,  2410,    -1,    -1,    -1,    -1,    -1,    -1,  2417,
      -1,    -1,  2420,    -1,    -1,    -1,    -1,    -1,  2426,    -1,
      -1,    -1,    -1,    -1,    -1,  2433,    -1,    -1,    -1,    -1,
     527,   528,   529,    -1,    -1,    -1,    -1,    -1,   535,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1070,  1071,    -1,   551,    -1,    -1,   554,    -1,    -1,
    1079,  1080,    -1,    -1,  1083,  1084,  1085,    -1,    -1,    -1,
      -1,    -1,    -1,   470,  1093,  1094,    -1,  1096,  1097,    -1,
      -1,    -1,  1101,    -1,    -1,    -1,  1105,  1106,  1107,  1108,
      -1,  1110,    -1,   590,    -1,    -1,    -1,    -1,    -1,  1118,
    1119,    -1,  1121,  1122,    -1,    -1,    -1,    -1,    -1,  1128,
    1129,  1130,    -1,    -1,  1133,  1134,  1135,  1136,  1137,  1138,
      -1,  1140,    -1,    -1,  1143,  1144,    -1,    -1,    -1,  1148,
     527,   528,   529,  1152,  1153,  1154,    -1,    -1,   535,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1165,  1166,  1167,    -1,
      -1,    -1,  2560,    -1,   551,  1174,    -1,   554,    -1,    -1,
      -1,    -1,  1181,  1182,  1183,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2588,    -1,    -1,    -1,  2592,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   590,    -1,  1214,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2638,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2656,  2657,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1402,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2823,  2824,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2879,    -1,    -1,    -1,  2883,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2903,  2904,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2924,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2933,    -1,  2935,    -1,  2937,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2955,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2967,
      -1,    -1,    -1,    -1,  2972,    -1,    -1,    -1,    -1,    -1,
    2978,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3047,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1677,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3086,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3131,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1775,  1776,  1777,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1816,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1825,    -1,  1827,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3226,  3227,
      -1,  1840,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3266,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1920,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3325,    -1,    -1,
      -1,  3329,  3330,    -1,  3332,    -1,    -1,    -1,    -1,    -1,
      -1,  1950,    -1,  3341,    -1,    -1,    -1,    -1,  3346,    -1,
      -1,  3349,    -1,  3351,  3352,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1979,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3388,    -1,    -1,    -1,    -1,  2004,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2012,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3421,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3439,    -1,    -1,    -1,  3443,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3480,  3481,  3482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2215,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2298,
      -1,    -1,    -1,  2302,    -1,    -1,    -1,    -1,  2307,  2308,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2316,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2329,  2330,    -1,  2332,    -1,    -1,  2335,  2336,  2337,  2338,
    2339,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3737,
      -1,    -1,  2351,    -1,    -1,    -1,    -1,    -1,    -1,  2358,
      -1,  2360,    -1,  2362,  2363,    -1,  2365,    -1,    -1,    -1,
      -1,  2370,  2371,  2372,    -1,  3763,  3764,  2376,  2377,  2378,
      -1,  2380,    -1,  2382,    -1,  2384,    -1,  2386,    -1,  2388,
      -1,    -1,    -1,  3781,  2393,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2426,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3905,    -1,    -1,
      -1,  3909,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3933,    -1,    -1,  3936,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2560,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3963,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2588,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4004,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4069,    -1,  4071,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4111,    -1,    -1,    -1,    -1,    -1,  4117,
    4118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4172,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4251,    -1,  4253,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4263,    -1,  4265,  4266,    -1,
    2879,    -1,    -1,    -1,  2883,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4287,
      -1,    -1,    -1,    -1,  2903,  2904,    -1,  4295,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2924,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2933,    -1,  2935,    -1,  2937,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2955,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4355,    -1,  4357,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2978,
      -1,    -1,    -1,    -1,  4372,  4373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4388,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4433,  4434,    -1,  3047,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4446,  4447,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4455,    -1,    -1,
      -1,    -1,    -1,  4461,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3086,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4483,    -1,    -1,    -1,    -1,
      -1,    -1,  4490,    -1,    -1,  4493,    -1,    -1,    -1,    -1,
    4498,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4514,    -1,    -1,    -1,
      -1,    -1,  3131,  4521,    -1,  4523,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4536,    -1,
      -1,    -1,    -1,    -1,    -1,  4543,    -1,  4545,    -1,  4547,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4560,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4572,  4573,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4588,  4589,    -1,    -1,    -1,  4593,    -1,    -1,    -1,    -1,
      -1,  4599,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3226,  3227,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4627,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3325,    -1,    -1,    -1,
    3329,  3330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3341,    -1,    -1,    -1,    -1,  3346,    -1,    -1,
    3349,    -1,  3351,  3352,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3421,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3439,    -1,    -1,    -1,  3443,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3480,  3481,  3482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3737,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3763,  3764,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3781,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3905,    -1,    -1,    -1,
    3909,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3933,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3963,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4069,    -1,  4071,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4251,    -1,  4253,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4263,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4373,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4433,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4455,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4514,    -1,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      44,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
    4599,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,  4627,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,   175,   176,    -1,   178,   179,   180,   181,   182,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,   205,    -1,   207,   208,    -1,   210,   211,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,   222,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,   233,
     234,   235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,   257,   258,    -1,   260,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,   279,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,   330,   331,    -1,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,   571,   572,   573,
      -1,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,   603,
     604,   605,   606,   607,    -1,    -1,   610,   611,    -1,   613,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,    -1,    -1,   637,   638,    -1,    -1,    -1,    -1,   643,
     644,    -1,    -1,   647,   648,    -1,    -1,   651,   652,     5,
      -1,     7,     8,     9,    10,    11,    12,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    -1,    -1,
      96,    97,    98,    99,    -1,   101,   102,   103,    -1,   105,
     106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,   175,
     176,    -1,   178,   179,   180,   181,   182,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,   205,
      -1,   207,   208,    -1,   210,   211,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,   222,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,   233,   234,   235,
     236,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,   260,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,   279,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,   330,   331,    -1,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,   603,   604,   605,
     606,   607,    -1,    -1,   610,   611,    -1,   613,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,    -1,   633,    -1,    -1,
      -1,   637,   638,    -1,    -1,    -1,    -1,   643,   644,    -1,
      -1,   647,   648,    -1,    -1,   651,   652,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    -1,    -1,    96,    97,
      98,    99,    -1,   101,   102,   103,    -1,   105,   106,   107,
     108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,   175,   176,    -1,
     178,   179,   180,   181,   182,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,   205,    -1,   207,
     208,    -1,   210,   211,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,   222,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,   233,   234,   235,   236,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,   260,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,   279,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,   330,   331,    -1,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,   603,   604,   605,   606,   607,
      -1,    -1,   610,   611,    -1,   613,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,    -1,   633,    -1,    -1,    -1,   637,
     638,   639,    -1,    -1,    -1,   643,   644,    -1,    -1,   647,
     648,    -1,    -1,   651,   652,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    -1,    -1,    96,    97,    98,    99,
      -1,   101,   102,   103,    -1,   105,   106,   107,   108,   109,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,   174,   175,   176,    -1,   178,   179,
     180,   181,   182,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,   205,    -1,   207,   208,    -1,
     210,   211,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,   222,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,   233,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
     260,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,   279,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
     330,   331,    -1,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,   603,   604,   605,   606,   607,    -1,    -1,
     610,   611,    -1,   613,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,    -1,    -1,   643,   644,    -1,    -1,   647,   648,    -1,
      -1,   651,   652,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,   175,   176,    -1,   178,   179,   180,   181,
     182,    -1,   184,   185,    -1,    -1,    -1,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,   205,    -1,   207,   208,    -1,   210,   211,
      -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,   221,
     222,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,   233,   234,   235,   236,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,   258,    -1,   260,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,   279,    -1,    -1,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,   330,   331,
      -1,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,    -1,   456,   457,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,   479,    -1,    -1,
      -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,   501,
     502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,   526,   527,   528,   529,   530,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,    -1,   588,   589,    -1,    -1,
     592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,
      -1,   603,   604,   605,   606,   607,    -1,    -1,   610,   611,
      -1,   613,   614,   615,   616,   617,   618,    -1,    -1,    -1,
      -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,
      -1,   633,    -1,    -1,    -1,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,    -1,    -1,   647,   648,    -1,    -1,   651,
     652,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,   175,   176,    -1,   178,   179,   180,   181,   182,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,   205,    -1,   207,   208,    -1,   210,   211,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,   222,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,   233,
     234,   235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,   260,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,   279,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,   330,   331,    -1,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,   603,
     604,   605,   606,   607,    -1,    -1,   610,   611,    -1,   613,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,    -1,    -1,   637,   638,    -1,    -1,    -1,    -1,   643,
     644,    -1,    -1,   647,   648,    -1,    -1,   651,   652,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    -1,    -1,
      96,    97,    98,    99,    -1,   101,   102,   103,    -1,   105,
     106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,   175,
     176,    -1,   178,   179,   180,   181,   182,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,   205,
      -1,   207,   208,    -1,   210,   211,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,   222,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,   233,   234,   235,
     236,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,   260,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,   279,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,   330,   331,    -1,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,   603,   604,   605,
     606,   607,    -1,    -1,   610,   611,    -1,   613,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,    -1,   633,    -1,    -1,
      -1,   637,   638,    -1,    -1,    -1,    -1,   643,   644,    -1,
      -1,   647,   648,    -1,    -1,   651,   652,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    -1,    -1,    96,    97,
      98,    99,    -1,   101,   102,   103,    -1,   105,   106,   107,
     108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,   175,   176,    -1,
     178,   179,   180,   181,   182,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,   205,    -1,   207,
     208,    -1,   210,   211,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,   222,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,   233,   234,   235,   236,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,   260,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,   279,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,   330,   331,    -1,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,   603,   604,   605,   606,   607,
      -1,    -1,   610,   611,    -1,   613,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,    -1,   633,    -1,    -1,    -1,   637,
     638,    -1,    -1,    -1,    -1,   643,   644,    -1,    -1,   647,
     648,    -1,    -1,   651,   652,     5,    -1,     7,     8,     9,
      10,    11,    12,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    -1,    -1,    96,    97,    98,    99,
      -1,   101,   102,   103,    -1,   105,   106,   107,   108,   109,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,   174,   175,   176,    -1,   178,   179,
     180,   181,   182,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,   205,    -1,   207,   208,    -1,
     210,   211,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,   222,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,   233,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
     260,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,   279,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
     330,   331,    -1,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,   603,   604,   605,   606,   607,    -1,    -1,
     610,   611,    -1,   613,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,    -1,    -1,   643,   644,    -1,    -1,   647,   648,    -1,
      -1,   651,   652,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,   175,   176,    -1,   178,   179,   180,   181,
     182,    -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,   205,    -1,   207,   208,    -1,   210,   211,
      -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,   221,
     222,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,   233,   234,   235,   236,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,   258,    -1,   260,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,   279,    -1,    -1,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,   330,   331,
      -1,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,    -1,   456,   457,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,   479,    -1,    -1,
      -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,   501,
     502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,   526,   527,   528,   529,   530,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,    -1,   588,   589,    -1,    -1,
     592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,
      -1,   603,   604,   605,   606,   607,    -1,    -1,   610,   611,
      -1,   613,   614,   615,   616,   617,   618,    -1,    -1,    -1,
      -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,
      -1,   633,    -1,    -1,    -1,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,    -1,    -1,   647,   648,    -1,    -1,   651,
     652,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,   175,   176,    -1,   178,   179,   180,   181,   182,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,   205,    -1,   207,   208,    -1,   210,   211,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,   222,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,   233,
     234,   235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,   260,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,   279,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,   330,   331,    -1,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,   603,
     604,   605,   606,   607,    -1,    -1,   610,   611,    -1,   613,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,    -1,    -1,   637,   638,    -1,    -1,    -1,    -1,   643,
     644,    -1,    -1,   647,   648,    -1,    -1,   651,   652,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    91,    92,    93,    -1,    -1,
      96,    97,    98,    99,    -1,   101,   102,   103,    -1,   105,
     106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,   175,
     176,    -1,   178,   179,   180,   181,   182,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,   205,
      -1,   207,   208,    -1,   210,   211,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,   222,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,   233,   234,   235,
     236,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,   260,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,   279,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,   330,   331,    -1,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,   603,   604,   605,
     606,   607,    -1,    -1,   610,   611,    -1,   613,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,    -1,   633,    -1,    -1,
      -1,   637,   638,    -1,    -1,    -1,    -1,   643,   644,    -1,
      -1,   647,   648,    -1,    -1,   651,   652,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    91,    92,    93,    -1,    -1,    96,    97,
      98,    99,    -1,   101,   102,   103,    -1,   105,   106,   107,
     108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,   175,   176,    -1,
     178,   179,   180,   181,   182,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,   205,    -1,   207,
     208,    -1,   210,   211,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,   222,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,   233,   234,   235,   236,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,   260,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,   279,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,   330,   331,    -1,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,   345,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,   603,   604,   605,   606,   607,
      -1,    -1,   610,   611,    -1,   613,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,    -1,   633,    -1,    -1,    -1,   637,
     638,    -1,    -1,    -1,    -1,   643,   644,    -1,    -1,   647,
     648,    -1,    -1,   651,   652,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    91,    92,    93,    -1,    -1,    96,    97,    98,    99,
      -1,   101,   102,   103,    -1,   105,   106,   107,   108,   109,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,   174,   175,   176,    -1,   178,   179,
     180,   181,   182,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,   205,    -1,   207,   208,    -1,
     210,   211,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,   222,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,   233,   234,   235,   236,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
     260,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,   279,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
     330,   331,    -1,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,   345,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,   603,   604,   605,   606,   607,    -1,    -1,
     610,   611,    -1,   613,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,   637,   638,    -1,
      -1,    -1,    -1,   643,   644,    -1,    -1,   647,   648,    -1,
      -1,   651,   652,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,   175,   176,    -1,   178,   179,   180,   181,
     182,    -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,   205,    -1,   207,   208,    -1,   210,   211,
      -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,   221,
     222,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,   233,   234,   235,   236,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,   258,    -1,   260,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,   279,    -1,    -1,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,   330,   331,
      -1,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,   345,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,    -1,   456,   457,    -1,   459,   460,   461,
      -1,   463,    -1,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,   479,    -1,    -1,
      -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,   501,
     502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,   526,   527,   528,   529,   530,    -1,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,    -1,   588,   589,    -1,    -1,
     592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,
      -1,   603,   604,   605,   606,   607,    -1,    -1,   610,   611,
      -1,   613,   614,   615,   616,   617,   618,    -1,    -1,    -1,
      -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,
      -1,   633,    -1,    -1,    -1,   637,   638,    -1,    -1,    -1,
      -1,   643,   644,    -1,    -1,   647,   648,    -1,    -1,   651,
     652,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,   175,   176,    -1,   178,   179,   180,   181,   182,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,   205,    -1,   207,   208,    -1,   210,   211,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,   222,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,   233,
     234,   235,   236,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,   260,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,   279,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,   330,   331,    -1,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,   345,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,   603,
     604,   605,   606,   607,    -1,    -1,   610,   611,    -1,   613,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,    -1,    -1,   637,   638,    -1,    -1,    -1,    -1,   643,
     644,    -1,    -1,   647,   648,    -1,    -1,   651,   652,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    35,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,   174,   175,
     176,    -1,   178,   179,   180,   181,   182,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,
      -1,   207,   208,    -1,   210,   211,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,    -1,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,   279,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,    -1,   308,   309,   310,   311,   312,    -1,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,   345,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,    -1,
      -1,    -1,   358,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
      -1,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,   547,   548,    -1,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,
      -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,    -1,   633,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,   651,   652,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,   193,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,   227,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,   252,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
     264,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,   480,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,   506,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,   652,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,   193,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,   227,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,   252,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,   506,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,   652,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,   480,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,   645,    -1,    -1,    18,    -1,    -1,    21,   652,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,   645,    14,    -1,    -1,    -1,    18,   651,   652,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,   181,
      -1,    -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,
      -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,    -1,   308,   309,   310,   311,
     312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,    -1,   331,
      -1,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,
      -1,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   383,   384,   385,    -1,   387,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,    -1,   456,   457,    -1,   459,   460,   461,
      -1,   463,    -1,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,   479,    -1,    -1,
      -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,   501,
     502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,   526,   527,   528,   529,   530,    -1,
      -1,    -1,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,   547,   548,    -1,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,    -1,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,
     582,   583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,
     592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,
      -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,
      -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,
      -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,
      -1,   633,    -1,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,   644,    -1,    14,    -1,    -1,    -1,    18,    -1,
     652,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,
     210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,   235,    -1,   237,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
      -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,    -1,   308,   309,
     310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
      -1,   331,    -1,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,    -1,    -1,    -1,   358,   359,
      -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,   547,   548,    -1,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,
     580,    -1,   582,   583,    -1,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,
     610,    -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,    -1,    -1,   633,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,   652,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,
     210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
      -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,    -1,   308,   309,
     310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
      -1,   331,    -1,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,    -1,    -1,    -1,   358,   359,
      -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,   547,   548,    -1,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,
     580,    -1,   582,   583,    -1,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,
     610,    -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,    -1,    -1,   633,    -1,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,   644,    -1,    14,    -1,    -1,    -1,
      18,    -1,   652,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,
     208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,    -1,
     308,   309,   310,   311,   312,    -1,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,    -1,   331,    -1,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,    -1,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,
     358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,   547,
     548,    -1,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,    -1,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,
     578,   579,   580,    -1,   582,   583,    -1,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,
      -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,    -1,   633,    -1,    -1,    -1,    -1,
       5,   639,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,   652,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,   181,    -1,    -1,   184,
     185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,
      -1,   196,   197,   198,   199,    -1,   201,    -1,   203,    -1,
      -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,
      -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,
     275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,    -1,   314,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
      -1,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
      -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,
     385,    -1,   387,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
      -1,   456,   457,    -1,   459,   460,   461,    -1,   463,    -1,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,
     485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,    -1,   501,   502,   503,   504,
     505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,
     515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,
     525,   526,   527,   528,   529,   530,    -1,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,   547,   548,    -1,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,    -1,   560,   561,    -1,   563,   564,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,
      -1,    -1,   577,   578,   579,   580,    -1,   582,   583,    -1,
     585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,
     595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,
     615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,
     625,   626,    -1,   628,   629,   630,    -1,    -1,   633,    -1,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,   651,   652,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,
     633,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,   652,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,
     633,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,   652,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,
     633,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,   652,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,
     633,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,   652,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,
     633,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,   651,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,   263,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,   651,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,   181,    -1,    -1,   184,
     185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,
      -1,   196,   197,   198,   199,    -1,   201,    -1,   203,    -1,
      -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,
      -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,   258,    -1,    -1,   261,   262,   263,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,
     275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,    -1,   314,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
      -1,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
      -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,
     385,    -1,   387,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
      -1,   456,   457,    -1,   459,   460,   461,    -1,   463,    -1,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,
     485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,    -1,   501,   502,   503,   504,
     505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,
     515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,
     525,   526,   527,   528,   529,   530,    -1,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,   547,   548,    -1,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,   561,    -1,   563,   564,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,
      -1,    -1,   577,   578,   579,   580,    -1,   582,   583,    -1,
     585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,
     595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,
     615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,
     625,   626,    -1,   628,   629,   630,    -1,    -1,   633,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,   651,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,   181,    -1,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,
      -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,    -1,   261,   262,   263,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,    -1,   308,   309,   310,   311,   312,    -1,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,    -1,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,    -1,
      -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
      -1,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,   547,   548,    -1,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,
      -1,   577,   578,   579,   580,    -1,   582,   583,    -1,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,
      -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,    -1,   633,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,   651,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,   181,    -1,    -1,   184,   185,    -1,
      -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,
     197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,
     207,   208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,
      -1,   218,   219,   220,   221,    -1,    -1,   224,   225,   226,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,
      -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,
     247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
      -1,   258,    -1,    -1,   261,   262,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,   276,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,    -1,   314,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
      -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,    -1,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,
      -1,   358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,
     367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,
     387,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,   438,    -1,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,    -1,   456,
     457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
      -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,   486,
      -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,
     497,   498,   499,    -1,   501,   502,   503,   504,   505,    -1,
      -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,
      -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,
     527,   528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
     547,   548,    -1,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,    -1,   560,   561,    -1,   563,   564,   565,   566,
      -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,
     577,   578,   579,   580,    -1,   582,   583,    -1,   585,   586,
      -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,
     597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,
     607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,
     617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,
      -1,   628,   629,   630,    -1,    -1,   633,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,   651,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,
     208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,    -1,
     308,   309,   310,   311,   312,    -1,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,    -1,   331,    -1,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,    -1,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,
     358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,   547,
     548,    -1,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,    -1,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,
     578,   579,   580,    -1,   582,   583,    -1,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,
      -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,    -1,   633,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,   651,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,
     189,   190,    -1,   192,    -1,   194,    -1,   196,   197,   198,
     199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,
      -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,
     219,   220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,
     239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,
      -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,    -1,   328,
     329,    -1,   331,    -1,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,    -1,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,   358,
     359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,
     369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,    -1,   456,   457,    -1,
     459,   460,   461,    -1,   463,    -1,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,    -1,   478,
     479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,
      -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,
     499,    -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,
      -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,   518,
      -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,   528,
     529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,   547,   548,
      -1,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
      -1,   560,   561,    -1,   563,   564,   565,   566,    -1,    -1,
      -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,
     579,   580,    -1,   582,   583,    -1,   585,   586,    -1,   588,
     589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,
     599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,
      -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,   618,
      -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,
     629,   630,    -1,    -1,   633,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    -1,   651,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    -1,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,    -1,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,    -1,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,   177,   178,   179,
     180,   181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,   214,    -1,    -1,    -1,   218,   219,
     220,   221,   222,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,   248,    -1,
      -1,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,
      -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,
      -1,   281,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,    -1,   308,   309,
     310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
      -1,   331,    -1,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,    -1,    -1,    -1,    -1,   359,
      -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,    -1,    -1,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
      -1,    -1,    -1,    -1,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,    -1,    -1,
     440,    -1,   442,   443,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,    -1,   478,    -1,
      -1,    -1,    -1,   483,   484,   485,    -1,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,    -1,   497,    -1,   499,
      -1,   501,    -1,    -1,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,    -1,   527,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,   547,   548,    -1,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,    -1,    -1,    -1,   578,   579,
     580,    -1,   582,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,   592,    -1,    -1,   595,    -1,    -1,    -1,   599,
     600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,
     610,    -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,    -1,   628,    -1,
     630,    -1,     5,   633,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,   646,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,
     633,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,   645,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,    -1,   633,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,   645,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,   181,    -1,    -1,   184,
     185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,
      -1,   196,   197,   198,   199,    -1,   201,    -1,   203,    -1,
      -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,
      -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,
     275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,    -1,   314,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
      -1,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
      -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,
     385,    -1,   387,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
      -1,   456,   457,    -1,   459,   460,   461,    -1,   463,    -1,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,
     485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,    -1,   501,   502,   503,   504,
     505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,
     515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,
     525,   526,   527,   528,   529,   530,    -1,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,   547,   548,    -1,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,    -1,   560,   561,    -1,   563,   564,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,
      -1,    -1,   577,   578,   579,   580,    -1,   582,   583,    -1,
     585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,
     595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,
     615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,
     625,   626,    -1,   628,   629,   630,    -1,     5,   633,     7,
       8,     9,    10,    11,   639,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,
     208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,    -1,
     308,   309,   310,   311,   312,    -1,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,    -1,   331,    -1,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,    -1,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,
     358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,   547,
     548,    -1,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,    -1,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,
     578,   579,   580,    -1,   582,   583,    -1,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,
      -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,     5,   633,     7,     8,     9,    10,
      11,   639,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,    -1,   178,   179,   180,
     181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,   190,
      -1,   192,    -1,   194,    -1,   196,   197,   198,   199,    -1,
     201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,   210,
      -1,    -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,
     221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,    -1,
      -1,    -1,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,
      -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,    -1,
     261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,    -1,   328,   329,    -1,
     331,    -1,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,    -1,    -1,    -1,   358,   359,    -1,
      -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,   370,
     371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,   438,    -1,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,    -1,   456,   457,    -1,   459,   460,
     461,    -1,   463,    -1,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,    -1,   478,   479,    -1,
      -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,
      -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,
     501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,
     511,   512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,
     521,    -1,   523,    -1,   525,   526,   527,   528,   529,   530,
      -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,   547,   548,    -1,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,   560,
     561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,
      -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,   580,
      -1,   582,   583,    -1,   585,   586,    -1,   588,   589,    -1,
      -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,
      -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,
      -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,
      -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,
      -1,     5,   633,     7,     8,     9,    10,    11,   639,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,     5,   633,
       7,     8,     9,    10,    11,   639,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,   181,   182,    -1,   184,   185,    -1,
      -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,
     197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,
     207,   208,    -1,   210,   211,    -1,   213,   214,    -1,    -1,
      -1,   218,   219,   220,   221,    -1,    -1,   224,   225,   226,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,
      -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,
     247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
      -1,   258,    -1,    -1,   261,   262,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,   276,
      -1,    -1,   279,    -1,    -1,    -1,    -1,   284,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,    -1,   314,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
      -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,    -1,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,    -1,    -1,   362,   363,    -1,   365,   366,
     367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,
     387,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,   438,    -1,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,    -1,   456,
     457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
      -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,   486,
      -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,
     497,   498,   499,    -1,   501,   502,   503,   504,   505,    -1,
      -1,   508,   509,   510,   511,   512,   513,    -1,   515,   516,
      -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,
     527,   528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
     547,   548,    -1,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,    -1,   560,   561,    -1,   563,   564,   565,   566,
      -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,
     577,   578,   579,   580,   581,   582,   583,    -1,   585,   586,
      -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,
     597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,
     607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,
     617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,
      -1,   628,   629,   630,    -1,     5,   633,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    16,    17,    18,    19,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,
     210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
      -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,    -1,   308,   309,
     310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
      -1,   331,    -1,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,    -1,    -1,    -1,   358,   359,
      -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,   376,    -1,    -1,   379,
      -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,   547,   548,    -1,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,
     580,    -1,   582,   583,    -1,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,
     610,    -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,   631,     5,   633,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,   155,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
     263,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,   489,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,   559,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,     5,
     633,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,   181,    -1,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,
      -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,    -1,   261,   262,   263,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,    -1,   308,   309,   310,   311,   312,    -1,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,    -1,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,    -1,
      -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
      -1,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,   547,   548,    -1,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,   559,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,
      -1,   577,   578,   579,   580,    -1,   582,   583,    -1,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,
      -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,     5,   633,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,
     189,   190,    -1,   192,    -1,   194,    -1,   196,   197,   198,
     199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,
      -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,
     219,   220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,
     239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,
      -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,
     279,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,    -1,   328,
     329,    -1,   331,    -1,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,    -1,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,   358,
     359,    -1,    -1,   362,   363,    -1,   365,   366,   367,    -1,
     369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,    -1,   456,   457,    -1,
     459,   460,   461,    -1,   463,    -1,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,    -1,   478,
     479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,
      -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,
     499,    -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,
      -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,   518,
      -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,   528,
     529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,   547,   548,
      -1,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
      -1,   560,   561,    -1,   563,   564,   565,   566,    -1,    -1,
      -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,
     579,   580,   581,   582,   583,    -1,   585,   586,    -1,   588,
     589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,
     599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,
      -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,   618,
      -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,
     629,   630,    -1,     5,   633,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,   181,
      -1,    -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,
      -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,
     262,   263,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,    -1,   308,   309,   310,   311,
     312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,    -1,   331,
      -1,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,
      -1,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   383,   384,   385,    -1,   387,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,    -1,   456,   457,    -1,   459,   460,   461,
      -1,   463,    -1,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,   479,    -1,    -1,
      -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,   501,
     502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,   526,   527,   528,   529,   530,    -1,
      -1,    -1,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,   547,   548,    -1,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,   559,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,
     582,   583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,
     592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,
      -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,
      -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,
      -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,
       5,   633,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    99,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,   181,    -1,    -1,   184,
     185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,
      -1,   196,   197,   198,   199,    -1,   201,    -1,   203,    -1,
      -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,
      -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,   258,    -1,    -1,   261,   262,   263,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,
     275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,    -1,   314,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
      -1,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
      -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,
     385,    -1,   387,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
      -1,   456,   457,    -1,   459,   460,   461,    -1,   463,    -1,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,
     485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,    -1,   501,   502,   503,   504,
     505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,
     515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,
     525,   526,   527,   528,   529,   530,    -1,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,   547,   548,    -1,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,   559,   560,   561,    -1,   563,   564,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,
      -1,    -1,   577,   578,   579,   580,    -1,   582,   583,    -1,
     585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,
     595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,
     615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,
     625,   626,    -1,   628,   629,   630,    -1,     5,   633,     7,
       8,     9,    10,    11,    12,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,
     208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,    -1,   261,   262,   263,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,    -1,
     308,   309,   310,   311,   312,    -1,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,    -1,   331,    -1,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,    -1,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,
     358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,   547,
     548,    -1,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,
     578,   579,   580,    -1,   582,   583,    -1,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,
      -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,     5,   633,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    35,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,    -1,   178,   179,   180,
     181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,   190,
      -1,   192,    -1,   194,    -1,   196,   197,   198,   199,    -1,
     201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,   210,
     211,    -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,
     221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,    -1,
      -1,    -1,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,
      -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,    -1,
     261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,    -1,   328,   329,    -1,
     331,    -1,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,    -1,    -1,    -1,   358,   359,    -1,
      -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,   370,
     371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,   438,    -1,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,    -1,   456,   457,    -1,   459,   460,
     461,    -1,   463,    -1,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,    -1,   478,   479,    -1,
      -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,
      -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,
     501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,
     511,   512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,
     521,    -1,   523,    -1,   525,   526,   527,   528,   529,   530,
      -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,   547,   548,    -1,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,   559,   560,
     561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,
      -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,   580,
      -1,   582,   583,    -1,   585,   586,    -1,   588,   589,    -1,
      -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,
      -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,
      -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,
      -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,
      -1,     5,   633,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,   263,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,   559,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,     5,   633,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,   181,    -1,    -1,   184,   185,    -1,
      -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,
     197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,
     207,   208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,
      -1,   218,   219,   220,   221,    -1,    -1,   224,   225,   226,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,
      -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,
     247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
      -1,   258,    -1,    -1,   261,   262,   263,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,   276,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,    -1,   314,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
      -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,    -1,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,
      -1,   358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,
     367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,
     387,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,   438,    -1,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,    -1,   456,
     457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
      -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,   486,
      -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,
     497,   498,   499,    -1,   501,   502,   503,   504,   505,    -1,
      -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,
      -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,
     527,   528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
     547,   548,    -1,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,   559,   560,   561,    -1,   563,   564,   565,   566,
      -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,
     577,   578,   579,   580,    -1,   582,   583,    -1,   585,   586,
      -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,
     597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,
     607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,
     617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,
      -1,   628,   629,   630,    -1,     5,   633,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,
     210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
      -1,   261,   262,   263,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,    -1,   308,   309,
     310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
      -1,   331,    -1,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,    -1,    -1,    -1,   358,   359,
      -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,   547,   548,    -1,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,   559,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,
     580,    -1,   582,   583,    -1,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,
     610,    -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,    -1,     5,   633,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,     5,
     633,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,   181,    -1,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,
      -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,    -1,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,    -1,   308,   309,   310,   311,   312,    -1,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,    -1,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,    -1,
      -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
      -1,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,   509,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,   547,   548,    -1,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,    -1,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,
      -1,   577,   578,   579,   580,    -1,   582,   583,    -1,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,
      -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,     5,   633,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,
     189,   190,   191,   192,    -1,   194,    -1,   196,   197,   198,
     199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,
      -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,
     219,   220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,
     239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,
      -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,    -1,   328,
     329,    -1,   331,    -1,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,    -1,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,   358,
     359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,
     369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,    -1,   456,   457,    -1,
     459,   460,   461,    -1,   463,    -1,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,    -1,   478,
     479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,
      -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,
     499,    -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,
      -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,   518,
      -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,   528,
     529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,   547,   548,
      -1,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
      -1,   560,   561,    -1,   563,   564,   565,   566,    -1,    -1,
      -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,
     579,   580,    -1,   582,   583,    -1,   585,   586,    -1,   588,
     589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,
     599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,
      -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,   618,
      -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,
     629,   630,    -1,     5,   633,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,   181,
      -1,    -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,
      -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,    -1,   308,   309,   310,   311,
     312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,    -1,   331,
      -1,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,
      -1,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   383,   384,   385,    -1,   387,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
      -1,   403,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,   438,    -1,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,   454,    -1,   456,   457,    -1,   459,   460,   461,
      -1,   463,    -1,    -1,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,    -1,   478,   479,    -1,    -1,
      -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,   501,
     502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,   526,   527,   528,   529,   530,    -1,
      -1,    -1,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,   547,   548,    -1,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,    -1,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,
     582,   583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,
     592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,
      -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,
      -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,
      -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,
       5,   633,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,   181,    -1,    -1,   184,
     185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,
      -1,   196,   197,   198,   199,    -1,   201,    -1,   203,    -1,
      -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,
      -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,
     225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,
     235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,
      -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,
     275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,    -1,   314,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
      -1,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
      -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,
     365,   366,   367,    -1,   369,   370,   371,    -1,   373,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,
     385,    -1,   387,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,    -1,   403,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,   454,
      -1,   456,   457,    -1,   459,   460,   461,    -1,   463,    -1,
      -1,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,
     485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,
      -1,   496,   497,   498,   499,    -1,   501,   502,   503,   504,
     505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,
     515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,
     525,   526,   527,   528,   529,   530,    -1,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,   547,   548,    -1,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,    -1,   560,   561,    -1,   563,   564,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,
      -1,    -1,   577,   578,   579,   580,    -1,   582,   583,    -1,
     585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,
     595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,
     615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,
     625,   626,    -1,   628,   629,   630,    -1,     5,   633,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,
      -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,
     208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,
     218,   219,   220,   221,    -1,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
     258,    -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,    -1,
     308,   309,   310,   311,   312,    -1,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,    -1,   331,    -1,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,    -1,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,
     358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,    -1,   403,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
     438,    -1,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,   454,    -1,   456,   457,
      -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,    -1,
     478,   479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,
     498,   499,    -1,   501,   502,   503,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,
     528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,   547,
     548,    -1,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,   559,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,
     578,   579,   580,    -1,   582,   583,    -1,   585,   586,    -1,
     588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,
      -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,
      -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,
     628,   629,   630,    -1,     5,   633,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,    -1,   178,   179,   180,
     181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,   190,
      -1,   192,    -1,   194,    -1,   196,   197,   198,   199,    -1,
     201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,   210,
      -1,    -1,   213,   214,    -1,    -1,    -1,   218,   219,   220,
     221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,    -1,
      -1,    -1,    -1,   234,   235,    -1,    -1,    -1,   239,    -1,
      -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,    -1,
     261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,    -1,   328,   329,    -1,
     331,    -1,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,    -1,    -1,    -1,   358,   359,    -1,
      -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,   370,
     371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,    -1,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,   438,    -1,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,   454,    -1,   456,   457,    -1,   459,   460,
     461,    -1,   463,    -1,    -1,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,    -1,   478,   479,    -1,
      -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,   490,
      -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,    -1,
     501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,    -1,
     511,   512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,
     521,    -1,   523,    -1,   525,   526,   527,   528,   529,   530,
      -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,   547,   548,    -1,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,   560,
     561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,
      -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,   580,
      -1,   582,   583,    -1,   585,   586,    -1,   588,   589,    -1,
      -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,   600,
      -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,
      -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,
      -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,   630,
      -1,     5,   633,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,   181,    -1,    -1,
     184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,   213,
     214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,   373,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,
     384,   385,    -1,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,    -1,   403,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,   438,    -1,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
     454,    -1,   456,   457,    -1,   459,   460,   461,    -1,   463,
      -1,    -1,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,   483,
     484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,   526,   527,   528,   529,   530,    -1,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,    -1,
      -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,    -1,
      -1,   625,   626,    -1,   628,   629,   630,    -1,     5,   633,
       7,     8,     9,    10,    11,    12,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,   181,    -1,    -1,   184,   185,    -1,
      -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,   196,
     197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,
     207,   208,    -1,   210,    -1,    -1,   213,   214,    -1,    -1,
      -1,   218,   219,   220,   221,    -1,    -1,   224,   225,   226,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,    -1,
      -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,
     247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
      -1,   258,    -1,    -1,   261,   262,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,   276,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,    -1,   314,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
      -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,    -1,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,
      -1,   358,   359,    -1,    -1,    -1,   363,    -1,   365,   366,
     367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,    -1,
     387,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,    -1,   403,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,   438,    -1,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,   454,    -1,   456,
     457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
      -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,   486,
      -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,   496,
     497,   498,   499,    -1,   501,   502,   503,   504,   505,    -1,
      -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,
      -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,   526,
     527,   528,   529,   530,    -1,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
     547,   548,    -1,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,    -1,   560,   561,    -1,   563,   564,   565,   566,
      -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,
     577,   578,   579,   580,    -1,   582,   583,    -1,   585,   586,
      -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,    -1,
     597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,
     607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,
     617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,   626,
      -1,   628,   629,   630,    -1,     5,   633,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,   189,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,    -1,
     210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,    -1,
      -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,    -1,   308,   309,
     310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
      -1,   331,    -1,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,    -1,    -1,    -1,   358,   359,
      -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,   438,    -1,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,   454,    -1,   456,   457,    -1,   459,
     460,   461,    -1,   463,    -1,    -1,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,    -1,   478,   479,
      -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,   499,
      -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,   526,   527,   528,   529,
     530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,   547,   548,    -1,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,   579,
     580,    -1,   582,   583,    -1,   585,   586,    -1,   588,   589,
      -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,   599,
     600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,
     610,    -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,
      -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,   629,
     630,    -1,     5,   633,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,   181,    -1,
      -1,   184,   185,    -1,    -1,    -1,   189,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,   207,   208,    -1,   210,    -1,    -1,
     213,   214,    -1,    -1,    -1,   218,   219,   220,   221,    -1,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,   235,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,   258,    -1,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,   358,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
     373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     383,   384,   385,    -1,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,    -1,
     403,   404,   405,   406,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,   438,    -1,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,   454,    -1,   456,   457,    -1,   459,   460,   461,    -1,
     463,    -1,    -1,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,    -1,   478,   479,    -1,    -1,    -1,
     483,   484,   485,   486,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,   526,   527,   528,   529,   530,    -1,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,   577,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,   588,   589,    -1,    -1,   592,
      -1,    -1,   595,    -1,   597,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,    -1,
      -1,    -1,   625,   626,    -1,   628,   629,   630,    -1,     5,
     633,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,   181,    -1,    -1,   184,   185,
      -1,    -1,    -1,   189,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,
      -1,   207,   208,    -1,   210,    -1,    -1,   213,   214,    -1,
      -1,    -1,   218,   219,   220,   221,    -1,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,   235,
      -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,   258,    -1,    -1,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,    -1,   308,   309,   310,   311,   312,    -1,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,    -1,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,    -1,
      -1,    -1,   358,   359,    -1,    -1,    -1,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   383,   384,   385,
      -1,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,    -1,   403,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,   438,    -1,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,   454,    -1,
     456,   457,    -1,   459,   460,   461,    -1,   463,    -1,    -1,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,    -1,   478,   479,    -1,    -1,    -1,   483,   484,   485,
     486,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
     496,   497,   498,   499,    -1,   501,   502,   503,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
     526,   527,   528,   529,   530,    -1,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,   547,   548,    -1,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,    -1,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,
      -1,   577,   578,   579,   580,    -1,   582,   583,    -1,   585,
     586,    -1,   588,   589,    -1,    -1,   592,    -1,    -1,   595,
      -1,   597,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,
      -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,
     616,   617,   618,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,   628,   629,   630,    -1,     5,   633,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,   181,    -1,    -1,   184,   185,    -1,    -1,    -1,
     189,   190,    -1,   192,    -1,   194,    -1,   196,   197,   198,
     199,    -1,   201,    -1,   203,    -1,    -1,    -1,   207,   208,
      -1,   210,    -1,    -1,   213,   214,    -1,    -1,    -1,   218,
     219,   220,   221,    -1,    -1,   224,   225,   226,    -1,    -1,
     229,    -1,    -1,    -1,    -1,   234,   235,    -1,    -1,    -1,
     239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,   258,
      -1,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,    -1,   328,
     329,    -1,   331,    -1,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,    -1,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,   358,
     359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,
     369,   370,   371,    -1,   373,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   383,   384,   385,    -1,   387,   388,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,    -1,   403,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,   438,
      -1,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,   454,    -1,   456,   457,    -1,
     459,   460,   461,    -1,   463,    -1,    -1,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,    -1,   478,
     479,    -1,    -1,    -1,   483,   484,   485,   486,    -1,    -1,
      -1,   490,    -1,    -1,    -1,   494,    -1,   496,   497,   498,
     499,    -1,   501,   502,   503,   504,   505,    -1,    -1,    -1,
      -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,   518,
      -1,    -1,   521,    -1,   523,    -1,   525,   526,   527,   528,
     529,   530,    -1,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,   547,   548,
      -1,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
      -1,   560,   561,    -1,   563,   564,   565,   566,    -1,    -1,
      -1,    -1,    -1,   572,   573,    -1,    -1,    -1,   577,   578,
     579,   580,    -1,   582,   583,    -1,   585,   586,    -1,   588,
     589,    -1,    -1,   592,    -1,    -1,   595,    -1,   597,    -1,
     599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,
      -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,   618,
      -1,    -1,    -1,    -1,    -1,    -1,   625,   626,    -1,   628,
     629,   630,    -1,     5,   633,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    -1,
      -1,    23,    24,    25,    26,    27,    -1,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,
      52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    -1,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,
     142,   143,    -1,   145,   146,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,    -1,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,   177,   178,   179,   180,   181,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,   214,    -1,    -1,    -1,   218,   219,   220,   221,
     222,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,    -1,   234,    -1,    -1,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,   248,    -1,    -1,   251,
      -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,   281,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,    -1,   308,   309,   310,   311,
     312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,    -1,   331,
      -1,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,    -1,    -1,    -1,    -1,   359,    -1,    -1,
      -1,   363,    -1,   365,   366,   367,    -1,   369,   370,   371,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,    -1,    -1,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,    -1,    -1,
      -1,    -1,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,    -1,    -1,   440,    -1,
     442,   443,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
     462,   463,    -1,    -1,    -1,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,    -1,   478,    -1,    -1,    -1,
      -1,   483,   484,   485,    -1,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,    -1,   497,    -1,   499,    -1,   501,
      -1,    -1,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,    -1,   527,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,   547,   548,    -1,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,    -1,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,    -1,    -1,    -1,   578,   579,   580,    -1,
     582,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
     592,    -1,    -1,   595,    -1,    -1,    -1,   599,   600,    -1,
      -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,
      -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,   621,
      -1,    -1,    -1,   625,    -1,    -1,   628,    -1,   630,    -1,
       5,   633,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    -1,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
     145,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,   177,   178,   179,   180,   181,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,    -1,   192,    -1,   194,
      -1,   196,   197,   198,   199,    -1,   201,    -1,   203,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,   214,
      -1,    -1,    -1,   218,   219,   220,   221,   222,    -1,   224,
     225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,
      -1,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,
      -1,   246,   247,   248,    -1,    -1,   251,    -1,    -1,    -1,
     255,    -1,    -1,   258,   259,    -1,   261,   262,    -1,    -1,
      -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,
     275,   276,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,   306,    -1,   308,   309,   310,   311,   312,    -1,   314,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,    -1,
      -1,   346,   347,    -1,    -1,   350,   351,   352,   353,   354,
      -1,    -1,    -1,    -1,   359,    -1,    -1,    -1,   363,    -1,
     365,   366,   367,    -1,   369,   370,   371,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,
     385,    -1,    -1,   388,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,    -1,    -1,    -1,    -1,   404,
     405,    -1,   407,    -1,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,
     425,   426,   427,   428,    -1,    -1,   431,   432,   433,   434,
     435,    -1,   437,    -1,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,    -1,    -1,
      -1,   456,    -1,    -1,   459,   460,   461,   462,   463,    -1,
      -1,    -1,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,    -1,   478,    -1,    -1,    -1,    -1,   483,   484,
     485,    -1,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,
      -1,    -1,   497,    -1,   499,    -1,   501,    -1,    -1,   504,
     505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,
     515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,
     525,    -1,   527,   528,   529,   530,    -1,    -1,    -1,    -1,
     535,    -1,   537,   538,   539,   540,   541,   542,    -1,    -1,
     545,   546,   547,   548,    -1,   550,   551,    -1,    -1,   554,
     555,   556,   557,    -1,    -1,   560,   561,    -1,   563,   564,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,
      -1,    -1,    -1,   578,   579,   580,    -1,   582,   583,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,   592,    -1,    -1,
     595,    -1,    -1,    -1,   599,   600,    -1,    -1,    -1,    -1,
      -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,
     615,   616,   617,   618,   619,    -1,   621,    -1,    -1,    -1,
     625,    -1,    -1,   628,    -1,   630,    -1,     5,   633,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    -1,    -1,    23,    24,    25,    26,    27,
      -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,
      -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,
      -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      -1,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
      -1,    -1,    -1,   141,   142,   143,    -1,   145,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,   177,
     178,   179,   180,   181,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   190,    -1,   192,    -1,   194,    -1,   196,   197,
     198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,   214,    -1,    -1,    -1,
     218,   219,   220,   221,   222,    -1,   224,   225,   226,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,
      -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,
     248,    -1,    -1,   251,    -1,    -1,    -1,   255,    -1,    -1,
     258,   259,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,
     268,   269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,
      -1,    -1,    -1,   281,    -1,    -1,   284,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,    -1,   304,   305,   306,    -1,
     308,   309,   310,   311,   312,    -1,   314,   315,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,    -1,    -1,
     328,   329,    -1,   331,    -1,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,    -1,    -1,   346,   347,
      -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,
      -1,   359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,
      -1,   369,   370,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   384,   385,    -1,    -1,
     388,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,    -1,    -1,    -1,    -1,   404,   405,    -1,   407,
      -1,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,
     428,    -1,    -1,   431,   432,   433,   434,   435,    -1,   437,
      -1,    -1,   440,    -1,   442,   443,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,    -1,    -1,    -1,   456,    -1,
      -1,   459,   460,   461,   462,   463,    -1,    -1,    -1,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,    -1,
     478,    -1,    -1,    -1,    -1,   483,   484,   485,    -1,    -1,
      -1,    -1,   490,    -1,    -1,    -1,   494,    -1,    -1,   497,
      -1,   499,    -1,   501,    -1,    -1,   504,   505,    -1,    -1,
      -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,
     518,    -1,    -1,   521,    -1,   523,    -1,   525,    -1,   527,
     528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,
     538,   539,   540,   541,   542,    -1,    -1,   545,   546,   547,
     548,    -1,   550,   551,    -1,    -1,   554,   555,   556,   557,
      -1,    -1,   560,   561,    -1,   563,   564,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,    -1,
     578,   579,   580,    -1,   582,   583,    -1,   585,   586,    -1,
      -1,    -1,    -1,    -1,   592,    -1,    -1,   595,    -1,    -1,
      -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,
      -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,
     618,   619,    -1,   621,    -1,    -1,    -1,   625,    -1,    -1,
     628,    -1,   630,    -1,     5,   633,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      -1,    -1,    23,    24,    25,    26,    27,    -1,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,
      51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    -1,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,    -1,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,   177,   178,   179,   180,
     181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,   192,    -1,   194,    -1,   196,   197,   198,   199,    -1,
     201,    -1,   203,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,   214,    -1,    -1,    -1,   218,   219,   220,
     221,   222,    -1,   224,   225,   226,    -1,    -1,   229,    -1,
      -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,   239,    -1,
      -1,    -1,   243,   244,    -1,   246,   247,   248,    -1,    -1,
     251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,    -1,
     261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,
     271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,
     281,    -1,    -1,   284,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,    -1,   328,   329,    -1,
     331,    -1,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,
     351,   352,   353,   354,    -1,    -1,    -1,    -1,   359,    -1,
      -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,   370,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   384,   385,    -1,    -1,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,    -1,
      -1,    -1,    -1,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,    -1,   420,
      -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,
     431,   432,   433,   434,   435,    -1,   437,    -1,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,    -1,    -1,   456,    -1,    -1,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,    -1,   478,    -1,    -1,
      -1,    -1,   483,   484,   485,    -1,    -1,    -1,    -1,   490,
      -1,    -1,    -1,   494,    -1,    -1,   497,    -1,   499,    -1,
     501,    -1,    -1,   504,   505,    -1,    -1,    -1,    -1,    -1,
     511,   512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,
     521,    -1,   523,    -1,   525,    -1,   527,   528,   529,   530,
      -1,    -1,    -1,    -1,   535,    -1,   537,   538,   539,   540,
     541,   542,    -1,    -1,   545,   546,   547,   548,    -1,   550,
     551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,   560,
     561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,
      -1,   572,   573,    -1,    -1,    -1,    -1,   578,   579,   580,
      -1,   582,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,   592,    -1,    -1,   595,    -1,    -1,    -1,   599,   600,
      -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,
      -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,
     621,    -1,    -1,    -1,   625,    -1,    -1,   628,    -1,   630,
      -1,     5,   633,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    23,
      24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,
      54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      -1,    75,    -1,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    -1,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,    -1,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,   177,   178,   179,   180,   181,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,   192,    -1,
     194,    -1,   196,   197,   198,   199,    -1,   201,    -1,   203,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
     214,    -1,    -1,    -1,   218,   219,   220,   221,   222,    -1,
     224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,    -1,    -1,    -1,    -1,   239,    -1,    -1,    -1,   243,
     244,    -1,   246,   247,   248,    -1,    -1,   251,    -1,    -1,
      -1,   255,    -1,    -1,   258,   259,    -1,   261,   262,    -1,
      -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,   273,
      -1,   275,   276,    -1,    -1,    -1,    -1,   281,    -1,    -1,
     284,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,    -1,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,    -1,
     314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
      -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,   353,
     354,    -1,    -1,    -1,    -1,   359,    -1,    -1,    -1,   363,
      -1,   365,   366,   367,    -1,   369,   370,   371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     384,   385,    -1,    -1,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,    -1,    -1,    -1,    -1,    -1,
     404,   405,    -1,   407,    -1,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,    -1,
     424,   425,   426,   427,   428,    -1,    -1,   431,   432,   433,
     434,   435,    -1,   437,    -1,    -1,   440,    -1,   442,   443,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,    -1,
      -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,   463,
      -1,    -1,    -1,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,    -1,   478,    -1,    -1,    -1,    -1,   483,
     484,   485,    -1,    -1,    -1,    -1,   490,    -1,    -1,    -1,
     494,    -1,    -1,   497,    -1,   499,    -1,   501,    -1,    -1,
     504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,   513,
      -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,   523,
      -1,   525,    -1,   527,   528,   529,   530,    -1,    -1,    -1,
      -1,   535,    -1,   537,   538,   539,   540,   541,   542,    -1,
      -1,   545,   546,   547,   548,    -1,   550,   551,    -1,    -1,
     554,   555,   556,   557,    -1,    -1,   560,   561,    -1,   563,
     564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,   573,
      -1,    -1,    -1,    -1,   578,   579,   580,    -1,   582,   583,
      -1,   585,   586,    -1,    -1,    -1,    -1,    -1,   592,    -1,
      -1,   595,    -1,    -1,    -1,   599,   600,    -1,    -1,    -1,
      -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,    -1,
     614,   615,   616,   617,   618,    -1,    -1,   621,    -1,    -1,
      -1,   625,    -1,    -1,   628,    -1,   630,    -1,     5,   633,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    -1,    -1,    23,    24,    25,    26,
      27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    -1,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,    -1,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
     177,   178,   179,   180,   181,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   190,    -1,   192,    -1,   194,    -1,   196,
     197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,   214,    -1,    -1,
      -1,   218,   219,   220,   221,   222,    -1,   224,   225,   226,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   234,    -1,    -1,
      -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,   246,
     247,   248,    -1,    -1,   251,    -1,    -1,    -1,   255,    -1,
      -1,   258,   259,    -1,   261,   262,    -1,    -1,    -1,    -1,
      -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,   276,
      -1,    -1,    -1,    -1,   281,    -1,    -1,   284,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,    -1,   304,   305,   306,
      -1,   308,   309,   310,   311,   312,    -1,   314,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
      -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,    -1,    -1,   346,
     347,    -1,    -1,   350,   351,   352,   353,   354,    -1,    -1,
      -1,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,   366,
     367,    -1,   369,   370,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,    -1,
      -1,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,    -1,    -1,    -1,    -1,    -1,   404,   405,    -1,
     407,    -1,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,   426,
     427,   428,    -1,    -1,   431,   432,   433,   434,   435,    -1,
     437,    -1,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,    -1,    -1,    -1,   456,
      -1,    -1,   459,   460,   461,   462,   463,    -1,    -1,    -1,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
      -1,   478,    -1,    -1,    -1,    -1,   483,   484,   485,    -1,
      -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,    -1,
     497,    -1,   499,    -1,   501,    -1,    -1,   504,   505,    -1,
      -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,   516,
      -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,    -1,
     527,   528,   529,   530,    -1,    -1,    -1,    -1,   535,    -1,
     537,   538,   539,   540,   541,   542,    -1,    -1,   545,   546,
     547,   548,    -1,   550,   551,    -1,    -1,   554,   555,   556,
     557,    -1,    -1,   560,   561,    -1,   563,   564,   565,   566,
      -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,    -1,
      -1,   578,   579,   580,    -1,   582,   583,    -1,   585,   586,
      -1,    -1,    -1,    -1,    -1,   592,    -1,    -1,   595,    -1,
      -1,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,    -1,
     607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,   616,
     617,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,    -1,
      -1,   628,    -1,   630,    -1,     5,   633,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    -1,    -1,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    -1,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,    -1,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,   177,   178,   179,
     180,   181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,   192,    -1,   194,    -1,   196,   197,   198,   199,
      -1,   201,    -1,   203,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,   214,    -1,    -1,    -1,   218,   219,
     220,   221,   222,    -1,   224,   225,   226,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,   239,
      -1,    -1,    -1,   243,   244,    -1,   246,   247,   248,    -1,
      -1,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,   259,
      -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,   269,
      -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,    -1,
      -1,   281,    -1,    -1,   284,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,    -1,   304,   305,   306,    -1,   308,   309,
     310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,    -1,   328,   329,
      -1,   331,    -1,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,    -1,    -1,   346,   347,    -1,    -1,
     350,   351,   352,   353,   354,    -1,    -1,    -1,    -1,   359,
      -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,   369,
     370,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   384,   385,    -1,    -1,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
      -1,    -1,    -1,    -1,   404,   405,    -1,   407,    -1,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,    -1,
     420,    -1,    -1,    -1,   424,   425,   426,   427,   428,    -1,
      -1,   431,   432,   433,   434,   435,    -1,   437,    -1,    -1,
     440,    -1,   442,   443,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,    -1,    -1,    -1,   456,    -1,    -1,   459,
     460,   461,   462,   463,    -1,    -1,    -1,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,    -1,   478,    -1,
      -1,    -1,    -1,   483,   484,   485,    -1,    -1,    -1,    -1,
     490,    -1,    -1,    -1,   494,    -1,    -1,   497,    -1,   499,
      -1,   501,    -1,    -1,   504,   505,    -1,    -1,    -1,    -1,
      -1,   511,   512,   513,    -1,   515,   516,    -1,   518,    -1,
      -1,   521,    -1,   523,    -1,   525,    -1,   527,   528,   529,
     530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,   539,
     540,   541,   542,    -1,    -1,   545,   546,   547,   548,    -1,
     550,   551,    -1,    -1,   554,   555,   556,   557,    -1,    -1,
     560,   561,    -1,   563,   564,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,   573,    -1,    -1,    -1,    -1,   578,   579,
     580,    -1,   582,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,   592,    -1,    -1,   595,    -1,    -1,    -1,   599,
     600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,
     610,    -1,    -1,    -1,   614,   615,   616,   617,   618,    -1,
      -1,   621,    -1,    -1,    -1,   625,    -1,    -1,   628,    -1,
     630,    -1,     5,   633,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,
      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    -1,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,   177,   178,   179,   180,   181,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,   192,
      -1,   194,    -1,   196,   197,   198,   199,    -1,   201,    -1,
     203,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,   214,    -1,    -1,    -1,   218,   219,   220,   221,   222,
      -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,    -1,    -1,    -1,    -1,   239,    -1,    -1,    -1,
     243,   244,    -1,   246,   247,   248,    -1,    -1,   251,    -1,
      -1,    -1,   255,    -1,    -1,   258,   259,    -1,   261,   262,
      -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,    -1,
     273,    -1,   275,   276,    -1,    -1,    -1,    -1,   281,    -1,
      -1,   284,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
      -1,   304,   305,   306,    -1,   308,   309,   310,   311,   312,
      -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,    -1,   328,   329,    -1,   331,    -1,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,   352,
     353,   354,    -1,    -1,    -1,    -1,   359,    -1,    -1,    -1,
     363,    -1,   365,   366,   367,    -1,   369,   370,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   384,   385,    -1,    -1,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,    -1,    -1,    -1,    -1,
      -1,   404,   405,    -1,   407,    -1,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,    -1,
      -1,   424,   425,   426,   427,   428,    -1,    -1,   431,   432,
     433,   434,   435,    -1,   437,    -1,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
      -1,    -1,    -1,   456,    -1,    -1,   459,   460,   461,   462,
     463,    -1,    -1,    -1,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,    -1,   478,    -1,    -1,    -1,    -1,
     483,   484,   485,    -1,    -1,    -1,    -1,   490,    -1,    -1,
      -1,   494,    -1,    -1,   497,    -1,   499,    -1,   501,    -1,
      -1,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,   512,
     513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,    -1,
     523,    -1,   525,    -1,   527,   528,   529,   530,    -1,    -1,
      -1,    -1,   535,    -1,   537,   538,   539,   540,   541,   542,
      -1,    -1,   545,   546,   547,   548,    -1,   550,   551,    -1,
      -1,   554,   555,   556,   557,    -1,    -1,   560,   561,    -1,
     563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
     573,    -1,    -1,    -1,    -1,   578,   579,   580,    -1,   582,
     583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,   592,
      -1,    -1,   595,    -1,    -1,    -1,   599,   600,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,    -1,
      -1,   614,   615,   616,   617,   618,    -1,    -1,   621,    -1,
      -1,    -1,   625,    -1,    -1,   628,    -1,   630,    -1,     5,
     633,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    -1,    -1,    23,    24,    25,
      26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,
      -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    -1,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,    -1,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,    -1,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,   177,   178,   179,   180,   181,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,   192,    -1,   194,    -1,
     196,   197,   198,   199,    -1,   201,    -1,   203,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,   214,    -1,
      -1,    -1,   218,   219,   220,   221,   222,    -1,   224,   225,
     226,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,    -1,
      -1,    -1,    -1,   239,    -1,    -1,    -1,   243,   244,    -1,
     246,   247,   248,    -1,    -1,   251,    -1,    -1,    -1,   255,
      -1,    -1,   258,   259,    -1,   261,   262,    -1,    -1,    -1,
      -1,    -1,   268,   269,    -1,   271,    -1,   273,    -1,   275,
     276,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,    -1,   304,   305,
     306,    -1,   308,   309,   310,   311,   312,    -1,   314,   315,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
      -1,    -1,   328,   329,    -1,   331,    -1,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,    -1,    -1,
     346,   347,    -1,    -1,   350,   351,   352,   353,   354,    -1,
      -1,    -1,    -1,   359,    -1,    -1,    -1,   363,    -1,   365,
     366,   367,    -1,   369,   370,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   384,   385,
      -1,    -1,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,    -1,    -1,    -1,    -1,    -1,   404,   405,
      -1,   407,    -1,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,    -1,   420,    -1,    -1,    -1,   424,   425,
     426,   427,   428,    -1,    -1,   431,   432,   433,   434,   435,
      -1,   437,    -1,    -1,   440,    -1,   442,   443,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,    -1,    -1,    -1,
     456,    -1,    -1,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,    -1,   478,    -1,    -1,    -1,    -1,   483,   484,   485,
      -1,    -1,    -1,    -1,   490,    -1,    -1,    -1,   494,    -1,
      -1,   497,    -1,   499,    -1,   501,    -1,    -1,   504,   505,
      -1,    -1,    -1,    -1,    -1,   511,   512,   513,    -1,   515,
     516,    -1,   518,    -1,    -1,   521,    -1,   523,    -1,   525,
      -1,   527,   528,   529,   530,    -1,    -1,    -1,    -1,   535,
      -1,   537,   538,   539,   540,   541,   542,    -1,    -1,   545,
     546,   547,   548,    -1,   550,   551,    -1,    -1,   554,   555,
     556,   557,    -1,    -1,   560,   561,    -1,   563,   564,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,   573,    -1,    -1,
      -1,    -1,   578,   579,   580,    -1,   582,   583,    -1,   585,
     586,    -1,    -1,    -1,    -1,    -1,   592,    -1,    -1,   595,
      -1,    -1,    -1,   599,   600,    -1,    -1,    -1,    -1,    -1,
      -1,   607,    -1,    -1,   610,    -1,    -1,    -1,   614,   615,
     616,   617,   618,    -1,    -1,   621,    -1,    -1,    -1,   625,
      -1,    -1,   628,    -1,   630,    -1,     5,   633,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    -1,    -1,    23,    24,    25,    26,    27,    -1,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
      -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    -1,    75,    -1,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    -1,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
      -1,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,   177,   178,
     179,   180,   181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,   192,    -1,   194,    -1,   196,   197,   198,
     199,    -1,   201,    -1,   203,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,   214,    -1,    -1,    -1,   218,
     219,   220,   221,   222,    -1,   224,   225,   226,    -1,    -1,
     229,    -1,    -1,    -1,    -1,   234,    -1,    -1,    -1,    -1,
     239,    -1,    -1,    -1,   243,   244,    -1,   246,   247,   248,
      -1,    -1,   251,    -1,    -1,    -1,   255,    -1,    -1,   258,
     259,    -1,   261,   262,    -1,    -1,    -1,    -1,    -1,   268,
     269,    -1,   271,    -1,   273,    -1,   275,   276,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,    -1,   304,   305,   306,    -1,   308,
     309,   310,   311,   312,    -1,   314,   315,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,    -1,   328,
     329,    -1,   331,    -1,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,    -1,    -1,   346,   347,    -1,
      -1,   350,   351,   352,   353,   354,    -1,    -1,    -1,    -1,
     359,    -1,    -1,    -1,   363,    -1,   365,   366,   367,    -1,
     369,   370,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   384,   385,    -1,    -1,   388,
      -1,   390,   391,   392,   393,   394,   395,   396,   397,   398,
      -1,    -1,    -1,    -1,    -1,   404,   405,    -1,   407,    -1,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
      -1,   420,    -1,    -1,    -1,   424,   425,   426,   427,   428,
      -1,    -1,   431,   432,   433,   434,   435,    -1,   437,    -1,
      -1,   440,    -1,   442,   443,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,    -1,    -1,    -1,   456,    -1,    -1,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,    -1,   478,
      -1,    -1,    -1,    -1,   483,   484,   485,    -1,    -1,    -1,
      -1,   490,    -1,    -1,    -1,   494,    -1,    -1,   497,    -1,
     499,    -1,   501,    -1,    -1,   504,   505,    -1,    -1,    -1,
      -1,    -1,   511,   512,   513,    -1,   515,   516,    -1,   518,
      -1,    -1,   521,    -1,   523,    -1,   525,    -1,   527,   528,
     529,   530,    -1,    -1,    -1,    -1,   535,    -1,   537,   538,
     539,   540,   541,   542,    -1,    -1,   545,   546,   547,   548,
      -1,   550,   551,    -1,    -1,   554,   555,   556,   557,    -1,
      -1,   560,   561,    -1,   563,   564,   565,   566,    -1,    -1,
      -1,    -1,    -1,   572,   573,    -1,    -1,    -1,    -1,   578,
     579,   580,    -1,   582,   583,    -1,   585,   586,    -1,    -1,
      -1,    -1,    -1,   592,    -1,    -1,   595,    -1,    -1,    -1,
     599,   600,    -1,    -1,    -1,    -1,    -1,    -1,   607,    -1,
      -1,   610,    -1,    -1,    -1,   614,   615,   616,   617,   618,
      -1,    -1,   621,    -1,    -1,    -1,   625,    -1,    -1,   628,
      -1,   630,    -1,     5,   633,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    -1,
      -1,    23,    24,    25,    26,    27,    -1,    -1,    -1,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,
      62,    63,    64,    -1,    66,    67,    -1,    69,    70,    -1,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    -1,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,    -1,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,    -1,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,   181,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
     192,    -1,   194,    -1,   196,   197,   198,   199,    -1,   201,
      -1,   203,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,   214,    -1,    -1,    -1,   218,   219,   220,   221,
      -1,    -1,   224,   225,   226,    -1,    -1,   229,    -1,    -1,
      -1,    -1,   234,    -1,    -1,    -1,    -1,   239,    -1,    -1,
      -1,   243,   244,    -1,   246,   247,    -1,    -1,    -1,   251,
      -1,    -1,    -1,   255,    -1,    -1,   258,    -1,    -1,   261,
     262,    -1,    -1,    -1,    -1,    -1,   268,   269,    -1,   271,
      -1,   273,    -1,   275,   276,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   284,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,    -1,   304,   305,   306,    -1,   308,   309,   310,   311,
     312,    -1,   314,   315,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,    -1,    -1,   328,   329,    -1,   331,
      -1,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,    -1,    -1,   346,   347,    -1,    -1,   350,   351,
     352,   353,   354,    -1,    -1,    -1,    -1,   359,    -1,    -1,
      -1,   363,    -1,   365,   366,   367,    -1,   369,   370,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   384,   385,    -1,    -1,   388,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,    -1,    -1,
      -1,    -1,   404,   405,    -1,   407,    -1,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,    -1,   420,    -1,
      -1,    -1,   424,   425,   426,   427,   428,    -1,    -1,   431,
     432,   433,   434,   435,    -1,   437,    -1,    -1,   440,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,    -1,    -1,   456,    -1,    -1,   459,   460,   461,
      -1,   463,    -1,    -1,    -1,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,    -1,   478,    -1,    -1,    -1,
      -1,   483,   484,   485,    -1,    -1,    -1,    -1,   490,    -1,
      -1,    -1,   494,    -1,    -1,   497,    -1,   499,    -1,   501,
      -1,    -1,   504,   505,    -1,    -1,    -1,    -1,    -1,   511,
     512,   513,    -1,   515,   516,    -1,   518,    -1,    -1,   521,
      -1,   523,    -1,   525,    -1,   527,   528,   529,   530,    -1,
      -1,    -1,    -1,   535,    -1,   537,   538,   539,   540,   541,
     542,    -1,    -1,   545,   546,   547,   548,    -1,   550,   551,
      -1,    -1,   554,   555,   556,   557,    -1,    -1,   560,   561,
      -1,   563,   564,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,   573,    -1,    -1,    -1,    -1,   578,   579,   580,    -1,
     582,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
     592,    -1,    -1,   595,    -1,    -1,    -1,   599,   600,    -1,
      -1,    -1,    -1,    -1,    -1,   607,    -1,    -1,   610,    -1,
      -1,    -1,   614,   615,   616,   617,   618,    -1,    -1,    -1,
      -1,    -1,    -1,   625,    -1,    -1,   628,    -1,   630,    -1,
      -1,   633
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    15,    30,    34,    48,    49,    56,    60,    61,
      76,    94,   116,   125,   126,   127,   138,   139,   151,   165,
     184,   200,   202,   207,   210,   233,   235,   253,   270,   274,
     372,   389,   403,   414,   436,   439,   441,   444,   454,   455,
     464,   466,   474,   480,   488,   493,   495,   526,   534,   577,
     589,   593,   596,   601,   629,   644,   655,   658,   659,   660,
     661,   662,   664,   669,   671,   692,   724,   751,   758,   759,
     878,  1042,  1086,  1088,  1102,  1105,  1110,  1112,  1113,  1118,
    1121,  1126,  1133,  1145,  1146,  1307,  1309,  1324,  1327,  1353,
    1362,  1373,  1380,  1394,  1398,  1401,  1411,  1417,  1421,  1423,
    1424,  1476,  1504,  1510,  1512,  1519,  1522,  1549,  1555,  1556,
    1557,  1558,  1616,  1624,  1625,    11,   103,   122,   194,   275,
     408,   486,   551,   553,   599,  1580,  1581,  1582,  1585,   271,
     360,  1120,  1550,   559,  1467,   227,     5,     7,     8,     9,
      10,    11,    14,    18,    21,    23,    24,    25,    26,    27,
      28,    30,    34,    38,    41,    42,    43,    45,    47,    48,
      51,    54,    55,    57,    58,    60,    62,    63,    64,    65,
      66,    67,    69,    70,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    82,    83,    85,    86,    87,    88,    89,
      93,    96,    98,   101,   105,   106,   107,   110,   115,   116,
     121,   122,   124,   128,   130,   131,   132,   133,   134,   138,
     141,   142,   143,   147,   149,   150,   152,   153,   154,   157,
     158,   160,   161,   162,   163,   164,   165,   168,   169,   170,
     171,   172,   175,   176,   178,   179,   180,   181,   184,   185,
     189,   190,   192,   194,   196,   197,   198,   199,   201,   203,
     207,   208,   210,   213,   214,   218,   219,   220,   221,   224,
     225,   226,   229,   234,   235,   239,   243,   244,   246,   247,
     251,   254,   255,   258,   261,   262,   268,   269,   271,   273,
     275,   276,   284,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     304,   305,   306,   308,   309,   310,   311,   312,   314,   315,
     320,   321,   322,   323,   324,   325,   328,   329,   331,   333,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   346,
     347,   350,   351,   352,   353,   354,   358,   359,   363,   365,
     366,   367,   369,   370,   371,   373,   383,   384,   385,   387,
     388,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   401,   403,   404,   405,   407,   409,   410,   411,   412,
     413,   415,   416,   417,   420,   424,   425,   426,   427,   428,
     431,   432,   433,   434,   435,   437,   438,   440,   441,   442,
     445,   446,   447,   448,   449,   450,   451,   452,   454,   456,
     457,   459,   460,   461,   463,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   478,   479,   483,   484,
     485,   486,   490,   494,   496,   497,   498,   499,   501,   502,
     503,   504,   505,   511,   512,   513,   515,   516,   518,   521,
     523,   525,   526,   527,   528,   529,   530,   534,   535,   537,
     538,   539,   540,   541,   542,   545,   546,   547,   548,   550,
     551,   554,   555,   556,   557,   560,   561,   563,   564,   565,
     566,   572,   573,   577,   578,   579,   580,   582,   583,   585,
     586,   588,   589,   592,   595,   597,   599,   600,   607,   610,
     614,   615,   616,   617,   618,   625,   626,   628,   629,   630,
     633,   718,  1465,  1470,  1474,  1475,   304,   445,   550,   553,
    1506,  1506,   625,  1551,   103,   193,   275,   486,   506,   551,
     556,   591,   599,   701,   930,   931,   932,  1020,  1021,  1022,
    1363,  1308,   103,   162,   194,   227,   275,   408,   486,   551,
     556,   574,   599,   614,  1320,  1470,  1120,    98,   523,   760,
     717,   652,  1462,  1464,  1470,   670,  1325,   395,    82,   416,
    1422,   106,   227,   630,  1429,  1506,  1120,   879,  1470,  1418,
     474,   599,  1506,  1120,  1328,  1412,   509,   748,   752,   753,
    1470,   717,  1551,  1470,  1151,  1153,  1154,  1155,  1477,  1381,
     752,   498,   572,   498,   553,  1375,   395,  1511,  1354,  1470,
      30,    76,   149,   403,   425,   466,   526,  1618,   644,  1147,
    1148,     0,   151,   656,   403,   171,   189,   390,  1399,  1462,
    1470,   155,  1056,  1470,   155,   718,   204,   718,   263,  1467,
    1470,  1472,   826,   827,   830,   853,  1470,  1462,   717,   162,
    1048,  1580,  1506,  1551,  1127,   725,   652,   570,   179,  1103,
    1114,    17,  1552,   222,   933,   204,  1472,   828,   853,   717,
     379,  1577,  1581,  1582,  1583,  1584,  1585,   553,   931,   227,
     227,   227,   223,   282,   417,  1371,  1372,     7,    21,    27,
      33,    35,    36,    37,    39,    52,    53,    58,    59,    66,
      69,    88,    91,    92,    97,    99,   102,   103,   108,   109,
     110,   115,   117,   120,   166,   173,   174,   182,   189,   197,
     199,   205,   211,   218,   222,   233,   236,   260,   268,   279,
     307,   313,   324,   328,   330,   334,   335,   336,   337,   338,
     345,   355,   356,   357,   361,   362,   367,   386,   392,   397,
     398,   400,   415,   443,   444,   463,   465,   471,   472,   478,
     532,   533,   539,   543,   544,   549,   559,   563,   564,   565,
     566,   575,   576,   577,   581,   584,   599,   603,   604,   605,
     606,   611,   613,   617,   618,   633,   637,   638,   643,   644,
     647,   648,   651,   652,   981,  1168,  1169,  1170,  1171,  1175,
    1178,  1179,  1180,  1181,  1182,  1183,  1191,  1195,  1207,  1448,
    1450,  1452,  1453,  1454,  1458,  1460,  1465,  1470,   222,  1319,
    1319,  1319,  1470,   204,  1319,  1319,   853,  1319,   717,  1319,
    1506,   665,  1402,   130,  1523,  1470,   371,    65,   421,   652,
    1472,   123,   212,   282,  1330,  1470,  1168,   237,  1425,  1505,
    1506,    46,   880,   191,    33,   304,  1386,  1419,  1470,   717,
    1122,  1506,   123,   282,  1331,  1361,   304,   416,   498,  1413,
    1414,   607,   749,   488,   754,  1520,   570,  1552,  1152,   237,
     377,  1276,  1277,  1301,  1302,    12,   135,   212,   310,   514,
     515,   516,   517,   518,   519,   536,  1160,  1161,  1162,  1576,
      58,    59,   120,   201,   271,   341,   392,   485,   572,   651,
     983,  1470,  1478,  1490,  1494,  1496,    34,    58,    69,    92,
      94,   104,   153,   158,   161,   192,   194,   201,   203,   226,
     227,   250,   271,   304,   371,   396,   407,   408,   411,   412,
     432,   485,   498,   535,   553,   616,   983,  1019,  1382,  1386,
    1387,  1389,  1491,   754,   435,   521,  1097,  1098,  1099,   421,
     622,  1089,  1090,  1091,  1097,  1374,  1470,  1506,  1361,    35,
     211,   559,  1449,  1468,  1617,  1617,  1617,  1617,  1617,  1147,
     645,   480,   650,  1470,   155,  1396,  1395,   322,   557,   583,
    1044,   597,    99,  1472,  1473,  1046,   832,   854,  1470,  1045,
     373,     6,    56,   139,   356,   420,   422,   855,  1043,  1050,
    1051,  1473,   718,   520,  1586,  1587,  1047,  1111,  1128,  1129,
    1130,  1131,  1462,   644,   726,  1470,   672,   673,  1314,  1315,
    1462,  1314,    55,   358,   358,   436,  1553,   355,   356,  1174,
    1470,   831,   854,   187,     6,  1473,  1539,  1540,   444,    10,
     162,   194,   408,   574,   704,  1579,  1587,  1602,  1604,  1605,
    1611,   194,   704,  1578,  1587,  1602,  1605,  1611,  1580,  1585,
     933,  1470,  1470,  1470,   191,  1364,  1368,  1369,  1470,  1371,
     644,   644,   644,  1178,   644,   644,   644,  1168,  1210,   644,
     644,   644,   644,   644,   644,   644,   644,   644,  1167,  1167,
     644,   970,   644,   644,   644,   559,   644,   644,   644,   644,
     644,   644,   644,   644,   644,   644,   644,   644,   644,  1168,
     644,   644,   644,  1208,  1209,  1458,  1470,   644,   644,   644,
     644,   644,   644,   644,   644,   644,  1168,   970,   644,   644,
     644,   644,   644,   644,   644,   644,   644,   644,   644,   644,
     644,   644,   644,   644,   644,   644,   970,   559,   644,   644,
     644,   559,   644,   644,   644,    35,   211,   559,   644,  1167,
     970,   970,   644,   644,   644,   644,   644,   644,  1178,  1178,
    1178,  1168,  1571,  1572,  1470,  1196,  1470,    16,    17,   376,
     379,   631,  1172,  1173,   155,   156,   195,   206,   245,   256,
     283,   348,  1176,    31,   136,   240,   264,   334,   430,   491,
     492,   504,   635,   636,   637,   638,   639,   640,   641,   642,
    1174,  1178,    68,   378,   646,  1468,   644,   652,   166,  1470,
     718,  1470,   368,   854,   718,  1472,   359,   615,   864,   865,
    1321,  1322,  1323,  1387,   718,  1473,  1538,  1313,  1319,   602,
     666,    33,   128,   153,   157,   196,   214,   276,   407,   416,
     431,   456,   499,   530,  1403,  1408,  1409,  1506,    81,   651,
     761,   762,   763,   764,  1470,    12,    13,    94,   125,   139,
     162,   165,   178,   202,   227,   233,   274,   409,   413,   429,
     437,   445,   480,   493,   494,   545,   574,   596,   598,  1524,
    1526,  1528,  1529,    19,   155,  1260,  1261,  1513,  1470,   223,
    1082,   503,    48,    80,   282,  1431,  1462,  1507,  1508,  1119,
     266,   269,   418,   881,   883,   651,   663,  1467,   276,  1123,
    1473,  1124,  1125,  1462,  1106,   237,  1316,  1332,  1333,  1462,
      48,  1415,   646,  1468,    54,    63,    73,    85,    86,    87,
     101,   323,   340,   476,   538,   555,   755,   757,    12,   413,
    1521,  1526,   474,  1554,  1553,   590,  1559,  1560,  1303,    46,
     265,  1281,  1282,   191,  1157,   188,   274,  1163,   155,   639,
    1164,  1165,  1168,  1456,  1470,  1162,   488,   652,    33,   120,
     155,   489,   984,   985,  1343,  1472,   188,  1343,  1480,   651,
    1472,    33,   120,   987,   988,  1472,   652,  1481,  1479,  1343,
     161,   264,   620,  1393,   644,   103,   162,   194,   408,   553,
     574,   614,  1393,    12,   942,  1472,  1281,   191,   240,  1388,
    1390,    67,   530,   188,   530,   550,    67,   530,    12,    41,
      89,    93,   244,   321,   385,   505,   547,  1376,  1377,  1378,
     161,   214,   530,   530,  1281,  1393,  1390,   276,   152,    70,
     410,   550,   573,   530,   610,  1087,   646,   370,   627,    83,
     646,  1315,  1082,   646,   369,  1620,   546,  1621,   249,   459,
    1619,   645,  1560,  1562,  1564,  1565,  1153,   151,   657,  1472,
     188,  1145,  1324,  1327,  1353,  1362,  1397,  1400,  1449,  1470,
     120,   928,   929,   939,   940,   992,   106,  1167,   651,   719,
       6,   833,   719,   644,   105,   850,   850,   850,     4,     6,
      11,    13,    15,    25,    26,    56,    60,    61,    66,    74,
      82,    91,   106,   124,   132,   133,   139,   147,   153,   164,
     186,   225,   227,   234,   251,   274,   311,   329,   333,   372,
     377,   384,   389,   392,   424,   438,   439,   440,   441,   470,
     527,   528,   529,   535,   551,   554,   577,   590,   875,   935,
     937,   939,   940,  1057,  1061,  1063,  1066,  1072,  1073,  1074,
    1079,  1080,  1273,   646,   392,  1049,   479,   614,  1587,  1314,
     240,   646,   389,  1139,  1141,  1142,   727,   728,  1168,   224,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   305,
     306,   433,   434,   687,   688,   691,   446,   447,   448,   449,
     450,   451,   452,   674,   675,   171,   417,   646,  1104,    57,
     171,   175,   188,   320,   417,  1115,  1116,  1117,    55,   436,
     166,   700,   833,   106,   850,   220,   646,   194,   933,   718,
    1470,   718,   718,  1587,  1462,  1023,  1024,  1023,  1023,  1317,
    1318,  1462,  1463,  1470,   646,  1366,   652,  1370,  1168,  1168,
      12,   135,  1203,  1262,  1203,  1203,  1203,   619,  1212,  1168,
    1168,  1207,  1207,  1168,  1168,  1168,   135,  1203,  1262,   645,
     362,   645,   645,  1168,  1168,  1168,  1168,  1458,  1571,   111,
     112,   113,   114,   115,   215,   216,   217,   218,   324,   326,
     327,   328,   335,   415,   477,   478,   617,   632,   633,  1257,
    1258,  1168,  1207,   107,   110,   563,   566,  1259,   135,  1198,
    1168,  1168,  1168,  1168,  1257,  1168,  1207,  1209,     9,   646,
     652,   135,  1203,  1168,  1168,   135,  1203,  1168,  1168,  1207,
    1207,  1207,  1168,  1168,  1168,  1207,  1171,  1168,  1168,  1168,
    1168,  1168,  1168,   645,  1168,  1203,  1203,  1168,  1168,   135,
    1203,  1168,  1258,  1258,  1168,    44,   257,   571,  1168,  1168,
     645,  1459,  1460,  1470,  1203,  1203,  1168,  1168,  1168,   645,
     646,   645,   480,   644,  1568,  1569,  1168,   651,  1197,  1472,
     652,  1168,  1168,  1168,  1170,   174,   361,   576,   592,  1174,
      12,    18,  1170,  1177,  1171,  1171,   644,  1178,  1171,  1171,
    1171,  1171,   264,  1171,  1171,   236,  1171,   236,  1171,  1171,
    1171,  1171,  1171,    31,   240,   264,   430,  1472,  1178,  1168,
    1184,  1470,   652,  1462,  1321,   646,  1323,   153,   646,  1314,
    1310,   651,   667,   668,   276,   276,   276,   276,    48,   276,
     276,   646,  1404,   110,   563,   566,   756,   766,  1195,  1452,
    1458,  1472,   646,   155,   407,  1527,   468,   468,   551,   556,
     599,   614,   374,  1531,   550,   368,  1533,    64,   498,  1530,
     104,   614,  1532,   368,   646,  1470,   180,   352,  1470,  1514,
    1515,  1332,  1467,  1134,   271,  1430,  1261,   646,  1314,    70,
     644,   888,   889,   888,   889,   390,   891,   208,   252,  1472,
      29,   570,  1420,   646,   570,   646,   570,  1314,  1333,  1329,
     389,  1226,  1227,    12,  1416,  1414,   646,   155,  1527,   368,
     368,  1470,    12,   135,  1567,   141,   381,  1297,  1298,  1304,
    1278,  1283,  1163,   140,   480,   644,   648,  1159,  1213,  1214,
    1215,  1216,  1217,  1228,  1229,  1241,   620,  1263,   596,   240,
     117,   182,   211,   279,   362,   581,  1288,  1291,  1292,   646,
      19,  1166,  1467,  1470,   652,  1470,    68,   990,  1168,  1473,
     367,   392,   559,  1502,   246,   421,  1497,  1498,  1499,  1500,
     201,   271,   485,  1492,  1343,  1470,   572,  1482,  1493,  1496,
     646,  1484,  1495,   240,  1391,  1467,  1168,   639,   933,   718,
     718,   718,  1462,   718,  1462,   276,   339,   530,  1385,  1385,
    1393,  1470,   718,  1393,  1473,  1388,   718,  1393,   243,   548,
     176,   188,  1379,   646,  1391,   531,  1388,  1462,  1390,  1388,
    1388,  1393,  1393,   595,  1100,  1099,   501,  1091,  1214,  1449,
     393,  1622,  1277,  1282,  1566,    82,   929,    68,   983,   131,
    1472,    74,    88,   254,   332,   358,   419,   520,   721,   723,
     426,   585,   851,   852,   229,   847,   848,   849,   856,   864,
     865,   103,   213,   383,   392,   399,   502,   599,   702,   703,
    1467,    24,   312,   841,   842,   843,   856,   857,   858,   864,
     865,   834,   835,   841,    71,    84,   227,   252,   389,   950,
     953,   954,  1015,  1017,  1021,  1022,  1081,  1343,  1344,  1081,
     389,  1344,  1344,  1081,  1344,   389,   389,  1344,  1344,   570,
     131,  1344,   250,   389,   551,   187,   389,   406,  1017,  1081,
     250,  1344,   389,   389,   551,   131,  1344,  1344,  1344,  1344,
    1344,  1081,   389,    46,  1344,   877,  1344,   389,   391,    19,
     155,   570,  1017,  1085,   389,   389,  1344,  1344,  1344,  1344,
     134,   321,  1470,  1344,   389,  1344,   935,   646,   874,   875,
    1061,   644,   652,   949,   955,  1461,  1470,  1051,   169,   368,
     712,  1053,   122,   239,  1462,   120,  1132,  1470,  1130,  1462,
     877,  1141,  1017,  1143,   645,   646,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
     646,   155,   155,   155,   155,   155,   155,   155,   646,  1315,
     597,  1116,   927,   928,    74,   353,   427,   586,   844,   845,
     846,   856,   860,   861,   862,   863,   864,   865,   626,   601,
     829,    46,   622,  1540,  1470,   718,   644,   461,  1612,     8,
      29,   824,   693,   579,   602,  1031,   368,   368,   368,   646,
    1367,  1226,   652,  1370,  1369,   191,   639,  1470,   646,   645,
    1203,   645,  1204,   645,   645,   645,  1168,   145,   619,  1211,
      19,   645,   602,   645,   645,   645,   646,   602,   646,  1192,
     645,   639,   645,   646,   646,   645,   645,   645,   645,   191,
     646,   645,   646,  1194,   645,   646,   646,   646,   638,   646,
     645,   645,   644,  1458,  1470,  1203,   645,   645,   645,  1203,
     645,   646,   645,   645,   645,   645,   645,   645,   646,   645,
     240,   645,   646,   646,   645,   646,   646,   645,   645,   645,
     646,   191,   646,  1203,   645,   645,   646,   646,   646,   645,
     191,  1168,   191,  1168,   191,  1168,   191,   645,   646,   645,
     645,   645,   645,   646,    19,   262,   646,  1007,   645,  1207,
    1232,  1233,  1234,   644,  1149,  1150,   590,  1573,   649,  1492,
     489,  1470,   174,   361,   576,   592,   644,    17,  1168,  1571,
     160,  1267,  1171,  1168,  1168,  1171,   644,  1178,  1171,  1168,
    1188,  1189,  1190,   644,   652,  1470,  1311,  1323,  1344,  1473,
      50,   458,  1083,  1314,  1472,   646,  1409,  1314,  1410,   764,
     767,   768,   763,   363,   472,   765,   550,   644,  1541,  1473,
    1541,  1541,  1541,   194,   408,   553,  1525,  1529,   155,   180,
     195,   206,   255,   256,   283,   352,   405,  1516,  1518,  1263,
    1326,  1135,  1136,  1137,  1138,  1462,   228,   282,   421,   627,
    1509,  1508,   644,   897,  1171,  1288,   542,   892,   882,    11,
     884,  1168,  1467,  1473,  1473,  1125,  1462,   171,   417,   600,
    1107,  1108,  1109,   480,   488,   606,   607,   644,   923,  1334,
    1337,   644,   757,   756,   646,  1473,   194,   408,  1525,  1561,
     559,  1469,  1469,   651,  1299,  1300,  1472,  1168,  1279,  1457,
     279,   362,   581,  1284,  1285,  1450,  1470,  1240,  1470,    95,
     230,   249,   260,   344,   465,   536,  1225,   646,  1462,  1240,
    1264,   204,  1268,   490,  1165,  1467,  1470,   639,  1470,   120,
     989,   991,  1472,  1343,   644,   644,   262,   370,   627,   646,
     646,   652,   652,   652,  1496,  1168,  1497,  1483,  1343,  1485,
    1486,    12,    33,   120,   368,  1168,  1503,  1467,   191,  1392,
     645,  1470,  1393,   416,  1281,  1378,  1392,  1393,  1388,  1462,
    1393,  1393,   511,   512,   513,   691,  1101,   599,  1092,  1093,
     488,   646,   188,  1623,  1281,  1288,  1344,  1344,   342,  1467,
     520,   520,   520,   520,   520,   479,  1467,  1467,  1344,   646,
     849,  1467,  1467,  1467,  1467,   117,   182,   211,   279,   362,
     581,  1287,  1467,  1467,   645,   646,  1344,  1344,   646,   843,
     836,   837,   856,   857,   858,  1039,  1461,  1120,    61,   187,
     406,   591,   952,  1016,  1039,  1017,  1018,  1018,   120,  1470,
    1461,  1120,   117,   182,   279,   362,   581,  1289,  1287,  1461,
    1287,    12,  1062,  1070,  1071,  1470,  1120,  1467,  1467,   983,
    1344,  1287,   877,   252,  1070,   252,  1461,  1461,   941,  1472,
    1071,   877,  1344,   180,   255,   358,   944,  1287,   120,  1470,
    1289,  1289,  1461,  1120,  1274,  1275,  1459,   120,  1287,   876,
    1467,  1120,   877,  1461,  1462,  1120,  1120,    77,    79,   120,
     143,   181,   428,   943,   120,  1287,   120,  1287,   120,  1287,
    1287,  1062,   938,     6,   139,  1074,   946,   947,   948,   949,
     950,  1470,     8,   180,  1084,   429,   951,   952,  1009,   956,
     652,   120,   236,   350,  1052,    78,   475,   439,  1054,  1588,
    1140,   644,  1168,   644,  1287,  1466,  1467,  1287,  1287,  1466,
    1466,  1289,  1466,  1287,  1287,  1466,  1466,  1466,  1466,  1466,
    1466,  1466,  1287,  1287,  1466,  1453,  1466,  1287,   688,   644,
     676,   676,   644,   681,   681,   644,   684,   684,   644,   679,
     675,  1344,  1344,  1344,  1344,   646,   846,  1472,   275,   172,
     838,   839,   840,   856,   857,   858,   859,   862,   863,   864,
     865,   392,   559,  1472,   461,   705,  1606,   118,   238,   423,
     537,   945,   644,   125,   233,   596,   825,   264,   644,   867,
     934,   936,   937,    45,   208,   473,  1036,  1036,  1462,  1462,
    1462,  1318,  1470,   602,  1365,  1470,  1214,   652,  1370,   236,
    1168,   645,  1168,   562,  1168,  1168,   149,    33,    59,   107,
     110,   118,   346,   496,   566,   594,  1205,   984,  1168,   984,
    1205,  1207,   645,   236,   236,  1168,  1168,  1168,  1207,  1168,
    1168,  1168,  1168,  1168,  1171,   645,   645,  1168,  1168,  1168,
    1168,  1168,  1168,  1207,   236,  1168,  1168,  1168,   645,  1168,
    1168,  1168,  1168,   191,  1168,   191,  1168,   191,  1168,  1168,
    1168,    33,    59,  1002,  1003,  1004,  1005,  1006,  1288,  1287,
     645,   645,  1156,  1157,  1158,  1574,  1575,  1576,  1149,   645,
     480,  1567,  1472,  1168,  1571,  1170,   645,   646,   645,  1178,
    1257,  1257,    17,  1168,  1571,  1267,  1166,   645,   646,  1206,
    1207,  1470,  1312,   941,  1083,   668,  1405,   155,   646,  1470,
    1542,  1543,   570,   639,  1462,  1470,  1537,  1537,  1537,  1517,
    1281,  1334,   646,  1139,  1141,  1469,   627,   271,   885,   886,
     887,  1470,   645,    46,   644,   899,   889,   155,   644,   570,
    1108,   924,  1335,   644,  1340,  1345,  1340,   645,   923,  1336,
    1455,  1456,  1459,  1470,  1338,  1256,  1470,   155,   202,   191,
    1537,  1537,  1537,  1146,  1305,  1472,   646,   646,    20,   126,
    1280,   366,   646,  1230,  1235,  1240,  1213,   249,   249,   380,
    1242,   249,   260,   465,  1242,  1228,  1213,  1215,  1226,  1237,
    1238,  1168,    46,   209,  1265,   331,   652,  1502,   559,   559,
     421,   442,   483,  1501,  1499,  1498,  1343,  1484,  1503,   646,
    1488,  1490,  1494,  1289,  1383,   158,   616,   362,  1384,  1263,
    1388,   155,   155,   646,   155,   392,  1094,  1355,  1287,   325,
     991,   985,   106,   106,   122,   239,   279,   362,   581,   866,
    1290,  1291,  1465,   849,   703,   866,   866,   843,   646,   837,
    1064,   644,   252,   252,  1018,  1039,  1024,  1039,  1039,   139,
     488,  1062,  1075,  1059,   646,  1288,   985,  1467,  1062,  1461,
    1083,   622,  1062,  1467,  1076,  1062,   646,  1280,   880,  1062,
     570,  1067,  1062,   644,   645,   646,  1470,  1462,    32,    33,
      38,    40,    42,    43,    59,   107,   110,   118,   137,   154,
     181,   183,   197,   198,   238,   268,   277,   278,   280,   317,
     318,   319,   336,   337,   338,   343,   346,   364,   365,   397,
     398,   423,   484,   488,   500,   560,   563,   566,   567,   568,
     569,   608,   609,   633,   957,   960,   961,   962,   963,   964,
     965,   966,  1470,  1288,   356,   404,    23,   163,   706,   570,
     132,   147,   708,   644,  1589,   644,   406,  1253,  1254,  1255,
    1470,   689,   690,  1287,   645,   677,   678,  1470,   645,   682,
     683,  1470,   645,   685,   686,  1466,   644,   645,   680,  1467,
    1288,   866,   866,   846,   373,   204,  1344,   646,   840,   559,
      19,   945,   368,   729,   730,   732,  1470,   503,  1613,   368,
    1462,   264,   868,   873,   874,   946,   873,   646,   936,   694,
     696,   698,   652,  1214,  1263,  1370,  1263,  1168,   645,  1168,
     562,   644,   974,   975,   975,   644,   969,   644,   967,   968,
     974,   975,   238,   969,   238,   645,   645,   645,   645,   645,
    1193,  1168,  1168,   645,   645,   646,   645,   377,  1200,   646,
     646,   645,   646,   645,   240,  1185,  1186,   645,   645,   645,
     645,   646,   645,   645,  1168,   645,   188,   645,   645,   646,
     645,   646,   646,   645,  1168,   645,  1168,   645,  1168,   645,
     645,   645,   644,   997,   997,    20,   126,   463,   637,   999,
    1000,  1001,   646,   646,  1263,  1164,  1576,   645,  1563,  1564,
    1233,  1570,   652,  1040,   645,  1207,  1170,   645,   646,   645,
    1190,   645,  1078,  1079,  1080,   188,   622,  1406,    54,    63,
      73,    85,    86,    87,   101,   323,   340,   460,   476,   538,
     555,   769,   768,   645,   646,  1539,   652,   652,   570,   570,
     570,   644,   368,  1350,  1137,  1462,  1141,   223,  1144,  1426,
     645,   646,   883,   389,   900,   901,  1288,   885,  1473,  1160,
    1341,  1342,  1459,  1346,   646,   644,  1337,   645,   645,   646,
     652,  1559,   645,   646,   756,   374,  1539,   191,   191,   191,
     983,   986,  1300,  1457,  1285,  1285,   590,   645,  1563,  1236,
     649,   249,  1228,  1242,  1242,   249,   368,   368,   602,  1261,
    1160,  1269,  1266,  1276,   639,   645,   645,    75,   582,   421,
    1503,  1487,  1489,  1281,  1281,  1393,  1467,  1467,   691,  1467,
     155,   121,  1095,  1357,  1358,  1459,   837,   390,   644,  1065,
    1168,  1039,  1024,   644,  1023,  1023,   120,   120,   955,  1115,
    1071,   990,   551,   553,   551,   957,  1058,  1275,  1461,  1068,
    1070,  1060,  1410,   948,   644,  1010,   974,   974,   975,   969,
     967,   402,   958,   967,   967,    21,    33,    47,   588,   983,
     993,   994,   995,    59,   608,   961,   963,   995,   995,    59,
     609,   609,   612,   967,   959,   975,   969,   969,   995,   974,
     975,    25,    68,    72,    74,   120,   361,   368,   406,   484,
     535,   591,   977,   978,   979,  1008,  1174,   612,   974,   995,
      33,   974,   996,   974,   974,   975,   644,   968,   976,   652,
     115,   404,  1168,  1168,   368,   712,   718,   368,    74,   713,
    1470,  1590,    19,  1062,   645,   646,   645,   646,   645,   646,
     645,   646,   652,   645,   646,   678,   645,   646,   644,  1470,
     866,   840,  1467,   503,   475,   645,   646,   731,  1467,   231,
     240,   382,   733,   734,   735,   736,  1462,  1462,   923,   645,
     223,   444,   870,  1432,   936,   644,   644,   644,  1470,  1263,
    1276,  1257,  1168,   117,   279,   362,   581,   995,   362,   362,
     645,  1257,  1257,  1168,    46,   482,  1199,  1168,  1168,  1207,
      42,   344,   645,   622,  1187,  1168,  1257,  1168,  1168,  1168,
    1168,   645,   645,   645,  1288,   645,  1007,  1002,  1000,  1002,
    1003,  1287,  1268,  1156,  1568,  1470,   645,  1207,  1080,  1079,
    1407,   421,  1543,   622,  1546,   639,   639,  1539,  1539,  1539,
     120,  1168,  1348,  1349,   142,  1144,   258,  1432,   887,   208,
     252,   902,   645,   646,   645,  1164,   646,  1343,  1347,  1348,
    1345,  1339,  1337,  1455,  1470,   877,  1470,   191,  1539,  1539,
    1539,   985,  1306,  1280,  1567,  1261,  1216,  1213,  1228,   249,
     249,  1213,  1228,  1219,  1218,  1220,  1251,  1252,  1164,  1271,
    1457,  1168,  1281,  1488,  1493,  1467,   155,   394,  1096,   646,
    1356,  1343,  1288,   900,   645,   644,   644,  1037,  1038,  1470,
     644,   644,   110,   563,   566,   637,   638,  1451,  1452,  1084,
    1462,   977,  1120,  1069,  1107,   645,  1011,  1470,   307,  1012,
     496,   594,   634,   971,   972,   973,   644,   971,   971,    33,
      21,   588,   983,    33,   984,   995,   612,   971,   644,   995,
     971,   989,   120,   143,   181,  1467,   981,   982,  1451,   596,
     120,   120,   134,   321,   252,   979,   252,   361,   995,   996,
     995,   996,   971,   362,   971,  1470,  1257,   498,  1467,   138,
    1055,   645,   646,  1591,  1592,   645,  1254,   690,   678,   683,
    1470,   686,   646,   644,   702,  1467,   706,  1607,   732,   957,
     980,   645,   646,   731,   188,   645,   645,   934,    19,   926,
    1037,  1037,  1037,   265,  1286,   645,   645,   645,   645,   645,
     645,   646,   645,   645,   645,  1201,  1449,   645,   645,   646,
     645,   331,   254,   416,   645,   645,   645,   645,   645,   645,
     998,   645,   646,  1265,   645,   170,   274,   202,   453,  1544,
    1544,  1544,   645,   646,  1351,   237,   644,   890,   884,   903,
    1470,   901,   925,  1342,  1349,   645,  1562,  1539,    70,  1433,
    1231,   368,  1222,  1228,  1228,   368,  1224,  1168,  1168,   644,
    1249,  1250,  1239,   646,  1270,  1280,   408,  1293,  1467,   155,
    1358,  1263,  1349,   645,  1037,  1037,   645,   646,  1280,   644,
    1037,  1037,  1453,  1453,   877,  1077,   237,   645,   646,   192,
     388,   497,   368,  1013,   973,  1041,  1449,   984,   996,  1041,
     981,   607,   707,   714,   715,  1470,   480,   644,  1593,  1597,
     678,   678,   645,   711,   712,   461,   990,  1614,   735,  1470,
     144,   869,   873,   644,   923,   645,   645,   645,  1285,   362,
    1202,  1457,  1168,   331,   168,   645,  1287,  1276,   374,    62,
     247,   354,   522,   540,   628,  1535,  1536,   622,  1545,  1545,
    1545,  1349,   252,   553,   897,   893,   644,   606,   904,  1156,
     148,   159,   375,   558,  1434,  1435,   267,  1436,  1568,  1221,
     602,  1223,   602,  1256,   186,   223,   601,  1244,  1245,  1248,
    1156,  1457,   623,   624,  1272,    14,  1301,  1302,  1467,  1276,
     645,   645,    74,   251,  1025,  1028,  1031,  1032,  1033,  1038,
     362,   645,   645,  1084,   644,  1470,   125,   596,   645,   646,
     645,   525,   709,    52,    65,   177,   222,   248,   259,   371,
     462,   716,   774,   776,   777,   778,   780,   781,   782,   783,
     784,   785,   787,   795,   796,   799,   810,   813,   815,   816,
    1465,  1471,  1475,  1598,   644,  1595,  1596,   622,  1599,  1594,
     645,   646,   708,  1608,   720,   980,   471,  1562,   870,   923,
     871,  1025,   622,  1026,  1030,  1032,  1035,  1027,  1029,  1032,
    1034,   645,   646,  1280,   645,   645,  1281,   559,   559,   559,
      17,  1534,   202,   308,   309,   314,   315,  1547,  1548,   596,
    1462,   645,   541,   898,   895,   896,  1470,   240,   261,    74,
     106,   227,   311,   329,   353,   551,   920,   921,   922,  1387,
      46,    46,   148,    46,  1435,   524,   558,  1437,  1438,  1168,
     644,  1168,   644,   645,  1017,  1017,  1245,  1280,  1294,  1163,
    1286,  1009,  1025,  1467,  1344,  1033,  1280,   645,  1026,  1027,
     900,    50,   358,   458,   488,  1014,  1014,   995,  1449,   995,
    1168,   150,   710,   797,   800,  1470,   191,   352,   788,   775,
    1471,  1471,  1470,   779,   659,   281,   443,   621,   819,    30,
     817,   653,  1153,  1595,   645,  1597,    51,    61,   271,  1559,
     678,   713,   980,   129,   721,   722,  1174,  1615,   185,   401,
    1600,  1601,   645,  1559,   695,   387,   697,  1035,   699,  1034,
    1457,  1293,  1535,   374,  1287,  1287,  1287,  1287,  1548,  1352,
    1226,  1288,   645,   646,   906,   561,  1344,   131,   131,  1344,
    1344,  1344,  1344,   644,   915,   922,   153,  1449,  1449,    46,
    1449,    46,    46,  1438,  1256,  1256,   188,  1243,  1243,   644,
    1287,   645,     5,   120,   361,   368,   368,  1168,  1168,   619,
     802,   806,   191,  1470,   790,   791,  1168,   738,   773,   774,
     776,   778,   780,   782,   783,   784,   785,   787,   795,   810,
     813,   815,   738,   820,   818,   811,   814,   645,  1562,    61,
     374,    61,   645,   138,  1609,   129,   773,  1472,  1603,   872,
    1078,  1465,  1078,  1078,  1280,  1163,  1359,  1360,  1459,  1427,
     894,   896,   644,   908,   910,   905,  1467,  1344,  1344,  1290,
    1290,  1288,  1472,   542,   916,   917,  1344,  1449,  1449,  1449,
     645,   645,   204,   249,   377,  1247,  1246,   362,  1295,  1296,
     596,   125,   798,   807,   145,   806,   809,   237,   149,  1168,
     149,   773,   650,   595,  1168,   739,   819,   817,   374,   374,
     714,   720,   773,  1562,   646,  1343,   986,   898,   644,   909,
     910,   911,   316,   907,   910,  1467,  1467,   918,   645,   646,
     941,    46,    46,   644,   644,   645,   646,  1014,  1014,   619,
     801,   803,  1168,   738,   149,   786,   222,   792,   281,   650,
     822,   821,   119,   737,   740,   812,  1471,   812,  1610,  1360,
    1349,  1428,   645,   646,   316,   913,   914,  1171,   919,  1472,
     917,  1253,  1255,  1296,   804,   803,   809,   808,    52,   789,
    1470,   562,  1168,   138,    90,   167,   744,   770,  1470,   149,
     773,   650,   773,   469,  1439,   910,   646,   912,   920,   645,
     645,  1168,   149,   562,   646,   738,   823,   738,   207,   646,
     741,    81,   100,   650,   220,  1433,   914,   645,   805,    52,
     738,  1470,   793,   149,   149,   188,  1470,   980,   188,   188,
      46,  1436,   562,   145,   146,   794,   443,   621,   742,   120,
     771,   747,   748,  1287,   743,  1449,   223,  1440,   738,   738,
     790,   508,   510,   745,   746,   747,   750,  1174,  1470,   772,
    1145,   362,   644,  1442,   646,   773,   190,  1168,   267,   469,
    1441,   645,   651,  1443,  1444,  1459,   488,  1445,   746,  1472,
     645,   646,  1446,  1447,  1459,  1444,   646,  1343,  1447,  1349
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}

/* Prevent warnings from -Wmissing-prototypes.  */
#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */





/*-------------------------.
| yyparse or yypush_parse.  |
`-------------------------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
/* The lookahead symbol.  */
int yychar;

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval;

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks thru separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[2];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yytoken = 0;
  yyss = yyssa;
  yyvs = yyvsa;
  yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */
  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;

#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 1;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:

/* Line 1455 of yacc.c  */
#line 1930 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
                !thd->m_parser_state->has_comment())
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:

/* Line 1455 of yacc.c  */
#line 1942 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:

/* Line 1455 of yacc.c  */
#line 1967 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 62:

/* Line 1455 of yacc.c  */
#line 2041 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 65:

/* Line 1455 of yacc.c  */
#line 2056 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(2) - (4)].lex_str);
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
    break;

  case 66:

/* Line 1455 of yacc.c  */
#line 2076 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 67:

/* Line 1455 of yacc.c  */
#line 2083 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 68:

/* Line 1455 of yacc.c  */
#line 2093 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 69:

/* Line 1455 of yacc.c  */
#line 2100 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 74:

/* Line 1455 of yacc.c  */
#line 2115 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 75:

/* Line 1455 of yacc.c  */
#line 2127 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 76:

/* Line 1455 of yacc.c  */
#line 2135 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 77:

/* Line 1455 of yacc.c  */
#line 2146 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is freed
              in THD::cleanup_after_query. So it is guaranteed to be
              uninitialized before here.
	      Its allocation is deferred till the option is parsed below.
            */
            lex->mi.set_unspecified();
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.elements == 0);
          }
    break;

  case 78:

/* Line 1455 of yacc.c  */
#line 2159 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 79:

/* Line 1455 of yacc.c  */
#line 2161 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 80:

/* Line 1455 of yacc.c  */
#line 2171 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 83:

/* Line 1455 of yacc.c  */
#line 2180 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_DB);
          }
    break;

  case 84:

/* Line 1455 of yacc.c  */
#line 2187 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_DB);
          }
    break;

  case 85:

/* Line 1455 of yacc.c  */
#line 2194 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_DO_TABLE);
          }
    break;

  case 86:

/* Line 1455 of yacc.c  */
#line 2201 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
    break;

  case 87:

/* Line 1455 of yacc.c  */
#line 2208 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
    break;

  case 88:

/* Line 1455 of yacc.c  */
#line 2215 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
    break;

  case 89:

/* Line 1455 of yacc.c  */
#line 2223 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[(3) - (3)].item_list), OPT_REPLICATE_REWRITE_DB);
          }
    break;

  case 90:

/* Line 1455 of yacc.c  */
#line 2232 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 91:

/* Line 1455 of yacc.c  */
#line 2238 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 92:

/* Line 1455 of yacc.c  */
#line 2245 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 93:

/* Line 1455 of yacc.c  */
#line 2252 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 94:

/* Line 1455 of yacc.c  */
#line 2260 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *db_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                           (yyvsp[(1) - (1)].lex_str).length,
                                                           thd->charset());
            (yyval.item)= db_item;
          }
    break;

  case 95:

/* Line 1455 of yacc.c  */
#line 2270 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 96:

/* Line 1455 of yacc.c  */
#line 2276 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 97:

/* Line 1455 of yacc.c  */
#line 2282 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (5)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (5)].item));
          }
    break;

  case 98:

/* Line 1455 of yacc.c  */
#line 2290 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(4) - (7)].item));
            (yyvsp[(1) - (7)].item_list)->push_back((yyvsp[(6) - (7)].item));
            (yyval.item_list)= (yyvsp[(1) - (7)].item_list);
          }
    break;

  case 99:

/* Line 1455 of yacc.c  */
#line 2298 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 100:

/* Line 1455 of yacc.c  */
#line 2304 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 101:

/* Line 1455 of yacc.c  */
#line 2311 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 102:

/* Line 1455 of yacc.c  */
#line 2318 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 103:

/* Line 1455 of yacc.c  */
#line 2326 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item_string *table_item= new (thd->mem_root) Item_string((yyvsp[(1) - (3)].lex_str).str,
                                                              (yyvsp[(1) - (3)].lex_str).length,
                                                              thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            (yyval.item)= table_item;
          }
    break;

  case 104:

/* Line 1455 of yacc.c  */
#line 2339 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 105:

/* Line 1455 of yacc.c  */
#line 2345 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= (yyvsp[(2) - (3)].item_list);
          }
    break;

  case 106:

/* Line 1455 of yacc.c  */
#line 2352 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 107:

/* Line 1455 of yacc.c  */
#line 2359 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 108:

/* Line 1455 of yacc.c  */
#line 2367 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *string_item= new (thd->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str,
                                                               (yyvsp[(1) - (1)].lex_str).length,
                                                               thd->charset());
            (yyval.item)= string_item;
          }
    break;

  case 111:

/* Line 1455 of yacc.c  */
#line 2383 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 112:

/* Line 1455 of yacc.c  */
#line 2387 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 113:

/* Line 1455 of yacc.c  */
#line 2391 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 114:

/* Line 1455 of yacc.c  */
#line 2395 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 115:

/* Line 1455 of yacc.c  */
#line 2400 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 116:

/* Line 1455 of yacc.c  */
#line 2404 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 117:

/* Line 1455 of yacc.c  */
#line 2408 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 118:

/* Line 1455 of yacc.c  */
#line 2413 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[(3) - (3)]).start, (yylsp[(3) - (3)]).end - (yylsp[(3) - (3)]).start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 119:

/* Line 1455 of yacc.c  */
#line 2424 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 120:

/* Line 1455 of yacc.c  */
#line 2429 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 121:

/* Line 1455 of yacc.c  */
#line 2433 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 122:

/* Line 1455 of yacc.c  */
#line 2437 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 123:

/* Line 1455 of yacc.c  */
#line 2441 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 124:

/* Line 1455 of yacc.c  */
#line 2445 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 125:

/* Line 1455 of yacc.c  */
#line 2449 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 126:

/* Line 1455 of yacc.c  */
#line 2454 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 127:

/* Line 1455 of yacc.c  */
#line 2458 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 128:

/* Line 1455 of yacc.c  */
#line 2463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 129:

/* Line 1455 of yacc.c  */
#line 2494 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 130:

/* Line 1455 of yacc.c  */
#line 2499 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 135:

/* Line 1455 of yacc.c  */
#line 2516 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->mi.repl_ignore_server_ids.elements == 0)
            {
              my_init_dynamic_array2(&Lex->mi.repl_ignore_server_ids,
                                     sizeof(::server_id),
                                     Lex->mi.server_ids_buffer,
                                     array_elements(Lex->mi.server_ids_buffer),
                                     16);
            }
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 136:

/* Line 1455 of yacc.c  */
#line 2530 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 137:

/* Line 1455 of yacc.c  */
#line 2534 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 138:

/* Line 1455 of yacc.c  */
#line 2550 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 139:

/* Line 1455 of yacc.c  */
#line 2554 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 140:

/* Line 1455 of yacc.c  */
#line 2566 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_WRITE, MDL_SHARED))
              MYSQL_YYABORT;
            /*
              Instruct open_table() to acquire SHARED lock to check the
              existance of table. If the table does not exist then
              it will be upgraded EXCLUSIVE MDL lock. If table exist
              then open_table() will return with an error or warning.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_FOR_CREATE;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 141:

/* Line 1455 of yacc.c  */
#line 2592 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->set_current_select(lex->select_lex);
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 142:

/* Line 1455 of yacc.c  */
#line 2611 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 143:

/* Line 1455 of yacc.c  */
#line 2616 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 144:

/* Line 1455 of yacc.c  */
#line 2620 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 145:

/* Line 1455 of yacc.c  */
#line 2623 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 146:

/* Line 1455 of yacc.c  */
#line 2628 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 147:

/* Line 1455 of yacc.c  */
#line 2632 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 148:

/* Line 1455 of yacc.c  */
#line 2635 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 149:

/* Line 1455 of yacc.c  */
#line 2640 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 150:

/* Line 1455 of yacc.c  */
#line 2644 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 151:

/* Line 1455 of yacc.c  */
#line 2646 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 152:

/* Line 1455 of yacc.c  */
#line 2651 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 153:

/* Line 1455 of yacc.c  */
#line 2658 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 154:

/* Line 1455 of yacc.c  */
#line 2664 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 155:

/* Line 1455 of yacc.c  */
#line 2666 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 156:

/* Line 1455 of yacc.c  */
#line 2670 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 157:

/* Line 1455 of yacc.c  */
#line 2674 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 158:

/* Line 1455 of yacc.c  */
#line 2679 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            Lex->server_options.m_server_name= (yyvsp[(3) - (11)].lex_str);
            Lex->server_options.set_scheme((yyvsp[(7) - (11)].lex_str));
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_create_server(&Lex->server_options);
          }
    break;

  case 161:

/* Line 1455 of yacc.c  */
#line 2695 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_username((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 162:

/* Line 1455 of yacc.c  */
#line 2699 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_host((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 163:

/* Line 1455 of yacc.c  */
#line 2703 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_db((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 164:

/* Line 1455 of yacc.c  */
#line 2707 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_owner((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 165:

/* Line 1455 of yacc.c  */
#line 2711 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_password((yyvsp[(2) - (2)].lex_str));
            Lex->contains_plaintext_password= true;
          }
    break;

  case 166:

/* Line 1455 of yacc.c  */
#line 2716 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_socket((yyvsp[(2) - (2)].lex_str));
          }
    break;

  case 167:

/* Line 1455 of yacc.c  */
#line 2720 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.set_port((yyvsp[(2) - (2)].ulong_num));
          }
    break;

  case 168:

/* Line 1455 of yacc.c  */
#line 2727 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).start;
            lex->create_info.options= (yyvsp[(2) - (3)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(3) - (3)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 169:

/* Line 1455 of yacc.c  */
#line 2747 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 170:

/* Line 1455 of yacc.c  */
#line 2758 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 172:

/* Line 1455 of yacc.c  */
#line 2765 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 173:

/* Line 1455 of yacc.c  */
#line 2771 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 174:

/* Line 1455 of yacc.c  */
#line 2773 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 175:

/* Line 1455 of yacc.c  */
#line 2779 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
    break;

  case 176:

/* Line 1455 of yacc.c  */
#line 2785 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 177:

/* Line 1455 of yacc.c  */
#line 2794 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 178:

/* Line 1455 of yacc.c  */
#line 2801 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 180:

/* Line 1455 of yacc.c  */
#line 2809 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 181:

/* Line 1455 of yacc.c  */
#line 2815 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 183:

/* Line 1455 of yacc.c  */
#line 2821 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 184:

/* Line 1455 of yacc.c  */
#line 2827 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 185:

/* Line 1455 of yacc.c  */
#line 2835 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 186:

/* Line 1455 of yacc.c  */
#line 2837 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 187:

/* Line 1455 of yacc.c  */
#line 2844 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[(0) - (0)]).end);
          }
    break;

  case 188:

/* Line 1455 of yacc.c  */
#line 2890 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 202:

/* Line 1455 of yacc.c  */
#line 2919 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex->db= NULL;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 203:

/* Line 1455 of yacc.c  */
#line 2934 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 204:

/* Line 1455 of yacc.c  */
#line 2948 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 205:

/* Line 1455 of yacc.c  */
#line 2966 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 206:

/* Line 1455 of yacc.c  */
#line 2967 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 207:

/* Line 1455 of yacc.c  */
#line 2971 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 208:

/* Line 1455 of yacc.c  */
#line 2972 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 209:

/* Line 1455 of yacc.c  */
#line 2978 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 210:

/* Line 1455 of yacc.c  */
#line 2980 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 211:

/* Line 1455 of yacc.c  */
#line 2982 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 212:

/* Line 1455 of yacc.c  */
#line 2984 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 213:

/* Line 1455 of yacc.c  */
#line 2986 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 214:

/* Line 1455 of yacc.c  */
#line 2988 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 215:

/* Line 1455 of yacc.c  */
#line 2990 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 216:

/* Line 1455 of yacc.c  */
#line 2995 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 217:

/* Line 1455 of yacc.c  */
#line 2996 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 218:

/* Line 1455 of yacc.c  */
#line 2997 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 219:

/* Line 1455 of yacc.c  */
#line 3002 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 220:

/* Line 1455 of yacc.c  */
#line 3006 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 221:

/* Line 1455 of yacc.c  */
#line 3013 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), SP_TYPE_PROCEDURE);
          }
    break;

  case 222:

/* Line 1455 of yacc.c  */
#line 3021 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 227:

/* Line 1455 of yacc.c  */
#line 3037 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
           Lex->value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 228:

/* Line 1455 of yacc.c  */
#line 3041 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 233:

/* Line 1455 of yacc.c  */
#line 3059 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 234:

/* Line 1455 of yacc.c  */
#line 3079 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 239:

/* Line 1455 of yacc.c  */
#line 3120 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(3) - (4)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 240:

/* Line 1455 of yacc.c  */
#line 3148 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 241:

/* Line 1455 of yacc.c  */
#line 3149 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 242:

/* Line 1455 of yacc.c  */
#line 3150 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 243:

/* Line 1455 of yacc.c  */
#line 3151 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 244:

/* Line 1455 of yacc.c  */
#line 3155 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 246:

/* Line 1455 of yacc.c  */
#line 3160 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 248:

/* Line 1455 of yacc.c  */
#line 3166 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 249:

/* Line 1455 of yacc.c  */
#line 3170 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 250:

/* Line 1455 of yacc.c  */
#line 3197 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 251:

/* Line 1455 of yacc.c  */
#line 3208 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[(5) - (5)]).raw_end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 252:

/* Line 1455 of yacc.c  */
#line 3281 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 253:

/* Line 1455 of yacc.c  */
#line 3298 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
    break;

  case 254:

/* Line 1455 of yacc.c  */
#line 3340 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 255:

/* Line 1455 of yacc.c  */
#line 3377 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[(4) - (4)]).raw_end);
          }
    break;

  case 256:

/* Line 1455 of yacc.c  */
#line 3386 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {             /*$7*/
            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(6) - (6)]).raw_end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 257:

/* Line 1455 of yacc.c  */
#line 3449 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 258:

/* Line 1455 of yacc.c  */
#line 3450 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 259:

/* Line 1455 of yacc.c  */
#line 3456 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 260:

/* Line 1455 of yacc.c  */
#line 3458 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 261:

/* Line 1455 of yacc.c  */
#line 3463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 262:

/* Line 1455 of yacc.c  */
#line 3486 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 264:

/* Line 1455 of yacc.c  */
#line 3501 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 265:

/* Line 1455 of yacc.c  */
#line 3522 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 266:

/* Line 1455 of yacc.c  */
#line 3523 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 267:

/* Line 1455 of yacc.c  */
#line 3528 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 268:

/* Line 1455 of yacc.c  */
#line 3532 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 269:

/* Line 1455 of yacc.c  */
#line 3545 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 270:

/* Line 1455 of yacc.c  */
#line 3551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:

/* Line 1455 of yacc.c  */
#line 3557 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 272:

/* Line 1455 of yacc.c  */
#line 3566 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 273:

/* Line 1455 of yacc.c  */
#line 3579 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 274:

/* Line 1455 of yacc.c  */
#line 3605 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 275:

/* Line 1455 of yacc.c  */
#line 3610 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 276:

/* Line 1455 of yacc.c  */
#line 3612 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 277:

/* Line 1455 of yacc.c  */
#line 3617 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information(); }
    break;

  case 278:

/* Line 1455 of yacc.c  */
#line 3619 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.signal_item_list)= (yyvsp[(2) - (2)].signal_item_list); }
    break;

  case 279:

/* Line 1455 of yacc.c  */
#line 3624 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= new (YYTHD->mem_root) Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[(1) - (3)].da_condition_item_name), (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 280:

/* Line 1455 of yacc.c  */
#line 3631 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.signal_item_list)= (yyvsp[(1) - (5)].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[(3) - (5)].da_condition_item_name), (yyvsp[(5) - (5)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 281:

/* Line 1455 of yacc.c  */
#line 3643 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 282:

/* Line 1455 of yacc.c  */
#line 3645 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 283:

/* Line 1455 of yacc.c  */
#line 3663 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 284:

/* Line 1455 of yacc.c  */
#line 3669 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
    break;

  case 285:

/* Line 1455 of yacc.c  */
#line 3671 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
    break;

  case 286:

/* Line 1455 of yacc.c  */
#line 3673 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
    break;

  case 287:

/* Line 1455 of yacc.c  */
#line 3675 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
    break;

  case 288:

/* Line 1455 of yacc.c  */
#line 3677 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
    break;

  case 289:

/* Line 1455 of yacc.c  */
#line 3679 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
    break;

  case 290:

/* Line 1455 of yacc.c  */
#line 3681 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
    break;

  case 291:

/* Line 1455 of yacc.c  */
#line 3683 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
    break;

  case 292:

/* Line 1455 of yacc.c  */
#line 3685 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
    break;

  case 293:

/* Line 1455 of yacc.c  */
#line 3687 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
    break;

  case 294:

/* Line 1455 of yacc.c  */
#line 3689 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
    break;

  case 295:

/* Line 1455 of yacc.c  */
#line 3691 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
    break;

  case 296:

/* Line 1455 of yacc.c  */
#line 3696 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue), (yyvsp[(3) - (3)].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 297:

/* Line 1455 of yacc.c  */
#line 3710 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 298:

/* Line 1455 of yacc.c  */
#line 3726 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 299:

/* Line 1455 of yacc.c  */
#line 3728 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 300:

/* Line 1455 of yacc.c  */
#line 3730 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
    break;

  case 301:

/* Line 1455 of yacc.c  */
#line 3735 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 302:

/* Line 1455 of yacc.c  */
#line 3741 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 303:

/* Line 1455 of yacc.c  */
#line 3750 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 304:

/* Line 1455 of yacc.c  */
#line 3756 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 305:

/* Line 1455 of yacc.c  */
#line 3765 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 306:

/* Line 1455 of yacc.c  */
#line 3773 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[(1) - (1)]).raw_start,
                (yylsp[(1) - (1)]).raw_end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 307:

/* Line 1455 of yacc.c  */
#line 3801 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 308:

/* Line 1455 of yacc.c  */
#line 3810 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 309:

/* Line 1455 of yacc.c  */
#line 3812 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 310:

/* Line 1455 of yacc.c  */
#line 3821 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 311:

/* Line 1455 of yacc.c  */
#line 3826 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 312:

/* Line 1455 of yacc.c  */
#line 3832 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 313:

/* Line 1455 of yacc.c  */
#line 3841 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 314:

/* Line 1455 of yacc.c  */
#line 3849 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 315:

/* Line 1455 of yacc.c  */
#line 3851 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 316:

/* Line 1455 of yacc.c  */
#line 3853 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 317:

/* Line 1455 of yacc.c  */
#line 3855 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 318:

/* Line 1455 of yacc.c  */
#line 3857 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 319:

/* Line 1455 of yacc.c  */
#line 3859 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 320:

/* Line 1455 of yacc.c  */
#line 3861 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 321:

/* Line 1455 of yacc.c  */
#line 3863 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 322:

/* Line 1455 of yacc.c  */
#line 3865 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 323:

/* Line 1455 of yacc.c  */
#line 3867 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 324:

/* Line 1455 of yacc.c  */
#line 3869 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 325:

/* Line 1455 of yacc.c  */
#line 3871 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 326:

/* Line 1455 of yacc.c  */
#line 3873 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 327:

/* Line 1455 of yacc.c  */
#line 3878 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 328:

/* Line 1455 of yacc.c  */
#line 3898 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 329:

/* Line 1455 of yacc.c  */
#line 3921 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 330:

/* Line 1455 of yacc.c  */
#line 3923 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw_end); }
    break;

  case 331:

/* Line 1455 of yacc.c  */
#line 3925 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(3) - (3)].item); }
    break;

  case 345:

/* Line 1455 of yacc.c  */
#line 3946 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 346:

/* Line 1455 of yacc.c  */
#line 3948 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 347:

/* Line 1455 of yacc.c  */
#line 3956 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw_start);
          }
    break;

  case 348:

/* Line 1455 of yacc.c  */
#line 3965 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[(2) - (2)]).raw_end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 349:

/* Line 1455 of yacc.c  */
#line 4012 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw_end);
          }
    break;

  case 350:

/* Line 1455 of yacc.c  */
#line 4022 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw_end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 351:

/* Line 1455 of yacc.c  */
#line 4068 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 352:

/* Line 1455 of yacc.c  */
#line 4079 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 353:

/* Line 1455 of yacc.c  */
#line 4091 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            uint n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 354:

/* Line 1455 of yacc.c  */
#line 4150 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            uint n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 355:

/* Line 1455 of yacc.c  */
#line 4200 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 356:

/* Line 1455 of yacc.c  */
#line 4224 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 357:

/* Line 1455 of yacc.c  */
#line 4245 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 358:

/* Line 1455 of yacc.c  */
#line 4250 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 362:

/* Line 1455 of yacc.c  */
#line 4280 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 363:

/* Line 1455 of yacc.c  */
#line 4298 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 364:

/* Line 1455 of yacc.c  */
#line 4318 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(0) - (0)]).raw_end);
          }
    break;

  case 365:

/* Line 1455 of yacc.c  */
#line 4327 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(2) - (2)]).raw_end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 366:

/* Line 1455 of yacc.c  */
#line 4364 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 367:

/* Line 1455 of yacc.c  */
#line 4383 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 373:

/* Line 1455 of yacc.c  */
#line 4406 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw_end);
          }
    break;

  case 374:

/* Line 1455 of yacc.c  */
#line 4417 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw_end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 375:

/* Line 1455 of yacc.c  */
#line 4461 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 376:

/* Line 1455 of yacc.c  */
#line 4468 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 377:

/* Line 1455 of yacc.c  */
#line 4475 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 382:

/* Line 1455 of yacc.c  */
#line 4492 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw_end);
          }
    break;

  case 383:

/* Line 1455 of yacc.c  */
#line 4501 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw_end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 384:

/* Line 1455 of yacc.c  */
#line 4542 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 385:

/* Line 1455 of yacc.c  */
#line 4550 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw_end);
          }
    break;

  case 386:

/* Line 1455 of yacc.c  */
#line 4559 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw_end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 387:

/* Line 1455 of yacc.c  */
#line 4595 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 388:

/* Line 1455 of yacc.c  */
#line 4603 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 390:

/* Line 1455 of yacc.c  */
#line 4621 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 391:

/* Line 1455 of yacc.c  */
#line 4639 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 392:

/* Line 1455 of yacc.c  */
#line 4658 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 393:

/* Line 1455 of yacc.c  */
#line 4659 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 394:

/* Line 1455 of yacc.c  */
#line 4664 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 395:

/* Line 1455 of yacc.c  */
#line 4680 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 396:

/* Line 1455 of yacc.c  */
#line 4697 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 397:

/* Line 1455 of yacc.c  */
#line 4708 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 398:

/* Line 1455 of yacc.c  */
#line 4716 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 399:

/* Line 1455 of yacc.c  */
#line 4731 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 400:

/* Line 1455 of yacc.c  */
#line 4767 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 401:

/* Line 1455 of yacc.c  */
#line 4782 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(1) - (1)]).raw_end);
          }
    break;

  case 402:

/* Line 1455 of yacc.c  */
#line 4791 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(3) - (3)]).raw_end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 403:

/* Line 1455 of yacc.c  */
#line 4830 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 404:

/* Line 1455 of yacc.c  */
#line 4848 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr((yylsp[(3) - (3)]).raw_end);
          }
    break;

  case 405:

/* Line 1455 of yacc.c  */
#line 4857 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[(5) - (5)]).raw_end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 407:

/* Line 1455 of yacc.c  */
#line 4899 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 408:

/* Line 1455 of yacc.c  */
#line 4901 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 409:

/* Line 1455 of yacc.c  */
#line 4906 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 410:

/* Line 1455 of yacc.c  */
#line 4908 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 411:

/* Line 1455 of yacc.c  */
#line 4910 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 415:

/* Line 1455 of yacc.c  */
#line 4944 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 416:

/* Line 1455 of yacc.c  */
#line 4946 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 417:

/* Line 1455 of yacc.c  */
#line 4956 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
    break;

  case 418:

/* Line 1455 of yacc.c  */
#line 4962 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
    break;

  case 423:

/* Line 1455 of yacc.c  */
#line 4985 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 474:

/* Line 1455 of yacc.c  */
#line 5083 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 475:

/* Line 1455 of yacc.c  */
#line 5091 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 476:

/* Line 1455 of yacc.c  */
#line 5099 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 477:

/* Line 1455 of yacc.c  */
#line 5107 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 478:

/* Line 1455 of yacc.c  */
#line 5119 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 479:

/* Line 1455 of yacc.c  */
#line 5131 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 480:

/* Line 1455 of yacc.c  */
#line 5136 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 481:

/* Line 1455 of yacc.c  */
#line 5141 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 482:

/* Line 1455 of yacc.c  */
#line 5149 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 483:

/* Line 1455 of yacc.c  */
#line 5157 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 484:

/* Line 1455 of yacc.c  */
#line 5165 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 485:

/* Line 1455 of yacc.c  */
#line 5173 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 486:

/* Line 1455 of yacc.c  */
#line 5181 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 487:

/* Line 1455 of yacc.c  */
#line 5189 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 488:

/* Line 1455 of yacc.c  */
#line 5197 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 489:

/* Line 1455 of yacc.c  */
#line 5210 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 490:

/* Line 1455 of yacc.c  */
#line 5223 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 491:

/* Line 1455 of yacc.c  */
#line 5237 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 492:

/* Line 1455 of yacc.c  */
#line 5242 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 493:

/* Line 1455 of yacc.c  */
#line 5254 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulonglong_number);}
    break;

  case 494:

/* Line 1455 of yacc.c  */
#line 5256 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            uint str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 495:

/* Line 1455 of yacc.c  */
#line 5306 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 496:

/* Line 1455 of yacc.c  */
#line 5309 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 497:

/* Line 1455 of yacc.c  */
#line 5311 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 498:

/* Line 1455 of yacc.c  */
#line 5326 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                          TL_READ,
                                                          MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 499:

/* Line 1455 of yacc.c  */
#line 5345 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 500:

/* Line 1455 of yacc.c  */
#line 5348 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 501:

/* Line 1455 of yacc.c  */
#line 5349 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 502:

/* Line 1455 of yacc.c  */
#line 5353 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 503:

/* Line 1455 of yacc.c  */
#line 5355 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 504:

/* Line 1455 of yacc.c  */
#line 5356 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 505:

/* Line 1455 of yacc.c  */
#line 5358 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 506:

/* Line 1455 of yacc.c  */
#line 5359 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 507:

/* Line 1455 of yacc.c  */
#line 5364 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 508:

/* Line 1455 of yacc.c  */
#line 5400 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 510:

/* Line 1455 of yacc.c  */
#line 5406 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
    break;

  case 512:

/* Line 1455 of yacc.c  */
#line 5424 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
    break;

  case 513:

/* Line 1455 of yacc.c  */
#line 5443 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 514:

/* Line 1455 of yacc.c  */
#line 5455 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 516:

/* Line 1455 of yacc.c  */
#line 5464 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 517:

/* Line 1455 of yacc.c  */
#line 5471 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 518:

/* Line 1455 of yacc.c  */
#line 5472 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 519:

/* Line 1455 of yacc.c  */
#line 5474 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 520:

/* Line 1455 of yacc.c  */
#line 5476 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 521:

/* Line 1455 of yacc.c  */
#line 5478 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 522:

/* Line 1455 of yacc.c  */
#line 5480 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 523:

/* Line 1455 of yacc.c  */
#line 5484 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 524:

/* Line 1455 of yacc.c  */
#line 5486 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 525:

/* Line 1455 of yacc.c  */
#line 5491 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
    break;

  case 526:

/* Line 1455 of yacc.c  */
#line 5493 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 527:

/* Line 1455 of yacc.c  */
#line 5509 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 528:

/* Line 1455 of yacc.c  */
#line 5510 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 529:

/* Line 1455 of yacc.c  */
#line 5514 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 530:

/* Line 1455 of yacc.c  */
#line 5515 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 531:

/* Line 1455 of yacc.c  */
#line 5520 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 532:

/* Line 1455 of yacc.c  */
#line 5539 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 533:

/* Line 1455 of yacc.c  */
#line 5549 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            /*
              TODO: replace @1.end with @2.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).end), (yyvsp[(2) - (3)].item),
                                         const_cast<char *>((yylsp[(2) - (3)]).end), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 534:

/* Line 1455 of yacc.c  */
#line 5565 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              TODO: replace @1.end with @2.start: we don't need whitespaces at
              the beginning of the partition expression string:
            */
            if (Lex->part_info->set_part_expr(const_cast<char *>((yylsp[(1) - (3)]).end), (yyvsp[(2) - (3)].item),
                                              const_cast<char *>((yylsp[(2) - (3)]).end), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 535:

/* Line 1455 of yacc.c  */
#line 5578 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 536:

/* Line 1455 of yacc.c  */
#line 5580 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 537:

/* Line 1455 of yacc.c  */
#line 5595 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 538:

/* Line 1455 of yacc.c  */
#line 5597 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 539:

/* Line 1455 of yacc.c  */
#line 5598 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 540:

/* Line 1455 of yacc.c  */
#line 5601 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 541:

/* Line 1455 of yacc.c  */
#line 5606 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 542:

/* Line 1455 of yacc.c  */
#line 5610 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 543:

/* Line 1455 of yacc.c  */
#line 5611 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 544:

/* Line 1455 of yacc.c  */
#line 5616 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 545:

/* Line 1455 of yacc.c  */
#line 5634 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 546:

/* Line 1455 of yacc.c  */
#line 5649 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 547:

/* Line 1455 of yacc.c  */
#line 5651 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 548:

/* Line 1455 of yacc.c  */
#line 5666 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 549:

/* Line 1455 of yacc.c  */
#line 5682 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 550:

/* Line 1455 of yacc.c  */
#line 5703 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 551:

/* Line 1455 of yacc.c  */
#line 5704 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 552:

/* Line 1455 of yacc.c  */
#line 5709 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 553:

/* Line 1455 of yacc.c  */
#line 5728 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 554:

/* Line 1455 of yacc.c  */
#line 5733 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 555:

/* Line 1455 of yacc.c  */
#line 5742 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 556:

/* Line 1455 of yacc.c  */
#line 5764 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 557:

/* Line 1455 of yacc.c  */
#line 5779 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 558:

/* Line 1455 of yacc.c  */
#line 5781 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 559:

/* Line 1455 of yacc.c  */
#line 5796 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 560:

/* Line 1455 of yacc.c  */
#line 5801 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 561:

/* Line 1455 of yacc.c  */
#line 5822 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 562:

/* Line 1455 of yacc.c  */
#line 5827 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 563:

/* Line 1455 of yacc.c  */
#line 5856 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 564:

/* Line 1455 of yacc.c  */
#line 5867 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 565:

/* Line 1455 of yacc.c  */
#line 5868 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 566:

/* Line 1455 of yacc.c  */
#line 5873 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 567:

/* Line 1455 of yacc.c  */
#line 5884 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 568:

/* Line 1455 of yacc.c  */
#line 5886 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 569:

/* Line 1455 of yacc.c  */
#line 5909 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 570:

/* Line 1455 of yacc.c  */
#line 5910 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 571:

/* Line 1455 of yacc.c  */
#line 5915 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 572:

/* Line 1455 of yacc.c  */
#line 5928 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 573:

/* Line 1455 of yacc.c  */
#line 5948 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 574:

/* Line 1455 of yacc.c  */
#line 5962 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 575:

/* Line 1455 of yacc.c  */
#line 5987 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 576:

/* Line 1455 of yacc.c  */
#line 5988 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 577:

/* Line 1455 of yacc.c  */
#line 5993 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 578:

/* Line 1455 of yacc.c  */
#line 6025 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 579:

/* Line 1455 of yacc.c  */
#line 6030 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 580:

/* Line 1455 of yacc.c  */
#line 6034 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 581:

/* Line 1455 of yacc.c  */
#line 6035 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 582:

/* Line 1455 of yacc.c  */
#line 6039 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 583:

/* Line 1455 of yacc.c  */
#line 6040 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 584:

/* Line 1455 of yacc.c  */
#line 6045 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 585:

/* Line 1455 of yacc.c  */
#line 6047 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 586:

/* Line 1455 of yacc.c  */
#line 6053 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 587:

/* Line 1455 of yacc.c  */
#line 6055 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 588:

/* Line 1455 of yacc.c  */
#line 6057 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 589:

/* Line 1455 of yacc.c  */
#line 6059 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 590:

/* Line 1455 of yacc.c  */
#line 6061 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 591:

/* Line 1455 of yacc.c  */
#line 6063 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 592:

/* Line 1455 of yacc.c  */
#line 6072 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select()->table_list.save_and_clear(&lex->save_list);
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
          }
    break;

  case 593:

/* Line 1455 of yacc.c  */
#line 6086 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 594:

/* Line 1455 of yacc.c  */
#line 6092 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select()->table_list.push_front(&Lex->save_list);
          }
    break;

  case 595:

/* Line 1455 of yacc.c  */
#line 6102 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 596:

/* Line 1455 of yacc.c  */
#line 6103 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 597:

/* Line 1455 of yacc.c  */
#line 6107 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 598:

/* Line 1455 of yacc.c  */
#line 6108 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 599:

/* Line 1455 of yacc.c  */
#line 6112 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 600:

/* Line 1455 of yacc.c  */
#line 6113 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 601:

/* Line 1455 of yacc.c  */
#line 6117 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 602:

/* Line 1455 of yacc.c  */
#line 6118 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 603:

/* Line 1455 of yacc.c  */
#line 6122 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 604:

/* Line 1455 of yacc.c  */
#line 6123 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 605:

/* Line 1455 of yacc.c  */
#line 6127 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 606:

/* Line 1455 of yacc.c  */
#line 6128 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 607:

/* Line 1455 of yacc.c  */
#line 6132 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 608:

/* Line 1455 of yacc.c  */
#line 6136 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 609:

/* Line 1455 of yacc.c  */
#line 6137 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 617:

/* Line 1455 of yacc.c  */
#line 6158 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 618:

/* Line 1455 of yacc.c  */
#line 6163 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 619:

/* Line 1455 of yacc.c  */
#line 6168 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 620:

/* Line 1455 of yacc.c  */
#line 6173 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 621:

/* Line 1455 of yacc.c  */
#line 6178 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 622:

/* Line 1455 of yacc.c  */
#line 6183 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 623:

/* Line 1455 of yacc.c  */
#line 6188 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 624:

/* Line 1455 of yacc.c  */
#line 6193 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 625:

/* Line 1455 of yacc.c  */
#line 6208 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 626:

/* Line 1455 of yacc.c  */
#line 6214 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 627:

/* Line 1455 of yacc.c  */
#line 6229 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 628:

/* Line 1455 of yacc.c  */
#line 6234 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 629:

/* Line 1455 of yacc.c  */
#line 6249 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 630:

/* Line 1455 of yacc.c  */
#line 6255 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 631:

/* Line 1455 of yacc.c  */
#line 6273 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 632:

/* Line 1455 of yacc.c  */
#line 6278 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 633:

/* Line 1455 of yacc.c  */
#line 6283 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 634:

/* Line 1455 of yacc.c  */
#line 6288 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 635:

/* Line 1455 of yacc.c  */
#line 6293 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 636:

/* Line 1455 of yacc.c  */
#line 6298 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 637:

/* Line 1455 of yacc.c  */
#line 6302 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex->table_list;
            lex->select_lex->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 640:

/* Line 1455 of yacc.c  */
#line 6326 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 641:

/* Line 1455 of yacc.c  */
#line 6331 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 642:

/* Line 1455 of yacc.c  */
#line 6336 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 643:

/* Line 1455 of yacc.c  */
#line 6341 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {Lex->create_info.tablespace= (yyvsp[(2) - (2)].lex_str).str;}
    break;

  case 644:

/* Line 1455 of yacc.c  */
#line 6343 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 645:

/* Line 1455 of yacc.c  */
#line 6345 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 646:

/* Line 1455 of yacc.c  */
#line 6347 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 647:

/* Line 1455 of yacc.c  */
#line 6353 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 648:

/* Line 1455 of yacc.c  */
#line 6361 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 649:

/* Line 1455 of yacc.c  */
#line 6379 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 650:

/* Line 1455 of yacc.c  */
#line 6396 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::SL_WARNING,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 651:

/* Line 1455 of yacc.c  */
#line 6422 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 652:

/* Line 1455 of yacc.c  */
#line 6439 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 653:

/* Line 1455 of yacc.c  */
#line 6440 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 654:

/* Line 1455 of yacc.c  */
#line 6441 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 655:

/* Line 1455 of yacc.c  */
#line 6442 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 656:

/* Line 1455 of yacc.c  */
#line 6443 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 657:

/* Line 1455 of yacc.c  */
#line 6444 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 658:

/* Line 1455 of yacc.c  */
#line 6448 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 659:

/* Line 1455 of yacc.c  */
#line 6449 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 660:

/* Line 1455 of yacc.c  */
#line 6450 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 661:

/* Line 1455 of yacc.c  */
#line 6454 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 662:

/* Line 1455 of yacc.c  */
#line 6455 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 663:

/* Line 1455 of yacc.c  */
#line 6456 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 664:

/* Line 1455 of yacc.c  */
#line 6457 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 665:

/* Line 1455 of yacc.c  */
#line 6463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 671:

/* Line 1455 of yacc.c  */
#line 6481 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 672:

/* Line 1455 of yacc.c  */
#line 6488 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 673:

/* Line 1455 of yacc.c  */
#line 6494 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 674:

/* Line 1455 of yacc.c  */
#line 6500 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 675:

/* Line 1455 of yacc.c  */
#line 6506 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 676:

/* Line 1455 of yacc.c  */
#line 6511 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table)->db,
                                      (yyvsp[(8) - (8)].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
    break;

  case 677:

/* Line 1455 of yacc.c  */
#line 6530 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 681:

/* Line 1455 of yacc.c  */
#line 6545 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 682:

/* Line 1455 of yacc.c  */
#line 6546 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 683:

/* Line 1455 of yacc.c  */
#line 6550 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 684:

/* Line 1455 of yacc.c  */
#line 6555 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
          }
    break;

  case 685:

/* Line 1455 of yacc.c  */
#line 6564 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (4)].lex_str), (enum enum_field_types) (yyvsp[(3) - (4)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 686:

/* Line 1455 of yacc.c  */
#line 6577 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 687:

/* Line 1455 of yacc.c  */
#line 6578 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 688:

/* Line 1455 of yacc.c  */
#line 6579 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
    break;

  case 689:

/* Line 1455 of yacc.c  */
#line 6581 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 690:

/* Line 1455 of yacc.c  */
#line 6586 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 691:

/* Line 1455 of yacc.c  */
#line 6590 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 692:

/* Line 1455 of yacc.c  */
#line 6595 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 693:

/* Line 1455 of yacc.c  */
#line 6600 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 694:

/* Line 1455 of yacc.c  */
#line 6604 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 695:

/* Line 1455 of yacc.c  */
#line 6609 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 696:

/* Line 1455 of yacc.c  */
#line 6614 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 697:

/* Line 1455 of yacc.c  */
#line 6620 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 698:

/* Line 1455 of yacc.c  */
#line 6625 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 699:

/* Line 1455 of yacc.c  */
#line 6631 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 700:

/* Line 1455 of yacc.c  */
#line 6635 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 701:

/* Line 1455 of yacc.c  */
#line 6640 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 702:

/* Line 1455 of yacc.c  */
#line 6645 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                /* Reset unsupported positive column width to default value */
                Lex->length= NULL;
                push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                    ER_INVALID_YEAR_COLUMN_LENGTH,
                                    ER(ER_INVALID_YEAR_COLUMN_LENGTH),
                                    length);
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
    break;

  case 703:

/* Line 1455 of yacc.c  */
#line 6663 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 704:

/* Line 1455 of yacc.c  */
#line 6665 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_TIME2; }
    break;

  case 705:

/* Line 1455 of yacc.c  */
#line 6667 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 706:

/* Line 1455 of yacc.c  */
#line 6683 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_DATETIME2; }
    break;

  case 707:

/* Line 1455 of yacc.c  */
#line 6685 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 708:

/* Line 1455 of yacc.c  */
#line 6690 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 709:

/* Line 1455 of yacc.c  */
#line 6695 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
          }
    break;

  case 710:

/* Line 1455 of yacc.c  */
#line 6701 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 711:

/* Line 1455 of yacc.c  */
#line 6706 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 712:

/* Line 1455 of yacc.c  */
#line 6711 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 713:

/* Line 1455 of yacc.c  */
#line 6716 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 714:

/* Line 1455 of yacc.c  */
#line 6718 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
    break;

  case 715:

/* Line 1455 of yacc.c  */
#line 6720 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_BLOB; }
    break;

  case 716:

/* Line 1455 of yacc.c  */
#line 6722 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 717:

/* Line 1455 of yacc.c  */
#line 6724 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
    break;

  case 718:

/* Line 1455 of yacc.c  */
#line 6726 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 719:

/* Line 1455 of yacc.c  */
#line 6728 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 720:

/* Line 1455 of yacc.c  */
#line 6730 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 721:

/* Line 1455 of yacc.c  */
#line 6732 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 722:

/* Line 1455 of yacc.c  */
#line 6734 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_ENUM; }
    break;

  case 723:

/* Line 1455 of yacc.c  */
#line 6736 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 724:

/* Line 1455 of yacc.c  */
#line 6738 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SET; }
    break;

  case 725:

/* Line 1455 of yacc.c  */
#line 6740 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 726:

/* Line 1455 of yacc.c  */
#line 6742 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 727:

/* Line 1455 of yacc.c  */
#line 6750 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 728:

/* Line 1455 of yacc.c  */
#line 6751 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 729:

/* Line 1455 of yacc.c  */
#line 6753 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*)"25";
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 730:

/* Line 1455 of yacc.c  */
#line 6757 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 731:

/* Line 1455 of yacc.c  */
#line 6758 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 732:

/* Line 1455 of yacc.c  */
#line 6759 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 733:

/* Line 1455 of yacc.c  */
#line 6760 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 734:

/* Line 1455 of yacc.c  */
#line 6761 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 735:

/* Line 1455 of yacc.c  */
#line 6765 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 736:

/* Line 1455 of yacc.c  */
#line 6769 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 737:

/* Line 1455 of yacc.c  */
#line 6770 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 738:

/* Line 1455 of yacc.c  */
#line 6774 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 739:

/* Line 1455 of yacc.c  */
#line 6775 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 740:

/* Line 1455 of yacc.c  */
#line 6779 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 741:

/* Line 1455 of yacc.c  */
#line 6780 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 742:

/* Line 1455 of yacc.c  */
#line 6781 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 743:

/* Line 1455 of yacc.c  */
#line 6782 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 744:

/* Line 1455 of yacc.c  */
#line 6783 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 745:

/* Line 1455 of yacc.c  */
#line 6787 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 746:

/* Line 1455 of yacc.c  */
#line 6788 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 747:

/* Line 1455 of yacc.c  */
#line 6789 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 748:

/* Line 1455 of yacc.c  */
#line 6790 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 749:

/* Line 1455 of yacc.c  */
#line 6791 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 750:

/* Line 1455 of yacc.c  */
#line 6796 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 751:

/* Line 1455 of yacc.c  */
#line 6801 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 752:

/* Line 1455 of yacc.c  */
#line 6803 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 753:

/* Line 1455 of yacc.c  */
#line 6808 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 754:

/* Line 1455 of yacc.c  */
#line 6810 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->dec= (char*)0; }
    break;

  case 755:

/* Line 1455 of yacc.c  */
#line 6812 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 756:

/* Line 1455 of yacc.c  */
#line 6817 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[(2) - (5)].lex_str).str;
            lex->dec=(yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 757:

/* Line 1455 of yacc.c  */
#line 6826 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->dec= (char *) 0; }
    break;

  case 758:

/* Line 1455 of yacc.c  */
#line 6827 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->dec= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 759:

/* Line 1455 of yacc.c  */
#line 6831 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 760:

/* Line 1455 of yacc.c  */
#line 6832 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 761:

/* Line 1455 of yacc.c  */
#line 6834 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 762:

/* Line 1455 of yacc.c  */
#line 6841 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 763:

/* Line 1455 of yacc.c  */
#line 6842 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 764:

/* Line 1455 of yacc.c  */
#line 6846 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 765:

/* Line 1455 of yacc.c  */
#line 6847 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 766:

/* Line 1455 of yacc.c  */
#line 6851 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 767:

/* Line 1455 of yacc.c  */
#line 6852 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 768:

/* Line 1455 of yacc.c  */
#line 6853 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 769:

/* Line 1455 of yacc.c  */
#line 6857 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 770:

/* Line 1455 of yacc.c  */
#line 6858 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 771:

/* Line 1455 of yacc.c  */
#line 6859 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 772:

/* Line 1455 of yacc.c  */
#line 6860 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 773:

/* Line 1455 of yacc.c  */
#line 6863 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->length=(char*) 0; /* use default length */ }
    break;

  case 774:

/* Line 1455 of yacc.c  */
#line 6864 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 775:

/* Line 1455 of yacc.c  */
#line 6868 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 776:

/* Line 1455 of yacc.c  */
#line 6869 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 777:

/* Line 1455 of yacc.c  */
#line 6873 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 778:

/* Line 1455 of yacc.c  */
#line 6874 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 779:

/* Line 1455 of yacc.c  */
#line 6878 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 781:

/* Line 1455 of yacc.c  */
#line 6884 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~ NOT_NULL_FLAG;
            Lex->type|= EXPLICIT_NULL_FLAG;
          }
    break;

  case 782:

/* Line 1455 of yacc.c  */
#line 6888 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 783:

/* Line 1455 of yacc.c  */
#line 6889 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 784:

/* Line 1455 of yacc.c  */
#line 6890 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->on_update_value= (yyvsp[(3) - (3)].item); }
    break;

  case 785:

/* Line 1455 of yacc.c  */
#line 6891 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 786:

/* Line 1455 of yacc.c  */
#line 6893 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 787:

/* Line 1455 of yacc.c  */
#line 6899 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 788:

/* Line 1455 of yacc.c  */
#line 6905 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG; 
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 789:

/* Line 1455 of yacc.c  */
#line 6911 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG; 
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX; 
          }
    break;

  case 790:

/* Line 1455 of yacc.c  */
#line 6916 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 791:

/* Line 1455 of yacc.c  */
#line 6918 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 792:

/* Line 1455 of yacc.c  */
#line 6931 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 793:

/* Line 1455 of yacc.c  */
#line 6937 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 794:

/* Line 1455 of yacc.c  */
#line 6943 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 795:

/* Line 1455 of yacc.c  */
#line 6949 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 796:

/* Line 1455 of yacc.c  */
#line 6954 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 797:

/* Line 1455 of yacc.c  */
#line 6959 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 798:

/* Line 1455 of yacc.c  */
#line 6968 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 799:

/* Line 1455 of yacc.c  */
#line 6989 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 801:

/* Line 1455 of yacc.c  */
#line 6998 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 802:

/* Line 1455 of yacc.c  */
#line 7002 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 803:

/* Line 1455 of yacc.c  */
#line 7003 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 804:

/* Line 1455 of yacc.c  */
#line 7008 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 805:

/* Line 1455 of yacc.c  */
#line 7015 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 806:

/* Line 1455 of yacc.c  */
#line 7019 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 807:

/* Line 1455 of yacc.c  */
#line 7020 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 808:

/* Line 1455 of yacc.c  */
#line 7024 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 809:

/* Line 1455 of yacc.c  */
#line 7025 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 810:

/* Line 1455 of yacc.c  */
#line 7030 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 811:

/* Line 1455 of yacc.c  */
#line 7038 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 812:

/* Line 1455 of yacc.c  */
#line 7042 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 813:

/* Line 1455 of yacc.c  */
#line 7043 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 814:

/* Line 1455 of yacc.c  */
#line 7048 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 815:

/* Line 1455 of yacc.c  */
#line 7055 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 816:

/* Line 1455 of yacc.c  */
#line 7056 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 817:

/* Line 1455 of yacc.c  */
#line 7060 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 818:

/* Line 1455 of yacc.c  */
#line 7061 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 819:

/* Line 1455 of yacc.c  */
#line 7065 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 820:

/* Line 1455 of yacc.c  */
#line 7066 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 821:

/* Line 1455 of yacc.c  */
#line 7071 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->charset= &my_charset_latin1; }
    break;

  case 822:

/* Line 1455 of yacc.c  */
#line 7073 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 823:

/* Line 1455 of yacc.c  */
#line 7077 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 824:

/* Line 1455 of yacc.c  */
#line 7084 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 825:

/* Line 1455 of yacc.c  */
#line 7093 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 826:

/* Line 1455 of yacc.c  */
#line 7098 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 827:

/* Line 1455 of yacc.c  */
#line 7105 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 830:

/* Line 1455 of yacc.c  */
#line 7108 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 831:

/* Line 1455 of yacc.c  */
#line 7109 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->charset=(yyvsp[(2) - (3)].charset); }
    break;

  case 832:

/* Line 1455 of yacc.c  */
#line 7111 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 833:

/* Line 1455 of yacc.c  */
#line 7116 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset);
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 834:

/* Line 1455 of yacc.c  */
#line 7123 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 835:

/* Line 1455 of yacc.c  */
#line 7124 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 836:

/* Line 1455 of yacc.c  */
#line 7129 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_parse_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 837:

/* Line 1455 of yacc.c  */
#line 7137 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 838:

/* Line 1455 of yacc.c  */
#line 7141 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 839:

/* Line 1455 of yacc.c  */
#line 7142 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 840:

/* Line 1455 of yacc.c  */
#line 7146 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 841:

/* Line 1455 of yacc.c  */
#line 7149 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 842:

/* Line 1455 of yacc.c  */
#line 7150 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 843:

/* Line 1455 of yacc.c  */
#line 7151 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 844:

/* Line 1455 of yacc.c  */
#line 7152 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 845:

/* Line 1455 of yacc.c  */
#line 7157 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 846:

/* Line 1455 of yacc.c  */
#line 7165 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 847:

/* Line 1455 of yacc.c  */
#line 7171 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 848:

/* Line 1455 of yacc.c  */
#line 7172 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 849:

/* Line 1455 of yacc.c  */
#line 7177 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 850:

/* Line 1455 of yacc.c  */
#line 7186 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 851:

/* Line 1455 of yacc.c  */
#line 7187 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 852:

/* Line 1455 of yacc.c  */
#line 7191 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 853:

/* Line 1455 of yacc.c  */
#line 7192 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 856:

/* Line 1455 of yacc.c  */
#line 7206 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 857:

/* Line 1455 of yacc.c  */
#line 7213 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 859:

/* Line 1455 of yacc.c  */
#line 7219 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 860:

/* Line 1455 of yacc.c  */
#line 7226 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 861:

/* Line 1455 of yacc.c  */
#line 7238 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
    break;

  case 862:

/* Line 1455 of yacc.c  */
#line 7240 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
    break;

  case 863:

/* Line 1455 of yacc.c  */
#line 7242 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 864:

/* Line 1455 of yacc.c  */
#line 7244 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 865:

/* Line 1455 of yacc.c  */
#line 7249 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 866:

/* Line 1455 of yacc.c  */
#line 7255 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 867:

/* Line 1455 of yacc.c  */
#line 7261 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 868:

/* Line 1455 of yacc.c  */
#line 7268 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 869:

/* Line 1455 of yacc.c  */
#line 7275 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 870:

/* Line 1455 of yacc.c  */
#line 7283 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 871:

/* Line 1455 of yacc.c  */
#line 7284 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
    break;

  case 872:

/* Line 1455 of yacc.c  */
#line 7285 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 873:

/* Line 1455 of yacc.c  */
#line 7286 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 874:

/* Line 1455 of yacc.c  */
#line 7287 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 875:

/* Line 1455 of yacc.c  */
#line 7291 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 876:

/* Line 1455 of yacc.c  */
#line 7295 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 877:

/* Line 1455 of yacc.c  */
#line 7296 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 878:

/* Line 1455 of yacc.c  */
#line 7300 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 879:

/* Line 1455 of yacc.c  */
#line 7301 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 880:

/* Line 1455 of yacc.c  */
#line 7305 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 882:

/* Line 1455 of yacc.c  */
#line 7310 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 883:

/* Line 1455 of yacc.c  */
#line 7311 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 884:

/* Line 1455 of yacc.c  */
#line 7312 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 885:

/* Line 1455 of yacc.c  */
#line 7316 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 886:

/* Line 1455 of yacc.c  */
#line 7317 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 887:

/* Line 1455 of yacc.c  */
#line 7321 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 888:

/* Line 1455 of yacc.c  */
#line 7326 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_type)= Key::SPATIAL;
          }
    break;

  case 889:

/* Line 1455 of yacc.c  */
#line 7332 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 892:

/* Line 1455 of yacc.c  */
#line 7349 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 894:

/* Line 1455 of yacc.c  */
#line 7354 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 896:

/* Line 1455 of yacc.c  */
#line 7359 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 904:

/* Line 1455 of yacc.c  */
#line 7379 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 905:

/* Line 1455 of yacc.c  */
#line 7380 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 906:

/* Line 1455 of yacc.c  */
#line 7385 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 907:

/* Line 1455 of yacc.c  */
#line 7386 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 912:

/* Line 1455 of yacc.c  */
#line 7401 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (plugin_is_ready(&(yyvsp[(3) - (3)].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 913:

/* Line 1455 of yacc.c  */
#line 7413 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 914:

/* Line 1455 of yacc.c  */
#line 7414 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 915:

/* Line 1455 of yacc.c  */
#line 7415 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 916:

/* Line 1455 of yacc.c  */
#line 7419 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 917:

/* Line 1455 of yacc.c  */
#line 7420 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 918:

/* Line 1455 of yacc.c  */
#line 7425 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 919:

/* Line 1455 of yacc.c  */
#line 7431 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 920:

/* Line 1455 of yacc.c  */
#line 7444 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 921:

/* Line 1455 of yacc.c  */
#line 7445 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 922:

/* Line 1455 of yacc.c  */
#line 7449 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 923:

/* Line 1455 of yacc.c  */
#line 7450 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 924:

/* Line 1455 of yacc.c  */
#line 7454 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 925:

/* Line 1455 of yacc.c  */
#line 7455 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 926:

/* Line 1455 of yacc.c  */
#line 7463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex->init_order();
            lex->select_lex->db= (lex->select_lex->table_list.first)->db;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 927:

/* Line 1455 of yacc.c  */
#line 7489 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 928:

/* Line 1455 of yacc.c  */
#line 7501 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 929:

/* Line 1455 of yacc.c  */
#line 7506 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 930:

/* Line 1455 of yacc.c  */
#line 7515 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 931:

/* Line 1455 of yacc.c  */
#line 7526 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 932:

/* Line 1455 of yacc.c  */
#line 7537 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 933:

/* Line 1455 of yacc.c  */
#line 7544 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 934:

/* Line 1455 of yacc.c  */
#line 7555 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 935:

/* Line 1455 of yacc.c  */
#line 7562 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 936:

/* Line 1455 of yacc.c  */
#line 7573 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 937:

/* Line 1455 of yacc.c  */
#line 7580 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 938:

/* Line 1455 of yacc.c  */
#line 7592 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 939:

/* Line 1455 of yacc.c  */
#line 7594 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 940:

/* Line 1455 of yacc.c  */
#line 7614 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 941:

/* Line 1455 of yacc.c  */
#line 7627 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 942:

/* Line 1455 of yacc.c  */
#line 7632 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 943:

/* Line 1455 of yacc.c  */
#line 7637 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 944:

/* Line 1455 of yacc.c  */
#line 7642 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 945:

/* Line 1455 of yacc.c  */
#line 7647 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[(3) - (7)].lex_str);
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_alter_server(&Lex->server_options);
          }
    break;

  case 946:

/* Line 1455 of yacc.c  */
#line 7655 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
    break;

  case 949:

/* Line 1455 of yacc.c  */
#line 7667 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
	    (yyvsp[(1) - (4)].lex_user)->alter_status.update_password_expired_column=
	      (yyvsp[(4) - (4)].user_password_expiration).set_password_expire_flag;
	    (yyvsp[(1) - (4)].lex_user)->alter_status.expire_after_days=
	      (yyvsp[(4) - (4)].user_password_expiration).expire_after_days;
	    (yyvsp[(1) - (4)].lex_user)->alter_status.use_default_password_lifetime=
	      (yyvsp[(4) - (4)].user_password_expiration).use_default_password_expiry;

            if (Lex->users_list.push_back((yyvsp[(1) - (4)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 950:

/* Line 1455 of yacc.c  */
#line 7682 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_password_expiration).set_password_expire_flag= true;
          }
    break;

  case 951:

/* Line 1455 of yacc.c  */
#line 7686 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (3)].ulong_num) == 0 || (yyvsp[(2) - (3)].ulong_num) > UINT_MAX16)
            {
	      char buf[MAX_BIGINT_WIDTH + 1];
	      snprintf(buf, sizeof(buf), "%lu", (yyvsp[(2) - (3)].ulong_num));
	      my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            (yyval.user_password_expiration).set_password_expire_flag= false;
            (yyval.user_password_expiration).expire_after_days= (yyvsp[(2) - (3)].ulong_num);
            (yyval.user_password_expiration).use_default_password_expiry= false;
	  }
    break;

  case 952:

/* Line 1455 of yacc.c  */
#line 7699 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.user_password_expiration).set_password_expire_flag= false;
            (yyval.user_password_expiration).expire_after_days= 0;
	    (yyval.user_password_expiration).use_default_password_expiry= false;
	  }
    break;

  case 953:

/* Line 1455 of yacc.c  */
#line 7705 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
	    (yyval.user_password_expiration).set_password_expire_flag= false;
	    (yyval.user_password_expiration).use_default_password_expiry= true;
	  }
    break;

  case 954:

/* Line 1455 of yacc.c  */
#line 7712 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 955:

/* Line 1455 of yacc.c  */
#line 7713 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 956:

/* Line 1455 of yacc.c  */
#line 7714 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 957:

/* Line 1455 of yacc.c  */
#line 7715 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 958:

/* Line 1455 of yacc.c  */
#line 7719 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 959:

/* Line 1455 of yacc.c  */
#line 7721 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname); 
            (yyval.num)= 1;
          }
    break;

  case 960:

/* Line 1455 of yacc.c  */
#line 7732 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 961:

/* Line 1455 of yacc.c  */
#line 7733 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 962:

/* Line 1455 of yacc.c  */
#line 7737 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 963:

/* Line 1455 of yacc.c  */
#line 7738 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 965:

/* Line 1455 of yacc.c  */
#line 7744 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 966:

/* Line 1455 of yacc.c  */
#line 7752 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 972:

/* Line 1455 of yacc.c  */
#line 7774 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
    break;

  case 973:

/* Line 1455 of yacc.c  */
#line 7779 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 974:

/* Line 1455 of yacc.c  */
#line 7786 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 976:

/* Line 1455 of yacc.c  */
#line 7800 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 977:

/* Line 1455 of yacc.c  */
#line 7812 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 979:

/* Line 1455 of yacc.c  */
#line 7825 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 981:

/* Line 1455 of yacc.c  */
#line 7838 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 982:

/* Line 1455 of yacc.c  */
#line 7845 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 984:

/* Line 1455 of yacc.c  */
#line 7858 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex->db=(yyvsp[(6) - (7)].table)->db.str;
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(6) - (7)].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 985:

/* Line 1455 of yacc.c  */
#line 7883 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 986:

/* Line 1455 of yacc.c  */
#line 7892 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 987:

/* Line 1455 of yacc.c  */
#line 7903 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 988:

/* Line 1455 of yacc.c  */
#line 7910 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 990:

/* Line 1455 of yacc.c  */
#line 7918 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 991:

/* Line 1455 of yacc.c  */
#line 7930 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 993:

/* Line 1455 of yacc.c  */
#line 7936 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 994:

/* Line 1455 of yacc.c  */
#line 7941 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 995:

/* Line 1455 of yacc.c  */
#line 7948 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 997:

/* Line 1455 of yacc.c  */
#line 7963 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 998:

/* Line 1455 of yacc.c  */
#line 7967 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 999:

/* Line 1455 of yacc.c  */
#line 7971 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 1000:

/* Line 1455 of yacc.c  */
#line 7978 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1001:

/* Line 1455 of yacc.c  */
#line 7979 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1002:

/* Line 1455 of yacc.c  */
#line 7984 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            if (Lex->alter_info.partition_names.push_back(s))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1005:

/* Line 1455 of yacc.c  */
#line 8009 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 1006:

/* Line 1455 of yacc.c  */
#line 8018 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1007:

/* Line 1455 of yacc.c  */
#line 8022 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 1008:

/* Line 1455 of yacc.c  */
#line 8027 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN |
                                    Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 1009:

/* Line 1455 of yacc.c  */
#line 8032 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 1010:

/* Line 1455 of yacc.c  */
#line 8038 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1011:

/* Line 1455 of yacc.c  */
#line 8042 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 1012:

/* Line 1455 of yacc.c  */
#line 8051 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (6)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (6)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (6)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 1013:

/* Line 1455 of yacc.c  */
#line 8063 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 1014:

/* Line 1455 of yacc.c  */
#line 8067 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 1015:

/* Line 1455 of yacc.c  */
#line 8076 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 1016:

/* Line 1455 of yacc.c  */
#line 8085 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1017:

/* Line 1455 of yacc.c  */
#line 8094 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 1018:

/* Line 1455 of yacc.c  */
#line 8103 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1019:

/* Line 1455 of yacc.c  */
#line 8109 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 1020:

/* Line 1455 of yacc.c  */
#line 8115 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1021:

/* Line 1455 of yacc.c  */
#line 8124 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 1022:

/* Line 1455 of yacc.c  */
#line 8133 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex->db= (yyvsp[(3) - (3)].table)->db.str;
            if (lex->select_lex->db == NULL &&
                lex->copy_db_to(&lex->select_lex->db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            if ((yyvsp[(3) - (3)].table)->db.str &&
                (check_and_convert_db_name(&(yyvsp[(3) - (3)].table)->db, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name= (yyvsp[(3) - (3)].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 1023:

/* Line 1455 of yacc.c  */
#line 8161 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (YYTHD->mem_root)
                                    Alter_rename_key((yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= Alter_info::ALTER_RENAME_INDEX;
          }
    break;

  case 1024:

/* Line 1455 of yacc.c  */
#line 8171 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_CONVERT;
          }
    break;

  case 1025:

/* Line 1455 of yacc.c  */
#line 8192 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 1026:

/* Line 1455 of yacc.c  */
#line 8202 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 1027:

/* Line 1455 of yacc.c  */
#line 8206 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 1035:

/* Line 1455 of yacc.c  */
#line 8223 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1036:

/* Line 1455 of yacc.c  */
#line 8228 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1037:

/* Line 1455 of yacc.c  */
#line 8239 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1038:

/* Line 1455 of yacc.c  */
#line 8244 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1039:

/* Line 1455 of yacc.c  */
#line 8254 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1040:

/* Line 1455 of yacc.c  */
#line 8255 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1041:

/* Line 1455 of yacc.c  */
#line 8259 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 1042:

/* Line 1455 of yacc.c  */
#line 8260 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 1043:

/* Line 1455 of yacc.c  */
#line 8264 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 1044:

/* Line 1455 of yacc.c  */
#line 8265 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 1045:

/* Line 1455 of yacc.c  */
#line 8266 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 1046:

/* Line 1455 of yacc.c  */
#line 8270 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1047:

/* Line 1455 of yacc.c  */
#line 8272 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column((yyvsp[(2) - (2)].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1048:

/* Line 1455 of yacc.c  */
#line 8277 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1049:

/* Line 1455 of yacc.c  */
#line 8284 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1050:

/* Line 1455 of yacc.c  */
#line 8285 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1051:

/* Line 1455 of yacc.c  */
#line 8286 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1052:

/* Line 1455 of yacc.c  */
#line 8287 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1053:

/* Line 1455 of yacc.c  */
#line 8292 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1054:

/* Line 1455 of yacc.c  */
#line 8304 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1055:

/* Line 1455 of yacc.c  */
#line 8321 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1056:

/* Line 1455 of yacc.c  */
#line 8331 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1057:

/* Line 1455 of yacc.c  */
#line 8347 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1058:

/* Line 1455 of yacc.c  */
#line 8351 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1059:

/* Line 1455 of yacc.c  */
#line 8358 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1060:

/* Line 1455 of yacc.c  */
#line 8362 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1061:

/* Line 1455 of yacc.c  */
#line 8369 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1062:

/* Line 1455 of yacc.c  */
#line 8373 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1063:

/* Line 1455 of yacc.c  */
#line 8377 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1065:

/* Line 1455 of yacc.c  */
#line 8388 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1066:

/* Line 1455 of yacc.c  */
#line 8392 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1067:

/* Line 1455 of yacc.c  */
#line 8398 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1068:

/* Line 1455 of yacc.c  */
#line 8402 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1069:

/* Line 1455 of yacc.c  */
#line 8408 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1070:

/* Line 1455 of yacc.c  */
#line 8412 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1071:

/* Line 1455 of yacc.c  */
#line 8418 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1072:

/* Line 1455 of yacc.c  */
#line 8422 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1073:

/* Line 1455 of yacc.c  */
#line 8429 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1074:

/* Line 1455 of yacc.c  */
#line 8433 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1075:

/* Line 1455 of yacc.c  */
#line 8440 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1076:

/* Line 1455 of yacc.c  */
#line 8444 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1077:

/* Line 1455 of yacc.c  */
#line 8451 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1078:

/* Line 1455 of yacc.c  */
#line 8455 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1079:

/* Line 1455 of yacc.c  */
#line 8461 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1080:

/* Line 1455 of yacc.c  */
#line 8463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
    break;

  case 1083:

/* Line 1455 of yacc.c  */
#line 8490 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1084:

/* Line 1455 of yacc.c  */
#line 8495 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1085:

/* Line 1455 of yacc.c  */
#line 8500 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1086:

/* Line 1455 of yacc.c  */
#line 8507 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1087:

/* Line 1455 of yacc.c  */
#line 8514 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1088:

/* Line 1455 of yacc.c  */
#line 8518 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1089:

/* Line 1455 of yacc.c  */
#line 8519 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1090:

/* Line 1455 of yacc.c  */
#line 8520 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1091:

/* Line 1455 of yacc.c  */
#line 8525 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1092:

/* Line 1455 of yacc.c  */
#line 8535 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1093:

/* Line 1455 of yacc.c  */
#line 8546 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1094:

/* Line 1455 of yacc.c  */
#line 8547 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1095:

/* Line 1455 of yacc.c  */
#line 8551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1096:

/* Line 1455 of yacc.c  */
#line 8552 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1097:

/* Line 1455 of yacc.c  */
#line 8556 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1098:

/* Line 1455 of yacc.c  */
#line 8557 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1099:

/* Line 1455 of yacc.c  */
#line 8558 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1100:

/* Line 1455 of yacc.c  */
#line 8563 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1101:

/* Line 1455 of yacc.c  */
#line 8573 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1102:

/* Line 1455 of yacc.c  */
#line 8585 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1103:

/* Line 1455 of yacc.c  */
#line 8593 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1104:

/* Line 1455 of yacc.c  */
#line 8608 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1105:

/* Line 1455 of yacc.c  */
#line 8619 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1106:

/* Line 1455 of yacc.c  */
#line 8620 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1107:

/* Line 1455 of yacc.c  */
#line 8624 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1108:

/* Line 1455 of yacc.c  */
#line 8625 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1109:

/* Line 1455 of yacc.c  */
#line 8629 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1110:

/* Line 1455 of yacc.c  */
#line 8630 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1111:

/* Line 1455 of yacc.c  */
#line 8631 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1112:

/* Line 1455 of yacc.c  */
#line 8632 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1113:

/* Line 1455 of yacc.c  */
#line 8633 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1114:

/* Line 1455 of yacc.c  */
#line 8634 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1115:

/* Line 1455 of yacc.c  */
#line 8639 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1116:

/* Line 1455 of yacc.c  */
#line 8649 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1117:

/* Line 1455 of yacc.c  */
#line 8660 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1118:

/* Line 1455 of yacc.c  */
#line 8661 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1119:

/* Line 1455 of yacc.c  */
#line 8662 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1120:

/* Line 1455 of yacc.c  */
#line 8667 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1121:

/* Line 1455 of yacc.c  */
#line 8671 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1122:

/* Line 1455 of yacc.c  */
#line 8673 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1123:

/* Line 1455 of yacc.c  */
#line 8680 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1124:

/* Line 1455 of yacc.c  */
#line 8685 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1127:

/* Line 1455 of yacc.c  */
#line 8698 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1128:

/* Line 1455 of yacc.c  */
#line 8711 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1129:

/* Line 1455 of yacc.c  */
#line 8715 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1134:

/* Line 1455 of yacc.c  */
#line 8734 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1135:

/* Line 1455 of yacc.c  */
#line 8744 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1136:

/* Line 1455 of yacc.c  */
#line 8753 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1137:

/* Line 1455 of yacc.c  */
#line 8754 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1138:

/* Line 1455 of yacc.c  */
#line 8759 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1139:

/* Line 1455 of yacc.c  */
#line 8765 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1144:

/* Line 1455 of yacc.c  */
#line 8780 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1145:

/* Line 1455 of yacc.c  */
#line 8790 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1146:

/* Line 1455 of yacc.c  */
#line 8800 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1148:

/* Line 1455 of yacc.c  */
#line 8807 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex->alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
    break;

  case 1150:

/* Line 1455 of yacc.c  */
#line 8818 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1152:

/* Line 1455 of yacc.c  */
#line 8824 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1153:

/* Line 1455 of yacc.c  */
#line 8825 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1154:

/* Line 1455 of yacc.c  */
#line 8835 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
    break;

  case 1157:

/* Line 1455 of yacc.c  */
#line 8848 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              In order to correctly parse UNION's global ORDER BY we need to
              set braces before parsing the clause.
            */
            Lex->current_select()->set_braces(true);
          }
    break;

  case 1158:

/* Line 1455 of yacc.c  */
#line 8856 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1160:

/* Line 1455 of yacc.c  */
#line 8865 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->set_braces(true);
          }
    break;

  case 1161:

/* Line 1455 of yacc.c  */
#line 8870 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1163:

/* Line 1455 of yacc.c  */
#line 8879 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            // Parentheses carry no meaning here.
            lex->current_select()->set_braces(false);
          }
    break;

  case 1167:

/* Line 1455 of yacc.c  */
#line 8909 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(2) - (11)].is_not_empty) && (yyvsp[(10) - (11)].is_not_empty))
            {
              /* double "INTO" clause */
              parse_error_at(YYTHD, (yylsp[(10) - (11)]), ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(9) - (11)].is_not_empty) && ((yyvsp[(2) - (11)].is_not_empty) || (yyvsp[(10) - (11)].is_not_empty)))
            {
              /* "INTO" with "PROCEDURE ANALYSE" */
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1168:

/* Line 1455 of yacc.c  */
#line 8926 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
          }
    break;

  case 1169:

/* Line 1455 of yacc.c  */
#line 8931 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1174:

/* Line 1455 of yacc.c  */
#line 8961 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
    break;

  case 1177:

/* Line 1455 of yacc.c  */
#line 8976 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1181:

/* Line 1455 of yacc.c  */
#line 8993 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select() != Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex->sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex->sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex->options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex->sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
    break;

  case 1182:

/* Line 1455 of yacc.c  */
#line 9021 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select() != Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex->sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex->sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex->options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex->sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
    break;

  case 1183:

/* Line 1455 of yacc.c  */
#line 9049 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /**
              MAX_STATEMENT_TIME is applicable to SELECT query and that too
              only for the TOP LEVEL SELECT statement.
              MAX_STATEMENT_TIME is not appliable to SELECTs of stored routines.
            */
            if (Lex->sphead ||
                Lex->current_select() != Lex->select_lex   ||
                (Lex->sql_command == SQLCOM_CREATE_TABLE   ||
                 Lex->sql_command == SQLCOM_CREATE_VIEW    ||
                 Lex->sql_command == SQLCOM_REPLACE_SELECT ||
                 Lex->sql_command == SQLCOM_INSERT_SELECT))
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "MAX_STATEMENT_TIME");
              MYSQL_YYABORT;
            }

            Lex->max_statement_time= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 1185:

/* Line 1455 of yacc.c  */
#line 9073 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select()->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1186:

/* Line 1455 of yacc.c  */
#line 9079 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select()->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1189:

/* Line 1455 of yacc.c  */
#line 9091 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select()->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select()->with_wild)++;
          }
    break;

  case 1190:

/* Line 1455 of yacc.c  */
#line 9106 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1191:

/* Line 1455 of yacc.c  */
#line 9113 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[(1) - (2)].item)))
              MYSQL_YYABORT;
            if ((yyvsp[(2) - (2)].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[(2) - (2)].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[(1) - (2)].item)->item_name.copy((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, system_charset_info, false);
            }
            else if (!(yyvsp[(1) - (2)].item)->item_name.is_set())
            {
              (yyvsp[(1) - (2)].item)->item_name.copy((yylsp[(1) - (2)]).start, (uint) ((yylsp[(1) - (2)]).end - (yylsp[(1) - (2)]).start), thd->charset());
            }
          }
    break;

  case 1192:

/* Line 1455 of yacc.c  */
#line 9137 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1193:

/* Line 1455 of yacc.c  */
#line 9138 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1194:

/* Line 1455 of yacc.c  */
#line 9139 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1195:

/* Line 1455 of yacc.c  */
#line 9140 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1196:

/* Line 1455 of yacc.c  */
#line 9141 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1197:

/* Line 1455 of yacc.c  */
#line 9145 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1198:

/* Line 1455 of yacc.c  */
#line 9146 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1199:

/* Line 1455 of yacc.c  */
#line 9152 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_or*) (yyvsp[(1) - (3)].item);
              if (is_cond_or((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_or((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1200:

/* Line 1455 of yacc.c  */
#line 9203 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_func_xor((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1201:

/* Line 1455 of yacc.c  */
#line 9210 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_and*) (yyvsp[(1) - (3)].item);
              if (is_cond_and((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_and((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1202:

/* Line 1455 of yacc.c  */
#line 9253 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1203:

/* Line 1455 of yacc.c  */
#line 9259 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1204:

/* Line 1455 of yacc.c  */
#line 9265 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1205:

/* Line 1455 of yacc.c  */
#line 9271 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1206:

/* Line 1455 of yacc.c  */
#line 9277 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1207:

/* Line 1455 of yacc.c  */
#line 9283 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1208:

/* Line 1455 of yacc.c  */
#line 9289 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1210:

/* Line 1455 of yacc.c  */
#line 9299 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1211:

/* Line 1455 of yacc.c  */
#line 9305 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1212:

/* Line 1455 of yacc.c  */
#line 9311 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1213:

/* Line 1455 of yacc.c  */
#line 9317 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (*(yyvsp[(2) - (3)].boolfunc2creator))(0)->create((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1214:

/* Line 1455 of yacc.c  */
#line 9323 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1216:

/* Line 1455 of yacc.c  */
#line 9333 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1217:

/* Line 1455 of yacc.c  */
#line 9339 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1218:

/* Line 1455 of yacc.c  */
#line 9349 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1219:

/* Line 1455 of yacc.c  */
#line 9355 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(4) - (7)].item));
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(1) - (7)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[(6) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1220:

/* Line 1455 of yacc.c  */
#line 9363 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1221:

/* Line 1455 of yacc.c  */
#line 9369 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(1) - (8)].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1222:

/* Line 1455 of yacc.c  */
#line 9379 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (5)].item),(yyvsp[(3) - (5)].item),(yyvsp[(5) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1223:

/* Line 1455 of yacc.c  */
#line 9385 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (6)].item),(yyvsp[(4) - (6)].item),(yyvsp[(6) - (6)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1224:

/* Line 1455 of yacc.c  */
#line 9394 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(1) - (4)].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1225:

/* Line 1455 of yacc.c  */
#line 9404 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (4)].item),(yyvsp[(3) - (4)].item),(yyvsp[(4) - (4)].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1226:

/* Line 1455 of yacc.c  */
#line 9410 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1227:

/* Line 1455 of yacc.c  */
#line 9420 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1228:

/* Line 1455 of yacc.c  */
#line 9426 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (4)].item),(yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1230:

/* Line 1455 of yacc.c  */
#line 9439 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1231:

/* Line 1455 of yacc.c  */
#line 9445 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1232:

/* Line 1455 of yacc.c  */
#line 9451 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1233:

/* Line 1455 of yacc.c  */
#line 9457 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1234:

/* Line 1455 of yacc.c  */
#line 9463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1235:

/* Line 1455 of yacc.c  */
#line 9469 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1236:

/* Line 1455 of yacc.c  */
#line 9475 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1237:

/* Line 1455 of yacc.c  */
#line 9481 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1238:

/* Line 1455 of yacc.c  */
#line 9487 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1239:

/* Line 1455 of yacc.c  */
#line 9493 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1240:

/* Line 1455 of yacc.c  */
#line 9499 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1241:

/* Line 1455 of yacc.c  */
#line 9505 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1242:

/* Line 1455 of yacc.c  */
#line 9511 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1243:

/* Line 1455 of yacc.c  */
#line 9517 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1253:

/* Line 1455 of yacc.c  */
#line 9546 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1254:

/* Line 1455 of yacc.c  */
#line 9547 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1255:

/* Line 1455 of yacc.c  */
#line 9548 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1256:

/* Line 1455 of yacc.c  */
#line 9549 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1257:

/* Line 1455 of yacc.c  */
#line 9550 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1258:

/* Line 1455 of yacc.c  */
#line 9551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1259:

/* Line 1455 of yacc.c  */
#line 9555 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1260:

/* Line 1455 of yacc.c  */
#line 9556 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1266:

/* Line 1455 of yacc.c  */
#line 9566 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[(3) - (3)].lex_str).str,
                                                      (yyvsp[(3) - (3)].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[(1) - (3)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1271:

/* Line 1455 of yacc.c  */
#line 9582 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1272:

/* Line 1455 of yacc.c  */
#line 9588 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1273:

/* Line 1455 of yacc.c  */
#line 9592 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1274:

/* Line 1455 of yacc.c  */
#line 9598 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1275:

/* Line 1455 of yacc.c  */
#line 9604 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1276:

/* Line 1455 of yacc.c  */
#line 9610 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[(2) - (3)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1277:

/* Line 1455 of yacc.c  */
#line 9616 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1278:

/* Line 1455 of yacc.c  */
#line 9618 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(4) - (5)].item_list)->push_front((yyvsp[(2) - (5)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(4) - (5)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1279:

/* Line 1455 of yacc.c  */
#line 9625 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(5) - (6)].item_list)->push_front((yyvsp[(3) - (6)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(5) - (6)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1280:

/* Line 1455 of yacc.c  */
#line 9632 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[(3) - (4)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1281:

/* Line 1455 of yacc.c  */
#line 9638 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item_string *item;
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[(3) - (4)].item)->type() == Item::STRING_ITEM &&
               (item= (Item_string *) (yyvsp[(3) - (4)].item)) &&
                item->collation.repertoire == MY_REPERTOIRE_ASCII &&
                item->str_value.length() < MAX_DATE_STRING_REP_LENGTH * 4)
            {
              enum_field_types type= MYSQL_TYPE_STRING;
              ErrConvString str(&item->str_value);
              LEX_STRING *ls= &(yyvsp[(2) - (4)].lex_str);
              if (ls->length == 1)
              {
                if (ls->str[0] == 'd')  /* {d'2001-01-01'} */
                  type= MYSQL_TYPE_DATE;
                else if (ls->str[0] == 't') /* {t'10:20:30'} */
                  type= MYSQL_TYPE_TIME;
              }
              else if (ls->length == 2) /* {ts'2001-01-01 10:20:30'} */
              {
                if (ls->str[0] == 't' && ls->str[1] == 's')
                  type= MYSQL_TYPE_DATETIME;
              }
              if (type != MYSQL_TYPE_STRING)
                (yyval.item)= create_temporal_literal(YYTHD,
                                            str.ptr(), str.length(),
                                            system_charset_info,
                                            type, false);
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[(3) - (4)].item);
          }
    break;

  case 1282:

/* Line 1455 of yacc.c  */
#line 9679 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (7)].item_list)->push_front((yyvsp[(5) - (7)].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[(2) - (7)].item_list), (yyvsp[(6) - (7)].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            Lex->set_using_match();
            (yyval.item)= i1;
          }
    break;

  case 1283:

/* Line 1455 of yacc.c  */
#line 9689 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1284:

/* Line 1455 of yacc.c  */
#line 9696 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1285:

/* Line 1455 of yacc.c  */
#line 9704 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1286:

/* Line 1455 of yacc.c  */
#line 9710 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1287:

/* Line 1455 of yacc.c  */
#line 9717 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1288:

/* Line 1455 of yacc.c  */
#line 9723 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[(3) - (4)].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->m_name.ptr());
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1289:

/* Line 1455 of yacc.c  */
#line 9737 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1290:

/* Line 1455 of yacc.c  */
#line 9745 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(5) - (5)].item),(yyvsp[(2) - (5)].item),(yyvsp[(3) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1291:

/* Line 1455 of yacc.c  */
#line 9760 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1292:

/* Line 1455 of yacc.c  */
#line 9766 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (6)].item_list), (yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1293:

/* Line 1455 of yacc.c  */
#line 9772 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1294:

/* Line 1455 of yacc.c  */
#line 9780 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1295:

/* Line 1455 of yacc.c  */
#line 9786 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1296:

/* Line 1455 of yacc.c  */
#line 9792 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1297:

/* Line 1455 of yacc.c  */
#line 9798 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[(3) - (10)].item),(yyvsp[(5) - (10)].item),(yyvsp[(7) - (10)].item),(yyvsp[(9) - (10)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1298:

/* Line 1455 of yacc.c  */
#line 9804 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[(5) - (6)].item));
            list->push_front((yyvsp[(3) - (6)].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1299:

/* Line 1455 of yacc.c  */
#line 9819 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(3) - (8)].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1300:

/* Line 1455 of yacc.c  */
#line 9831 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1301:

/* Line 1455 of yacc.c  */
#line 9837 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1302:

/* Line 1455 of yacc.c  */
#line 9843 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1303:

/* Line 1455 of yacc.c  */
#line 9849 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1304:

/* Line 1455 of yacc.c  */
#line 9855 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1305:

/* Line 1455 of yacc.c  */
#line 9861 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1306:

/* Line 1455 of yacc.c  */
#line 9867 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1307:

/* Line 1455 of yacc.c  */
#line 9873 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1308:

/* Line 1455 of yacc.c  */
#line 9879 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1309:

/* Line 1455 of yacc.c  */
#line 9885 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1310:

/* Line 1455 of yacc.c  */
#line 9891 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1311:

/* Line 1455 of yacc.c  */
#line 9897 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1312:

/* Line 1455 of yacc.c  */
#line 9903 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1313:

/* Line 1455 of yacc.c  */
#line 9909 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1314:

/* Line 1455 of yacc.c  */
#line 9915 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1315:

/* Line 1455 of yacc.c  */
#line 9921 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1316:

/* Line 1455 of yacc.c  */
#line 9927 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1317:

/* Line 1455 of yacc.c  */
#line 9935 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1318:

/* Line 1455 of yacc.c  */
#line 9956 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1319:

/* Line 1455 of yacc.c  */
#line 9963 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1320:

/* Line 1455 of yacc.c  */
#line 9969 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1321:

/* Line 1455 of yacc.c  */
#line 9976 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1322:

/* Line 1455 of yacc.c  */
#line 9984 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1323:

/* Line 1455 of yacc.c  */
#line 9991 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1324:

/* Line 1455 of yacc.c  */
#line 9997 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1325:

/* Line 1455 of yacc.c  */
#line 10003 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1326:

/* Line 1455 of yacc.c  */
#line 10009 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(1) - (1)].item);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1327:

/* Line 1455 of yacc.c  */
#line 10014 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1328:

/* Line 1455 of yacc.c  */
#line 10020 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1329:

/* Line 1455 of yacc.c  */
#line 10027 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1330:

/* Line 1455 of yacc.c  */
#line 10033 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1331:

/* Line 1455 of yacc.c  */
#line 10039 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1332:

/* Line 1455 of yacc.c  */
#line 10045 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1333:

/* Line 1455 of yacc.c  */
#line 10051 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1334:

/* Line 1455 of yacc.c  */
#line 10057 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[(2) - (2)].ulong_num));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1335:

/* Line 1455 of yacc.c  */
#line 10075 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(7) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(3) - (8)].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1336:

/* Line 1455 of yacc.c  */
#line 10081 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1337:

/* Line 1455 of yacc.c  */
#line 10087 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1338:

/* Line 1455 of yacc.c  */
#line 10094 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1339:

/* Line 1455 of yacc.c  */
#line 10101 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1340:

/* Line 1455 of yacc.c  */
#line 10116 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1341:

/* Line 1455 of yacc.c  */
#line 10122 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1342:

/* Line 1455 of yacc.c  */
#line 10128 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1343:

/* Line 1455 of yacc.c  */
#line 10134 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1344:

/* Line 1455 of yacc.c  */
#line 10140 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1345:

/* Line 1455 of yacc.c  */
#line 10147 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1346:

/* Line 1455 of yacc.c  */
#line 10153 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1347:

/* Line 1455 of yacc.c  */
#line 10159 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1348:

/* Line 1455 of yacc.c  */
#line 10165 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1349:

/* Line 1455 of yacc.c  */
#line 10171 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1350:

/* Line 1455 of yacc.c  */
#line 10177 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            Lex->contains_plaintext_password= true;
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1351:

/* Line 1455 of yacc.c  */
#line 10184 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item* i1;
            Lex->contains_plaintext_password= true;
            if (thd->variables.old_passwords == 1)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[(3) - (4)].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
    break;

  case 1352:

/* Line 1455 of yacc.c  */
#line 10197 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1353:

/* Line 1455 of yacc.c  */
#line 10203 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1354:

/* Line 1455 of yacc.c  */
#line 10209 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1355:

/* Line 1455 of yacc.c  */
#line 10215 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_reverse((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1356:

/* Line 1455 of yacc.c  */
#line 10221 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_row_count();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1357:

/* Line 1455 of yacc.c  */
#line 10229 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1358:

/* Line 1455 of yacc.c  */
#line 10235 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int(NAME_STRING("0"),
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[(3) - (4)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1359:

/* Line 1455 of yacc.c  */
#line 10247 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1360:

/* Line 1455 of yacc.c  */
#line 10253 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1361:

/* Line 1455 of yacc.c  */
#line 10259 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string((yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1362:

/* Line 1455 of yacc.c  */
#line 10267 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_char_typecast((yyvsp[(3) - (7)].item), (yyvsp[(6) - (7)].ulong_num), &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string(item, 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1363:

/* Line 1455 of yacc.c  */
#line 10277 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1364:

/* Line 1455 of yacc.c  */
#line 10283 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(1) - (1)].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1365:

/* Line 1455 of yacc.c  */
#line 10293 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_mbr_rel((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
    break;

  case 1366:

/* Line 1455 of yacc.c  */
#line 10299 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
    break;

  case 1367:

/* Line 1455 of yacc.c  */
#line 10306 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
    break;

  case 1368:

/* Line 1455 of yacc.c  */
#line 10313 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
    break;

  case 1369:

/* Line 1455 of yacc.c  */
#line 10320 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
    break;

  case 1370:

/* Line 1455 of yacc.c  */
#line 10327 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
    break;

  case 1371:

/* Line 1455 of yacc.c  */
#line 10334 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item)));
          }
    break;

  case 1372:

/* Line 1455 of yacc.c  */
#line 10338 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
    break;

  case 1373:

/* Line 1455 of yacc.c  */
#line 10357 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[(1) - (2)].lex_str).str, (yyvsp[(1) - (2)].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select()->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
    break;

  case 1374:

/* Line 1455 of yacc.c  */
#line 10376 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            if (sp_check_name(&(yyvsp[(1) - (5)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[(1) - (5)].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[(3) - (5)].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[(4) - (5)].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1375:

/* Line 1455 of yacc.c  */
#line 10430 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[(1) - (6)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), true, (yyvsp[(5) - (6)].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1376:

/* Line 1455 of yacc.c  */
#line 10470 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1377:

/* Line 1455 of yacc.c  */
#line 10472 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1378:

/* Line 1455 of yacc.c  */
#line 10476 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1379:

/* Line 1455 of yacc.c  */
#line 10477 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1380:

/* Line 1455 of yacc.c  */
#line 10481 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1381:

/* Line 1455 of yacc.c  */
#line 10482 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1382:

/* Line 1455 of yacc.c  */
#line 10486 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1383:

/* Line 1455 of yacc.c  */
#line 10487 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1384:

/* Line 1455 of yacc.c  */
#line 10492 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1385:

/* Line 1455 of yacc.c  */
#line 10499 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1386:

/* Line 1455 of yacc.c  */
#line 10507 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[(2) - (2)].lex_str).str)
            {
              (yyvsp[(1) - (2)].item)->item_name.copy((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, system_charset_info, false);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               [@1.start ... @1.end) we may get quoted or escaped names.
            */
            else if ((yyvsp[(1) - (2)].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[(1) - (2)].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[(1) - (2)].item)->item_name.copy((yylsp[(1) - (2)]).start, (uint) ((yylsp[(1) - (2)]).end - (yylsp[(1) - (2)]).start), YYTHD->charset());
            (yyval.item)= (yyvsp[(1) - (2)].item);
          }
    break;

  case 1387:

/* Line 1455 of yacc.c  */
#line 10533 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1388:

/* Line 1455 of yacc.c  */
#line 10539 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1389:

/* Line 1455 of yacc.c  */
#line 10545 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1390:

/* Line 1455 of yacc.c  */
#line 10551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1391:

/* Line 1455 of yacc.c  */
#line 10557 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1392:

/* Line 1455 of yacc.c  */
#line 10563 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1393:

/* Line 1455 of yacc.c  */
#line 10572 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1394:

/* Line 1455 of yacc.c  */
#line 10578 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1395:

/* Line 1455 of yacc.c  */
#line 10580 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 1396:

/* Line 1455 of yacc.c  */
#line 10582 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[(5) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1397:

/* Line 1455 of yacc.c  */
#line 10588 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1398:

/* Line 1455 of yacc.c  */
#line 10599 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1399:

/* Line 1455 of yacc.c  */
#line 10605 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1400:

/* Line 1455 of yacc.c  */
#line 10611 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1401:

/* Line 1455 of yacc.c  */
#line 10617 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1402:

/* Line 1455 of yacc.c  */
#line 10623 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1403:

/* Line 1455 of yacc.c  */
#line 10629 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1404:

/* Line 1455 of yacc.c  */
#line 10635 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1405:

/* Line 1455 of yacc.c  */
#line 10641 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1406:

/* Line 1455 of yacc.c  */
#line 10647 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1407:

/* Line 1455 of yacc.c  */
#line 10653 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1408:

/* Line 1455 of yacc.c  */
#line 10657 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].item_list),
                                         sel->gorder_list, (yyvsp[(7) - (8)].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[(5) - (8)].item_list)->empty();
            sel->gorder_list.empty();
          }
    break;

  case 1409:

/* Line 1455 of yacc.c  */
#line 10672 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1410:

/* Line 1455 of yacc.c  */
#line 10680 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1411:

/* Line 1455 of yacc.c  */
#line 10687 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            (yyval.item)= item=
              new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item), false);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->set_uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
    break;

  case 1412:

/* Line 1455 of yacc.c  */
#line 10698 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(1) - (1)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->set_uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 1413:

/* Line 1455 of yacc.c  */
#line 10706 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[(3) - (4)].lex_str).str && (yyvsp[(4) - (4)].lex_str).str && check_reserved_words(&(yyvsp[(3) - (4)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yyvsp[(4) - (4)].lex_str))))
              MYSQL_YYABORT;
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (4)].lex_str).str, "warning_count") ||
                !my_strcasecmp(system_charset_info, (yyvsp[(3) - (4)].lex_str).str, "error_count"))
            {
              /*
                "Diagnostics variable" used in a non-diagnostics statement.
                Save the information we need for the former, but clear the
                rest of the diagnostics area on account of the latter.
                See reset_condition_info().
              */
              Lex->keep_diagnostics= DA_KEEP_COUNTS;
            }
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
    break;

  case 1414:

/* Line 1455 of yacc.c  */
#line 10732 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1415:

/* Line 1455 of yacc.c  */
#line 10733 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1416:

/* Line 1455 of yacc.c  */
#line 10738 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1417:

/* Line 1455 of yacc.c  */
#line 10743 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1419:

/* Line 1455 of yacc.c  */
#line 10749 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1421:

/* Line 1455 of yacc.c  */
#line 10766 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { if (add_gorder_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1422:

/* Line 1455 of yacc.c  */
#line 10768 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { if (add_gorder_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1423:

/* Line 1455 of yacc.c  */
#line 10773 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->current_select()->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1424:

/* Line 1455 of yacc.c  */
#line 10782 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1425:

/* Line 1455 of yacc.c  */
#line 10790 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 1426:

/* Line 1455 of yacc.c  */
#line 10792 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 1427:

/* Line 1455 of yacc.c  */
#line 10794 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 1428:

/* Line 1455 of yacc.c  */
#line 10796 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1429:

/* Line 1455 of yacc.c  */
#line 10798 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1430:

/* Line 1455 of yacc.c  */
#line 10800 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1431:

/* Line 1455 of yacc.c  */
#line 10802 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1432:

/* Line 1455 of yacc.c  */
#line 10804 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec= Lex->length= (char *) 0; }
    break;

  case 1433:

/* Line 1455 of yacc.c  */
#line 10806 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_TIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1434:

/* Line 1455 of yacc.c  */
#line 10808 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1435:

/* Line 1455 of yacc.c  */
#line 10810 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1436:

/* Line 1455 of yacc.c  */
#line 10814 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1437:

/* Line 1455 of yacc.c  */
#line 10815 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list);}
    break;

  case 1438:

/* Line 1455 of yacc.c  */
#line 10820 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1439:

/* Line 1455 of yacc.c  */
#line 10827 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1440:

/* Line 1455 of yacc.c  */
#line 10834 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1441:

/* Line 1455 of yacc.c  */
#line 10835 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(2) - (3)].item_list); }
    break;

  case 1442:

/* Line 1455 of yacc.c  */
#line 10840 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1443:

/* Line 1455 of yacc.c  */
#line 10847 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1444:

/* Line 1455 of yacc.c  */
#line 10854 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1445:

/* Line 1455 of yacc.c  */
#line 10855 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1446:

/* Line 1455 of yacc.c  */
#line 10859 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1447:

/* Line 1455 of yacc.c  */
#line 10860 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1448:

/* Line 1455 of yacc.c  */
#line 10865 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1449:

/* Line 1455 of yacc.c  */
#line 10873 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1450:

/* Line 1455 of yacc.c  */
#line 10883 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1451:

/* Line 1455 of yacc.c  */
#line 10885 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select()->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
    break;

  case 1452:

/* Line 1455 of yacc.c  */
#line 10893 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[(1) - (1)].table_list)); }
    break;

  case 1453:

/* Line 1455 of yacc.c  */
#line 10904 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1454:

/* Line 1455 of yacc.c  */
#line 10905 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(3) - (4)].table_list); }
    break;

  case 1455:

/* Line 1455 of yacc.c  */
#line 10911 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1456:

/* Line 1455 of yacc.c  */
#line 10913 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list)));
          }
    break;

  case 1457:

/* Line 1455 of yacc.c  */
#line 10933 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); }
    break;

  case 1458:

/* Line 1455 of yacc.c  */
#line 10935 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); (yyvsp[(3) - (3)].table_list)->straight=1; }
    break;

  case 1459:

/* Line 1455 of yacc.c  */
#line 10938 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= CTX_ON;
          }
    break;

  case 1460:

/* Line 1455 of yacc.c  */
#line 10946 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_ON);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1461:

/* Line 1455 of yacc.c  */
#line 10955 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= CTX_ON;
          }
    break;

  case 1462:

/* Line 1455 of yacc.c  */
#line 10963 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(3) - (6)].table_list)->straight=1;
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_ON);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1463:

/* Line 1455 of yacc.c  */
#line 10973 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
          }
    break;

  case 1464:

/* Line 1455 of yacc.c  */
#line 10977 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { add_join_natural((yyvsp[(1) - (8)].table_list),(yyvsp[(3) - (8)].table_list),(yyvsp[(7) - (8)].string_list),Select); (yyval.table_list)=(yyvsp[(3) - (8)].table_list); }
    break;

  case 1465:

/* Line 1455 of yacc.c  */
#line 10979 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && ((yyval.table_list)=(yyvsp[(4) - (4)].table_list)));
            add_join_natural((yyvsp[(1) - (4)].table_list),(yyvsp[(4) - (4)].table_list),NULL,Select);
          }
    break;

  case 1466:

/* Line 1455 of yacc.c  */
#line 10987 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= CTX_ON;
          }
    break;

  case 1467:

/* Line 1455 of yacc.c  */
#line 10995 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(5) - (8)].table_list),(yyvsp[(8) - (8)].item));
            Lex->pop_context();
            (yyvsp[(5) - (8)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(5) - (8)].table_list);
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_ON);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1468:

/* Line 1455 of yacc.c  */
#line 11005 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1469:

/* Line 1455 of yacc.c  */
#line 11009 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            add_join_natural((yyvsp[(1) - (10)].table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select); 
            (yyvsp[(5) - (10)].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[(5) - (10)].table_list); 
          }
    break;

  case 1470:

/* Line 1455 of yacc.c  */
#line 11015 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(1) - (6)].table_list),(yyvsp[(6) - (6)].table_list),NULL,Select);
            (yyvsp[(6) - (6)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(6) - (6)].table_list);
          }
    break;

  case 1471:

/* Line 1455 of yacc.c  */
#line 11025 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= CTX_ON;
          }
    break;

  case 1472:

/* Line 1455 of yacc.c  */
#line 11033 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select()->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[(8) - (8)].item));
            Lex->pop_context();
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_ON);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1473:

/* Line 1455 of yacc.c  */
#line 11044 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1474:

/* Line 1455 of yacc.c  */
#line 11048 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select()->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select);
          }
    break;

  case 1475:

/* Line 1455 of yacc.c  */
#line 11055 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(6) - (6)].table_list),(yyvsp[(1) - (6)].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select()->convert_right_join()))
              MYSQL_YYABORT;
          }
    break;

  case 1476:

/* Line 1455 of yacc.c  */
#line 11065 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1477:

/* Line 1455 of yacc.c  */
#line 11066 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1478:

/* Line 1455 of yacc.c  */
#line 11067 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1479:

/* Line 1455 of yacc.c  */
#line 11075 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= 0;}
    break;

  case 1481:

/* Line 1455 of yacc.c  */
#line 11081 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (5)].string_list);
          }
    break;

  case 1482:

/* Line 1455 of yacc.c  */
#line 11095 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
    break;

  case 1483:

/* Line 1455 of yacc.c  */
#line 11100 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[(2) - (5)].table), (yyvsp[(4) - (5)].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[(3) - (5)].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
    break;

  case 1484:

/* Line 1455 of yacc.c  */
#line 11111 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= Select;
            if ((yyvsp[(1) - (3)].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            if ((yyvsp[(2) - (3)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1485:

/* Line 1455 of yacc.c  */
#line 11147 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[(3) - (5)].table_list) || (yyvsp[(5) - (5)].lex_str_ptr)) && (yyvsp[(2) - (5)].select_lex)->embedding &&
                !(yyvsp[(2) - (5)].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[(3) - (5)].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= Select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->set_current_select(sel= unit->outer_select());
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               ti, (yyvsp[(5) - (5)].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
            }
            else if ((yyvsp[(5) - (5)].lex_str_ptr) != NULL)
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...) */
              (yyval.table_list)= (yyvsp[(3) - (5)].table_list);
            }
          }
    break;

  case 1486:

/* Line 1455 of yacc.c  */
#line 11218 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].table_list) && (yyvsp[(2) - (2)].is_not_empty))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1487:

/* Line 1455 of yacc.c  */
#line 11228 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->new_union_query((bool)(yyvsp[(3) - (3)].num)))
              MYSQL_YYABORT;
          }
    break;

  case 1488:

/* Line 1455 of yacc.c  */
#line 11233 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();

            if ((yyvsp[(1) - (5)].table_list) != NULL)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1489:

/* Line 1455 of yacc.c  */
#line 11251 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            // Parentheses carry no meaning here.
            lex->current_select()->set_braces(false);
          }
    break;

  case 1490:

/* Line 1455 of yacc.c  */
#line 11260 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
          }
    break;

  case 1491:

/* Line 1455 of yacc.c  */
#line 11265 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1492:

/* Line 1455 of yacc.c  */
#line 11275 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(1) - (1)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
    break;

  case 1493:

/* Line 1455 of yacc.c  */
#line 11281 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[(1) - (3)].select_lex)->end_nested_join(lex->thd)) && (yyvsp[(3) - (3)].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[(3) - (3)].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1494:

/* Line 1455 of yacc.c  */
#line 11297 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            SELECT_LEX *outer_select= Select;
            outer_select->parsing_place= CTX_DERIVED;
            if (lex->current_select()->linkage == GLOBAL_OPTIONS_TYPE ||
                lex->new_query())
              MYSQL_YYABORT;
            // Note that this current select is different from the one above
            lex->current_select()->linkage= DERIVED_TABLE_TYPE;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            outer_select->parsing_place= CTX_NONE;
          }
    break;

  case 1495:

/* Line 1455 of yacc.c  */
#line 11317 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1497:

/* Line 1455 of yacc.c  */
#line 11326 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1498:

/* Line 1455 of yacc.c  */
#line 11331 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= Select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1499:

/* Line 1455 of yacc.c  */
#line 11356 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1500:

/* Line 1455 of yacc.c  */
#line 11357 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1501:

/* Line 1455 of yacc.c  */
#line 11362 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
    break;

  case 1502:

/* Line 1455 of yacc.c  */
#line 11365 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1503:

/* Line 1455 of yacc.c  */
#line 11366 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1504:

/* Line 1455 of yacc.c  */
#line 11367 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1505:

/* Line 1455 of yacc.c  */
#line 11371 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1506:

/* Line 1455 of yacc.c  */
#line 11372 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1507:

/* Line 1455 of yacc.c  */
#line 11377 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type((yyvsp[(1) - (3)].index_hint), (yyvsp[(3) - (3)].num));
          }
    break;

  case 1509:

/* Line 1455 of yacc.c  */
#line 11382 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[(3) - (3)].num));
          }
    break;

  case 1514:

/* Line 1455 of yacc.c  */
#line 11395 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->alloc_index_hints(YYTHD); }
    break;

  case 1516:

/* Line 1455 of yacc.c  */
#line 11399 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {  Select->clear_index_hints(); }
    break;

  case 1518:

/* Line 1455 of yacc.c  */
#line 11404 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, NULL, 0); }
    break;

  case 1519:

/* Line 1455 of yacc.c  */
#line 11405 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1520:

/* Line 1455 of yacc.c  */
#line 11410 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length); }
    break;

  case 1521:

/* Line 1455 of yacc.c  */
#line 11412 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
    break;

  case 1524:

/* Line 1455 of yacc.c  */
#line 11422 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1525:

/* Line 1455 of yacc.c  */
#line 11433 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1526:

/* Line 1455 of yacc.c  */
#line 11445 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1527:

/* Line 1455 of yacc.c  */
#line 11446 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1528:

/* Line 1455 of yacc.c  */
#line 11447 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1529:

/* Line 1455 of yacc.c  */
#line 11448 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1530:

/* Line 1455 of yacc.c  */
#line 11449 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1531:

/* Line 1455 of yacc.c  */
#line 11450 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1532:

/* Line 1455 of yacc.c  */
#line 11451 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1533:

/* Line 1455 of yacc.c  */
#line 11452 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1534:

/* Line 1455 of yacc.c  */
#line 11453 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1535:

/* Line 1455 of yacc.c  */
#line 11454 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1536:

/* Line 1455 of yacc.c  */
#line 11455 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1537:

/* Line 1455 of yacc.c  */
#line 11456 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1538:

/* Line 1455 of yacc.c  */
#line 11460 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1539:

/* Line 1455 of yacc.c  */
#line 11461 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1540:

/* Line 1455 of yacc.c  */
#line 11462 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1541:

/* Line 1455 of yacc.c  */
#line 11463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1542:

/* Line 1455 of yacc.c  */
#line 11464 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1543:

/* Line 1455 of yacc.c  */
#line 11465 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1544:

/* Line 1455 of yacc.c  */
#line 11466 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1545:

/* Line 1455 of yacc.c  */
#line 11467 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1546:

/* Line 1455 of yacc.c  */
#line 11468 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1547:

/* Line 1455 of yacc.c  */
#line 11472 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1548:

/* Line 1455 of yacc.c  */
#line 11473 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1549:

/* Line 1455 of yacc.c  */
#line 11474 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1550:

/* Line 1455 of yacc.c  */
#line 11475 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1554:

/* Line 1455 of yacc.c  */
#line 11485 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1555:

/* Line 1455 of yacc.c  */
#line 11487 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1558:

/* Line 1455 of yacc.c  */
#line 11500 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->set_where_cond(NULL); }
    break;

  case 1559:

/* Line 1455 of yacc.c  */
#line 11502 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= CTX_WHERE;
          }
    break;

  case 1560:

/* Line 1455 of yacc.c  */
#line 11506 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->set_where_cond((yyvsp[(3) - (3)].item));
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_WHERE);
            select->parsing_place= CTX_NONE;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1562:

/* Line 1455 of yacc.c  */
#line 11520 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= CTX_HAVING;
          }
    break;

  case 1563:

/* Line 1455 of yacc.c  */
#line 11524 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->set_having_cond((yyvsp[(3) - (3)].item));
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_HAVING);
            sel->parsing_place= CTX_NONE;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1564:

/* Line 1455 of yacc.c  */
#line 11537 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1565:

/* Line 1455 of yacc.c  */
#line 11542 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1567:

/* Line 1455 of yacc.c  */
#line 11560 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= CTX_GROUP_BY;
          }
    break;

  case 1568:

/* Line 1455 of yacc.c  */
#line 11564 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_GROUP_BY);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1570:

/* Line 1455 of yacc.c  */
#line 11574 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1571:

/* Line 1455 of yacc.c  */
#line 11576 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1572:

/* Line 1455 of yacc.c  */
#line 11580 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1573:

/* Line 1455 of yacc.c  */
#line 11582 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select()->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select()->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
    break;

  case 1574:

/* Line 1455 of yacc.c  */
#line 11602 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select()->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            if (lex->current_select()->options & SELECT_DISTINCT)
            {
              // DISTINCT+ROLLUP does not work
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP", "DISTINCT");
              MYSQL_YYABORT;
            }
            lex->current_select()->olap= ROLLUP_TYPE;
          }
    break;

  case 1578:

/* Line 1455 of yacc.c  */
#line 11642 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[(2) - (2)].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[(1) - (2)].item), ascending))
              MYSQL_YYABORT;
          }
    break;

  case 1581:

/* Line 1455 of yacc.c  */
#line 11661 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= Select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
            if (Select->parsing_place == CTX_NONE)
            {
              if (sel->master_unit()->is_union() && !sel->braces)
              {
                /*
                  At this point we don't know yet whether this is the last
                  select in union or not, but we move ORDER BY to
                  fake_select_lex anyway. If there would be one more select
                  in union mysql_new_select will correctly throw error.
                */
                lex->set_current_select(sel->master_unit()->fake_select_lex);
                lex->push_context(&lex->current_select()->context);
              }
              /*
                To preserve correct markup for the case 
                 SELECT group_concat(... ORDER BY (subquery))
                we do not change parsing_place if it's not NONE.
              */
              Select->parsing_place= CTX_ORDER_BY;
            }
          }
    break;

  case 1582:

/* Line 1455 of yacc.c  */
#line 11712 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Reset parsing place only for ORDER BY
            if (Select->parsing_place == CTX_ORDER_BY)
              Select->parsing_place= CTX_NONE;
          }
    break;

  case 1583:

/* Line 1455 of yacc.c  */
#line 11721 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1584:

/* Line 1455 of yacc.c  */
#line 11723 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1585:

/* Line 1455 of yacc.c  */
#line 11727 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1586:

/* Line 1455 of yacc.c  */
#line 11728 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1587:

/* Line 1455 of yacc.c  */
#line 11729 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1588:

/* Line 1455 of yacc.c  */
#line 11733 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1589:

/* Line 1455 of yacc.c  */
#line 11734 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1590:

/* Line 1455 of yacc.c  */
#line 11739 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            if (sel->master_unit()->is_union() && !sel->braces)
            {
              /* Move LIMIT that belongs to UNION to fake_select_lex */
              Lex->set_current_select(sel->master_unit()->fake_select_lex);
              DBUG_ASSERT(Select);
            }
          }
    break;

  case 1591:

/* Line 1455 of yacc.c  */
#line 11749 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
    break;

  case 1592:

/* Line 1455 of yacc.c  */
#line 11756 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (1)].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
    break;

  case 1593:

/* Line 1455 of yacc.c  */
#line 11763 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(3) - (3)].item);
            sel->offset_limit= (yyvsp[(1) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1594:

/* Line 1455 of yacc.c  */
#line 11770 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (3)].item);
            sel->offset_limit= (yyvsp[(3) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1595:

/* Line 1455 of yacc.c  */
#line 11780 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          THD *thd= YYTHD;
          LEX *lex= Lex;
          sp_head *sp= lex->sphead;
          const char *query_start_ptr=
            sp ? sp->m_parser_data.get_current_stmt_start_ptr() : NULL;

          Item_splocal *v= create_item_for_sp_var(thd, (yyvsp[(1) - (1)].lex_str), NULL,
                                                  query_start_ptr,
                                                  (yylsp[(1) - (1)]).raw_start,
                                                  (yylsp[(1) - (1)]).raw_end);
          if (!v)
            MYSQL_YYABORT;

          lex->safe_to_cache_query= false;

          if (v->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }

          v->limit_clause_param= true;
          (yyval.item)= v;
        }
    break;

  case 1596:

/* Line 1455 of yacc.c  */
#line 11806 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          ((Item_param *) (yyvsp[(1) - (1)].item))->limit_clause_param= TRUE;
        }
    break;

  case 1597:

/* Line 1455 of yacc.c  */
#line 11810 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1598:

/* Line 1455 of yacc.c  */
#line 11816 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1599:

/* Line 1455 of yacc.c  */
#line 11822 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1600:

/* Line 1455 of yacc.c  */
#line 11831 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select()->select_limit= 0;
          }
    break;

  case 1601:

/* Line 1455 of yacc.c  */
#line 11836 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(2) - (2)].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
    break;

  case 1602:

/* Line 1455 of yacc.c  */
#line 11845 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1603:

/* Line 1455 of yacc.c  */
#line 11846 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1604:

/* Line 1455 of yacc.c  */
#line 11847 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1605:

/* Line 1455 of yacc.c  */
#line 11848 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1606:

/* Line 1455 of yacc.c  */
#line 11849 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1607:

/* Line 1455 of yacc.c  */
#line 11850 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1608:

/* Line 1455 of yacc.c  */
#line 11854 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1609:

/* Line 1455 of yacc.c  */
#line 11855 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtoll((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1610:

/* Line 1455 of yacc.c  */
#line 11856 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1611:

/* Line 1455 of yacc.c  */
#line 11857 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1612:

/* Line 1455 of yacc.c  */
#line 11858 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1613:

/* Line 1455 of yacc.c  */
#line 11862 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1614:

/* Line 1455 of yacc.c  */
#line 11863 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1615:

/* Line 1455 of yacc.c  */
#line 11864 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1616:

/* Line 1455 of yacc.c  */
#line 11865 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1617:

/* Line 1455 of yacc.c  */
#line 11866 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1618:

/* Line 1455 of yacc.c  */
#line 11870 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1619:

/* Line 1455 of yacc.c  */
#line 11871 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1620:

/* Line 1455 of yacc.c  */
#line 11872 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1621:

/* Line 1455 of yacc.c  */
#line 11873 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1622:

/* Line 1455 of yacc.c  */
#line 11878 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1625:

/* Line 1455 of yacc.c  */
#line 11887 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1626:

/* Line 1455 of yacc.c  */
#line 11889 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            
            if (!lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (lex->select_lex != lex->current_select())
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }

            if ((lex->proc_analyse= new Proc_analyse_params) == NULL)
            {
              my_error(ER_OUTOFMEMORY, MYF(ME_FATALERROR),
                       sizeof(Proc_analyse_params));
              MYSQL_YYABORT;
            }
            
            lex->set_uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1627:

/* Line 1455 of yacc.c  */
#line 11914 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.is_not_empty)= true;
          }
    break;

  case 1628:

/* Line 1455 of yacc.c  */
#line 11920 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1629:

/* Line 1455 of yacc.c  */
#line 11922 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[(1) - (1)].ulonglong_number);
          }
    break;

  case 1630:

/* Line 1455 of yacc.c  */
#line 11926 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[(1) - (3)].ulonglong_number);
            Lex->proc_analyse->max_treemem= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 1631:

/* Line 1455 of yacc.c  */
#line 11934 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1632:

/* Line 1455 of yacc.c  */
#line 11946 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
    break;

  case 1633:

/* Line 1455 of yacc.c  */
#line 11952 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1635:

/* Line 1455 of yacc.c  */
#line 11957 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1636:

/* Line 1455 of yacc.c  */
#line 11962 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[(2) - (2)].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1637:

/* Line 1455 of yacc.c  */
#line 11981 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
#ifndef DBUG_OFF
            sp_head *sp= lex->sphead;
#endif
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[(1) - (1)].lex_str), 1, spv->offset, spv->type);

              if (var == NULL)
                MYSQL_YYABORT;

              ((select_dumpvar *) lex->result)->var_list.push_back(var);

#ifndef DBUG_OFF
              var->sp= sp;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1638:

/* Line 1455 of yacc.c  */
#line 12019 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 1639:

/* Line 1455 of yacc.c  */
#line 12020 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 1640:

/* Line 1455 of yacc.c  */
#line 12025 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1642:

/* Line 1455 of yacc.c  */
#line 12037 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->set_uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
    break;

  case 1643:

/* Line 1455 of yacc.c  */
#line 12045 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(4) - (4)].charset); }
    break;

  case 1645:

/* Line 1455 of yacc.c  */
#line 12048 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->set_uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1646:

/* Line 1455 of yacc.c  */
#line 12060 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->set_uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1647:

/* Line 1455 of yacc.c  */
#line 12071 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
          }
    break;

  case 1648:

/* Line 1455 of yacc.c  */
#line 12076 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->insert_list= (yyvsp[(3) - (3)].item_list);
          }
    break;

  case 1649:

/* Line 1455 of yacc.c  */
#line 12087 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1650:

/* Line 1455 of yacc.c  */
#line 12096 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1651:

/* Line 1455 of yacc.c  */
#line 12097 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1652:

/* Line 1455 of yacc.c  */
#line 12098 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1653:

/* Line 1455 of yacc.c  */
#line 12113 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1654:

/* Line 1455 of yacc.c  */
#line 12115 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1655:

/* Line 1455 of yacc.c  */
#line 12122 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name((yyvsp[(4) - (6)].lex_str), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1656:

/* Line 1455 of yacc.c  */
#line 12143 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(db, (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1657:

/* Line 1455 of yacc.c  */
#line 12164 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1658:

/* Line 1455 of yacc.c  */
#line 12176 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1659:

/* Line 1455 of yacc.c  */
#line 12180 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1660:

/* Line 1455 of yacc.c  */
#line 12188 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1661:

/* Line 1455 of yacc.c  */
#line 12190 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1662:

/* Line 1455 of yacc.c  */
#line 12196 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1663:

/* Line 1455 of yacc.c  */
#line 12203 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1664:

/* Line 1455 of yacc.c  */
#line 12208 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1665:

/* Line 1455 of yacc.c  */
#line 12213 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_drop_server((yyvsp[(4) - (4)].lex_str), (yyvsp[(3) - (4)].num));
          }
    break;

  case 1668:

/* Line 1455 of yacc.c  */
#line 12227 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1669:

/* Line 1455 of yacc.c  */
#line 12238 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(2) - (2)].string_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1672:

/* Line 1455 of yacc.c  */
#line 12256 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1673:

/* Line 1455 of yacc.c  */
#line 12266 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1674:

/* Line 1455 of yacc.c  */
#line 12267 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1675:

/* Line 1455 of yacc.c  */
#line 12271 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1676:

/* Line 1455 of yacc.c  */
#line 12272 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1684:

/* Line 1455 of yacc.c  */
#line 12295 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
          }
    break;

  case 1685:

/* Line 1455 of yacc.c  */
#line 12302 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (5)].lock_type));
            Lex->set_current_select(Lex->select_lex);
          }
    break;

  case 1686:

/* Line 1455 of yacc.c  */
#line 12307 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1687:

/* Line 1455 of yacc.c  */
#line 12312 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
          }
    break;

  case 1688:

/* Line 1455 of yacc.c  */
#line 12318 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (4)].lock_type));
            Lex->set_current_select(Lex->select_lex);
          }
    break;

  case 1689:

/* Line 1455 of yacc.c  */
#line 12323 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1690:

/* Line 1455 of yacc.c  */
#line 12327 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
    break;

  case 1691:

/* Line 1455 of yacc.c  */
#line 12328 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1692:

/* Line 1455 of yacc.c  */
#line 12330 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1693:

/* Line 1455 of yacc.c  */
#line 12338 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1694:

/* Line 1455 of yacc.c  */
#line 12342 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1695:

/* Line 1455 of yacc.c  */
#line 12344 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER(ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1696:

/* Line 1455 of yacc.c  */
#line 12355 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1697:

/* Line 1455 of yacc.c  */
#line 12356 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1698:

/* Line 1455 of yacc.c  */
#line 12361 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
    break;

  case 1699:

/* Line 1455 of yacc.c  */
#line 12369 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1700:

/* Line 1455 of yacc.c  */
#line 12370 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1701:

/* Line 1455 of yacc.c  */
#line 12371 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1702:

/* Line 1455 of yacc.c  */
#line 12373 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1704:

/* Line 1455 of yacc.c  */
#line 12383 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1705:

/* Line 1455 of yacc.c  */
#line 12384 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1706:

/* Line 1455 of yacc.c  */
#line 12388 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1707:

/* Line 1455 of yacc.c  */
#line 12389 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1708:

/* Line 1455 of yacc.c  */
#line 12391 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1709:

/* Line 1455 of yacc.c  */
#line 12392 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1710:

/* Line 1455 of yacc.c  */
#line 12394 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1711:

/* Line 1455 of yacc.c  */
#line 12395 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1716:

/* Line 1455 of yacc.c  */
#line 12410 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1717:

/* Line 1455 of yacc.c  */
#line 12419 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1718:

/* Line 1455 of yacc.c  */
#line 12420 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1719:

/* Line 1455 of yacc.c  */
#line 12424 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1720:

/* Line 1455 of yacc.c  */
#line 12425 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1721:

/* Line 1455 of yacc.c  */
#line 12430 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
    break;

  case 1722:

/* Line 1455 of yacc.c  */
#line 12435 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1723:

/* Line 1455 of yacc.c  */
#line 12443 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1725:

/* Line 1455 of yacc.c  */
#line 12449 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1726:

/* Line 1455 of yacc.c  */
#line 12454 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1727:

/* Line 1455 of yacc.c  */
#line 12461 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1728:

/* Line 1455 of yacc.c  */
#line 12463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1730:

/* Line 1455 of yacc.c  */
#line 12473 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->duplicates= DUP_UPDATE;
            TABLE_LIST *first_table= Lex->select_lex->table_list.first;
            /* Fix lock for ON DUPLICATE KEY UPDATE */
            if (first_table->lock_type == TL_WRITE_CONCURRENT_DEFAULT)
              first_table->lock_type= TL_WRITE_DEFAULT;
          }
    break;

  case 1731:

/* Line 1455 of yacc.c  */
#line 12481 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= CTX_UPDATE_VALUE_LIST;
          }
    break;

  case 1732:

/* Line 1455 of yacc.c  */
#line 12485 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_UPDATE_VALUE_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1733:

/* Line 1455 of yacc.c  */
#line 12496 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
    break;

  case 1734:

/* Line 1455 of yacc.c  */
#line 12503 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= CTX_UPDATE_VALUE_LIST;
          }
    break;

  case 1735:

/* Line 1455 of yacc.c  */
#line 12507 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_UPDATE_VALUE_LIST);
            Select->parsing_place= CTX_NONE;
            if (lex->select_lex->table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex->get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[(3) - (8)].lock_type));
          }
    break;

  case 1736:

/* Line 1455 of yacc.c  */
#line 12528 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1739:

/* Line 1455 of yacc.c  */
#line 12538 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (add_item_to_list(YYTHD, (yyvsp[(1) - (3)].item)) || add_value_to_list(YYTHD, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1742:

/* Line 1455 of yacc.c  */
#line 12551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[(1) - (3)].item)) || 
              lex->value_list.push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1743:

/* Line 1455 of yacc.c  */
#line 12560 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1744:

/* Line 1455 of yacc.c  */
#line 12561 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1745:

/* Line 1455 of yacc.c  */
#line 12568 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex->init_order();
          }
    break;

  case 1747:

/* Line 1455 of yacc.c  */
#line 12582 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(2) - (3)].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(3) - (3)].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1748:

/* Line 1455 of yacc.c  */
#line 12593 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1749:

/* Line 1455 of yacc.c  */
#line 12595 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1750:

/* Line 1455 of yacc.c  */
#line 12601 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1751:

/* Line 1455 of yacc.c  */
#line 12606 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1752:

/* Line 1455 of yacc.c  */
#line 12612 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1755:

/* Line 1455 of yacc.c  */
#line 12625 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1756:

/* Line 1455 of yacc.c  */
#line 12638 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1757:

/* Line 1455 of yacc.c  */
#line 12653 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1758:

/* Line 1455 of yacc.c  */
#line 12654 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1759:

/* Line 1455 of yacc.c  */
#line 12658 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1760:

/* Line 1455 of yacc.c  */
#line 12659 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1761:

/* Line 1455 of yacc.c  */
#line 12663 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1762:

/* Line 1455 of yacc.c  */
#line 12664 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1763:

/* Line 1455 of yacc.c  */
#line 12665 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1764:

/* Line 1455 of yacc.c  */
#line 12670 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1765:

/* Line 1455 of yacc.c  */
#line 12678 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1772:

/* Line 1455 of yacc.c  */
#line 12703 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1773:

/* Line 1455 of yacc.c  */
#line 12707 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1774:

/* Line 1455 of yacc.c  */
#line 12711 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1775:

/* Line 1455 of yacc.c  */
#line 12715 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1776:

/* Line 1455 of yacc.c  */
#line 12719 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1777:

/* Line 1455 of yacc.c  */
#line 12723 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1778:

/* Line 1455 of yacc.c  */
#line 12727 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1779:

/* Line 1455 of yacc.c  */
#line 12731 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1780:

/* Line 1455 of yacc.c  */
#line 12735 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1781:

/* Line 1455 of yacc.c  */
#line 12742 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      Lex->query_id= 0;
    }
    break;

  case 1782:

/* Line 1455 of yacc.c  */
#line 12746 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
      int error;
      Lex->query_id= my_strtoll10((yyvsp[(3) - (3)].lex_str).str, NULL, &error);
      if (error != 0)
        MYSQL_YYABORT;
    }
    break;

  case 1783:

/* Line 1455 of yacc.c  */
#line 12758 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1785:

/* Line 1455 of yacc.c  */
#line 12767 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1786:

/* Line 1455 of yacc.c  */
#line 12774 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1787:

/* Line 1455 of yacc.c  */
#line 12782 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1788:

/* Line 1455 of yacc.c  */
#line 12790 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1789:

/* Line 1455 of yacc.c  */
#line 12798 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1790:

/* Line 1455 of yacc.c  */
#line 12806 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1791:

/* Line 1455 of yacc.c  */
#line 12814 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1792:

/* Line 1455 of yacc.c  */
#line 12821 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1793:

/* Line 1455 of yacc.c  */
#line 12823 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1794:

/* Line 1455 of yacc.c  */
#line 12825 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1795:

/* Line 1455 of yacc.c  */
#line 12834 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1796:

/* Line 1455 of yacc.c  */
#line 12838 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1797:

/* Line 1455 of yacc.c  */
#line 12842 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1799:

/* Line 1455 of yacc.c  */
#line 12848 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1801:

/* Line 1455 of yacc.c  */
#line 12854 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1802:

/* Line 1455 of yacc.c  */
#line 12863 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1803:

/* Line 1455 of yacc.c  */
#line 12870 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1804:

/* Line 1455 of yacc.c  */
#line 12875 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            (void) create_select_for_variable("warning_count");
          }
    break;

  case 1805:

/* Line 1455 of yacc.c  */
#line 12880 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            (void) create_select_for_variable("error_count");
          }
    break;

  case 1806:

/* Line 1455 of yacc.c  */
#line 12885 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
    break;

  case 1807:

/* Line 1455 of yacc.c  */
#line 12890 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
    break;

  case 1808:

/* Line 1455 of yacc.c  */
#line 12895 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1809:

/* Line 1455 of yacc.c  */
#line 12903 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1810:

/* Line 1455 of yacc.c  */
#line 12910 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
    break;

  case 1811:

/* Line 1455 of yacc.c  */
#line 12918 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1812:

/* Line 1455 of yacc.c  */
#line 12920 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1813:

/* Line 1455 of yacc.c  */
#line 12928 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1814:

/* Line 1455 of yacc.c  */
#line 12935 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1815:

/* Line 1455 of yacc.c  */
#line 12942 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1816:

/* Line 1455 of yacc.c  */
#line 12952 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->password=null_lex_str;
          }
    break;

  case 1817:

/* Line 1455 of yacc.c  */
#line 12959 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1818:

/* Line 1455 of yacc.c  */
#line 12965 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1819:

/* Line 1455 of yacc.c  */
#line 12974 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1820:

/* Line 1455 of yacc.c  */
#line 12982 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1821:

/* Line 1455 of yacc.c  */
#line 12986 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT_NONBLOCKING;
          }
    break;

  case 1822:

/* Line 1455 of yacc.c  */
#line 12990 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1823:

/* Line 1455 of yacc.c  */
#line 12994 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1824:

/* Line 1455 of yacc.c  */
#line 13001 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1825:

/* Line 1455 of yacc.c  */
#line 13008 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1826:

/* Line 1455 of yacc.c  */
#line 13014 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1827:

/* Line 1455 of yacc.c  */
#line 13021 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1828:

/* Line 1455 of yacc.c  */
#line 13028 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1829:

/* Line 1455 of yacc.c  */
#line 13033 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1830:

/* Line 1455 of yacc.c  */
#line 13038 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1831:

/* Line 1455 of yacc.c  */
#line 13046 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1832:

/* Line 1455 of yacc.c  */
#line 13048 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1833:

/* Line 1455 of yacc.c  */
#line 13050 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1838:

/* Line 1455 of yacc.c  */
#line 13064 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1839:

/* Line 1455 of yacc.c  */
#line 13065 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1840:

/* Line 1455 of yacc.c  */
#line 13069 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1841:

/* Line 1455 of yacc.c  */
#line 13070 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1844:

/* Line 1455 of yacc.c  */
#line 13079 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1845:

/* Line 1455 of yacc.c  */
#line 13080 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1846:

/* Line 1455 of yacc.c  */
#line 13084 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1847:

/* Line 1455 of yacc.c  */
#line 13085 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1849:

/* Line 1455 of yacc.c  */
#line 13091 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1850:

/* Line 1455 of yacc.c  */
#line 13098 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Select->set_where_cond((yyvsp[(2) - (2)].item));
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1851:

/* Line 1455 of yacc.c  */
#line 13108 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->parsing_place= CTX_SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex->db= NULL;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1852:

/* Line 1455 of yacc.c  */
#line 13118 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            // Ensure we're resetting parsing context of the right select
            DBUG_ASSERT(Select->parsing_place == CTX_SELECT_LIST);
            Select->parsing_place= CTX_NONE;
          }
    break;

  case 1853:

/* Line 1455 of yacc.c  */
#line 13124 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->describe|= DESCRIBE_NORMAL;
          }
    break;

  case 1860:

/* Line 1455 of yacc.c  */
#line 13137 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_EXPLAIN_OTHER;
            if (Lex->sphead)
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "non-standalone EXPLAIN FOR CONNECTION");
              MYSQL_YYABORT;
            }
            Lex->query_id= (my_thread_id)((yyvsp[(3) - (3)].ulong_num));
          }
    break;

  case 1863:

/* Line 1455 of yacc.c  */
#line 13156 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1864:

/* Line 1455 of yacc.c  */
#line 13161 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "EXTENDED");
          }
    break;

  case 1865:

/* Line 1455 of yacc.c  */
#line 13167 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            push_deprecated_warn_no_replacement(YYTHD, "PARTITIONS");
          }
    break;

  case 1866:

/* Line 1455 of yacc.c  */
#line 13173 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1867:

/* Line 1455 of yacc.c  */
#line 13193 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1868:

/* Line 1455 of yacc.c  */
#line 13194 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1869:

/* Line 1455 of yacc.c  */
#line 13196 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1870:

/* Line 1455 of yacc.c  */
#line 13210 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1871:

/* Line 1455 of yacc.c  */
#line 13217 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1872:

/* Line 1455 of yacc.c  */
#line 13222 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1873:

/* Line 1455 of yacc.c  */
#line 13231 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1874:

/* Line 1455 of yacc.c  */
#line 13232 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1876:

/* Line 1455 of yacc.c  */
#line 13237 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1877:

/* Line 1455 of yacc.c  */
#line 13239 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1878:

/* Line 1455 of yacc.c  */
#line 13250 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_parse_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            } 
          }
    break;

  case 1879:

/* Line 1455 of yacc.c  */
#line 13258 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1881:

/* Line 1455 of yacc.c  */
#line 13273 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1882:

/* Line 1455 of yacc.c  */
#line 13278 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1883:

/* Line 1455 of yacc.c  */
#line 13280 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1884:

/* Line 1455 of yacc.c  */
#line 13282 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1885:

/* Line 1455 of yacc.c  */
#line 13284 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1886:

/* Line 1455 of yacc.c  */
#line 13286 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1887:

/* Line 1455 of yacc.c  */
#line 13288 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1888:

/* Line 1455 of yacc.c  */
#line 13290 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1889:

/* Line 1455 of yacc.c  */
#line 13292 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1890:

/* Line 1455 of yacc.c  */
#line 13294 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1891:

/* Line 1455 of yacc.c  */
#line 13296 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1892:

/* Line 1455 of yacc.c  */
#line 13298 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1893:

/* Line 1455 of yacc.c  */
#line 13300 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1894:

/* Line 1455 of yacc.c  */
#line 13302 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1895:

/* Line 1455 of yacc.c  */
#line 13306 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1896:

/* Line 1455 of yacc.c  */
#line 13307 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1897:

/* Line 1455 of yacc.c  */
#line 13312 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1898:

/* Line 1455 of yacc.c  */
#line 13317 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1901:

/* Line 1455 of yacc.c  */
#line 13326 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1902:

/* Line 1455 of yacc.c  */
#line 13327 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1903:

/* Line 1455 of yacc.c  */
#line 13328 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1904:

/* Line 1455 of yacc.c  */
#line 13329 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1905:

/* Line 1455 of yacc.c  */
#line 13333 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1906:

/* Line 1455 of yacc.c  */
#line 13334 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1907:

/* Line 1455 of yacc.c  */
#line 13339 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1908:

/* Line 1455 of yacc.c  */
#line 13345 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1910:

/* Line 1455 of yacc.c  */
#line 13354 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1911:

/* Line 1455 of yacc.c  */
#line 13358 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1912:

/* Line 1455 of yacc.c  */
#line 13370 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1913:

/* Line 1455 of yacc.c  */
#line 13379 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1914:

/* Line 1455 of yacc.c  */
#line 13380 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1915:

/* Line 1455 of yacc.c  */
#line 13381 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1916:

/* Line 1455 of yacc.c  */
#line 13388 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1917:

/* Line 1455 of yacc.c  */
#line 13399 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1918:

/* Line 1455 of yacc.c  */
#line 13411 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1919:

/* Line 1455 of yacc.c  */
#line 13421 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Fix lock for LOAD DATA CONCURRENT REPLACE */
            if (lex->duplicates == DUP_REPLACE && (yyvsp[(4) - (13)].lock_type) == TL_WRITE_CONCURRENT_INSERT)
              (yyvsp[(4) - (13)].lock_type)= TL_WRITE_DEFAULT;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
    break;

  case 1920:

/* Line 1455 of yacc.c  */
#line 13434 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1921:

/* Line 1455 of yacc.c  */
#line 13438 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1922:

/* Line 1455 of yacc.c  */
#line 13442 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1923:

/* Line 1455 of yacc.c  */
#line 13443 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1924:

/* Line 1455 of yacc.c  */
#line 13447 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1925:

/* Line 1455 of yacc.c  */
#line 13448 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1926:

/* Line 1455 of yacc.c  */
#line 13452 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1927:

/* Line 1455 of yacc.c  */
#line 13453 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
    break;

  case 1928:

/* Line 1455 of yacc.c  */
#line 13454 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1929:

/* Line 1455 of yacc.c  */
#line 13458 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1930:

/* Line 1455 of yacc.c  */
#line 13459 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1931:

/* Line 1455 of yacc.c  */
#line 13460 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1936:

/* Line 1455 of yacc.c  */
#line 13475 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1937:

/* Line 1455 of yacc.c  */
#line 13480 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[(4) - (4)].string);
            lex->exchange->opt_enclosed= 1;
          }
    break;

  case 1938:

/* Line 1455 of yacc.c  */
#line 13487 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1939:

/* Line 1455 of yacc.c  */
#line 13492 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1944:

/* Line 1455 of yacc.c  */
#line 13510 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1945:

/* Line 1455 of yacc.c  */
#line 13515 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1946:

/* Line 1455 of yacc.c  */
#line 13522 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1947:

/* Line 1455 of yacc.c  */
#line 13524 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1949:

/* Line 1455 of yacc.c  */
#line 13529 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1950:

/* Line 1455 of yacc.c  */
#line 13536 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1951:

/* Line 1455 of yacc.c  */
#line 13538 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1952:

/* Line 1455 of yacc.c  */
#line 13542 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1953:

/* Line 1455 of yacc.c  */
#line 13543 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1954:

/* Line 1455 of yacc.c  */
#line 13544 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1955:

/* Line 1455 of yacc.c  */
#line 13549 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1956:

/* Line 1455 of yacc.c  */
#line 13551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1957:

/* Line 1455 of yacc.c  */
#line 13555 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {(yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1958:

/* Line 1455 of yacc.c  */
#line 13557 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1959:

/* Line 1455 of yacc.c  */
#line 13565 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1960:

/* Line 1455 of yacc.c  */
#line 13566 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1963:

/* Line 1455 of yacc.c  */
#line 13576 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint length= (uint) ((yylsp[(3) - (3)]).end - (yylsp[(2) - (3)]).start);
            String *val= new (YYTHD->mem_root) String((yylsp[(2) - (3)]).start,
                                                      length,
                                                      YYTHD->charset());
            if (val == NULL)
              MYSQL_YYABORT;
            if (lex->update_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->value_list.push_back((yyvsp[(3) - (3)].item)) ||
                lex->load_set_str_list.push_back(val))
                MYSQL_YYABORT;
            (yyvsp[(3) - (3)].item)->item_name.copy((yylsp[(2) - (3)]).start, length, YYTHD->charset());
          }
    break;

  case 1964:

/* Line 1455 of yacc.c  */
#line 13596 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            const CHARSET_INFO *cs_con= thd->variables.collation_connection;
            const CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1965:

/* Line 1455 of yacc.c  */
#line 13620 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1966:

/* Line 1455 of yacc.c  */
#line 13632 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length, (yyvsp[(1) - (2)].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
    break;

  case 1967:

/* Line 1455 of yacc.c  */
#line 13643 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item_string* item= (Item_string*) (yyvsp[(1) - (2)].item);
            item->append((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              const CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length);
            }
          }
    break;

  case 1968:

/* Line 1455 of yacc.c  */
#line 13662 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1969:

/* Line 1455 of yacc.c  */
#line 13670 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1970:

/* Line 1455 of yacc.c  */
#line 13682 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1971:

/* Line 1455 of yacc.c  */
#line 13697 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) ((yylsp[(1) - (1)]).raw_start -
                                                         thd->query().str));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1972:

/* Line 1455 of yacc.c  */
#line 13717 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1973:

/* Line 1455 of yacc.c  */
#line 13718 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item_num); }
    break;

  case 1974:

/* Line 1455 of yacc.c  */
#line 13720 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1975:

/* Line 1455 of yacc.c  */
#line 13728 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1976:

/* Line 1455 of yacc.c  */
#line 13729 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item_num); }
    break;

  case 1977:

/* Line 1455 of yacc.c  */
#line 13730 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1978:

/* Line 1455 of yacc.c  */
#line 13732 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= EXPLICIT_NULL_FLAG;
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1979:

/* Line 1455 of yacc.c  */
#line 13740 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("FALSE"), 0, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1980:

/* Line 1455 of yacc.c  */
#line 13746 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("TRUE"), 1, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1981:

/* Line 1455 of yacc.c  */
#line 13752 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1982:

/* Line 1455 of yacc.c  */
#line 13758 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1983:

/* Line 1455 of yacc.c  */
#line 13764 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1984:

/* Line 1455 of yacc.c  */
#line 13793 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1985:

/* Line 1455 of yacc.c  */
#line 13824 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str),
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1986:

/* Line 1455 of yacc.c  */
#line 13834 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str),
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1987:

/* Line 1455 of yacc.c  */
#line 13844 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1988:

/* Line 1455 of yacc.c  */
#line 13850 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1989:

/* Line 1455 of yacc.c  */
#line 13859 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1990:

/* Line 1455 of yacc.c  */
#line 13871 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1991:

/* Line 1455 of yacc.c  */
#line 13877 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1992:

/* Line 1455 of yacc.c  */
#line 13883 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1993:

/* Line 1455 of yacc.c  */
#line 13898 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1994:

/* Line 1455 of yacc.c  */
#line 13899 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1995:

/* Line 1455 of yacc.c  */
#line 13904 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1996:

/* Line 1455 of yacc.c  */
#line 13913 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[(1) - (5)].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1997:

/* Line 1455 of yacc.c  */
#line 13928 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1998:

/* Line 1455 of yacc.c  */
#line 13933 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx = lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (pctx && (spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              sp_head *sp= lex->sphead;

              DBUG_ASSERT(sp);

              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              (yyval.item)=
                create_item_for_sp_var(
                  thd, (yyvsp[(1) - (1)].lex_str), spv,
                  sp->m_parser_data.get_current_stmt_start_ptr(),
                  (yylsp[(1) - (1)]).raw_start,
                  (yylsp[(1) - (1)]).raw_end);

              if ((yyval.item) == NULL)
                MYSQL_YYABORT;

              lex->safe_to_cache_query= false;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != CTX_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1999:

/* Line 1455 of yacc.c  */
#line 13982 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 2000:

/* Line 1455 of yacc.c  */
#line 13987 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != CTX_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2001:

/* Line 1455 of yacc.c  */
#line 14004 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 2002:

/* Line 1455 of yacc.c  */
#line 14009 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[(1) - (3)].lex_str).str[0]=='N' || (yyvsp[(1) - (3)].lex_str).str[0]=='n');

              if (sp->m_trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
                           sp->m_trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ? TRG_NEW_ROW : TRG_OLD_ROW,
                                            (yyvsp[(3) - (3)].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->sphead->m_trg_table_fields.link_in_list(
                trg_fld, &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select();
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[(1) - (3)].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != CTX_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 2003:

/* Line 1455 of yacc.c  */
#line 14087 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
//            LEX *lex= thd->lex;
            SELECT_LEX *sel= Select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(2) - (4)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != CTX_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2004:

/* Line 1455 of yacc.c  */
#line 14112 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
//            LEX *lex= thd->lex;
            SELECT_LEX *sel= Select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[(1) - (5)].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(3) - (5)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != CTX_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2005:

/* Line 1455 of yacc.c  */
#line 14142 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2006:

/* Line 1455 of yacc.c  */
#line 14144 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2007:

/* Line 1455 of yacc.c  */
#line 14160 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2008:

/* Line 1455 of yacc.c  */
#line 14169 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 2009:

/* Line 1455 of yacc.c  */
#line 14174 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (1)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2010:

/* Line 1455 of yacc.c  */
#line 14180 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (3)].lex_str),(yyvsp[(3) - (3)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2011:

/* Line 1455 of yacc.c  */
#line 14186 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[(2) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2012:

/* Line 1455 of yacc.c  */
#line 14196 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2013:

/* Line 1455 of yacc.c  */
#line 14202 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str),(yyvsp[(3) - (4)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2014:

/* Line 1455 of yacc.c  */
#line 14211 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[(1) - (1)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2015:

/* Line 1455 of yacc.c  */
#line 14220 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 2016:

/* Line 1455 of yacc.c  */
#line 14222 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                   (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                   (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2017:

/* Line 1455 of yacc.c  */
#line 14252 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 2018:

/* Line 1455 of yacc.c  */
#line 14265 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2019:

/* Line 1455 of yacc.c  */
#line 14281 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
    break;

  case 2020:

/* Line 1455 of yacc.c  */
#line 14297 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2021:

/* Line 1455 of yacc.c  */
#line 14313 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2022:

/* Line 1455 of yacc.c  */
#line 14315 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2023:

/* Line 1455 of yacc.c  */
#line 14325 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 2024:

/* Line 1455 of yacc.c  */
#line 14327 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 2025:

/* Line 1455 of yacc.c  */
#line 14337 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2026:

/* Line 1455 of yacc.c  */
#line 14338 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2027:

/* Line 1455 of yacc.c  */
#line 14339 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 2028:

/* Line 1455 of yacc.c  */
#line 14344 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[(1) - (1)].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2029:

/* Line 1455 of yacc.c  */
#line 14371 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[(1) - (3)].lex_str);
            (yyval.lex_user)->host= (yyvsp[(3) - (3)].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);
            trim_whitespace(system_charset_info, &(yyval.lex_user)->host);
          }
    break;

  case 2030:

/* Line 1455 of yacc.c  */
#line 14404 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 2031:

/* Line 1455 of yacc.c  */
#line 14418 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2032:

/* Line 1455 of yacc.c  */
#line 14419 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2033:

/* Line 1455 of yacc.c  */
#line 14420 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2034:

/* Line 1455 of yacc.c  */
#line 14421 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:

/* Line 1455 of yacc.c  */
#line 14422 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:

/* Line 1455 of yacc.c  */
#line 14423 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:

/* Line 1455 of yacc.c  */
#line 14424 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:

/* Line 1455 of yacc.c  */
#line 14425 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:

/* Line 1455 of yacc.c  */
#line 14426 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:

/* Line 1455 of yacc.c  */
#line 14427 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:

/* Line 1455 of yacc.c  */
#line 14428 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:

/* Line 1455 of yacc.c  */
#line 14429 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:

/* Line 1455 of yacc.c  */
#line 14430 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:

/* Line 1455 of yacc.c  */
#line 14431 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:

/* Line 1455 of yacc.c  */
#line 14432 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:

/* Line 1455 of yacc.c  */
#line 14433 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:

/* Line 1455 of yacc.c  */
#line 14434 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:

/* Line 1455 of yacc.c  */
#line 14435 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:

/* Line 1455 of yacc.c  */
#line 14436 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:

/* Line 1455 of yacc.c  */
#line 14437 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:

/* Line 1455 of yacc.c  */
#line 14438 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:

/* Line 1455 of yacc.c  */
#line 14439 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:

/* Line 1455 of yacc.c  */
#line 14440 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:

/* Line 1455 of yacc.c  */
#line 14441 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:

/* Line 1455 of yacc.c  */
#line 14442 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:

/* Line 1455 of yacc.c  */
#line 14443 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:

/* Line 1455 of yacc.c  */
#line 14444 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:

/* Line 1455 of yacc.c  */
#line 14445 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:

/* Line 1455 of yacc.c  */
#line 14446 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:

/* Line 1455 of yacc.c  */
#line 14447 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:

/* Line 1455 of yacc.c  */
#line 14448 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:

/* Line 1455 of yacc.c  */
#line 14449 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:

/* Line 1455 of yacc.c  */
#line 14450 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:

/* Line 1455 of yacc.c  */
#line 14451 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:

/* Line 1455 of yacc.c  */
#line 14452 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:

/* Line 1455 of yacc.c  */
#line 14453 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:

/* Line 1455 of yacc.c  */
#line 14454 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:

/* Line 1455 of yacc.c  */
#line 14455 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:

/* Line 1455 of yacc.c  */
#line 14456 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:

/* Line 1455 of yacc.c  */
#line 14457 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:

/* Line 1455 of yacc.c  */
#line 14458 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:

/* Line 1455 of yacc.c  */
#line 14459 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:

/* Line 1455 of yacc.c  */
#line 14460 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:

/* Line 1455 of yacc.c  */
#line 14461 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:

/* Line 1455 of yacc.c  */
#line 14462 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:

/* Line 1455 of yacc.c  */
#line 14463 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:

/* Line 1455 of yacc.c  */
#line 14464 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:

/* Line 1455 of yacc.c  */
#line 14465 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:

/* Line 1455 of yacc.c  */
#line 14466 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:

/* Line 1455 of yacc.c  */
#line 14467 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:

/* Line 1455 of yacc.c  */
#line 14468 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:

/* Line 1455 of yacc.c  */
#line 14469 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:

/* Line 1455 of yacc.c  */
#line 14479 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:

/* Line 1455 of yacc.c  */
#line 14480 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:

/* Line 1455 of yacc.c  */
#line 14481 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:

/* Line 1455 of yacc.c  */
#line 14482 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:

/* Line 1455 of yacc.c  */
#line 14483 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:

/* Line 1455 of yacc.c  */
#line 14484 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:

/* Line 1455 of yacc.c  */
#line 14485 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:

/* Line 1455 of yacc.c  */
#line 14486 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:

/* Line 1455 of yacc.c  */
#line 14487 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:

/* Line 1455 of yacc.c  */
#line 14488 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:

/* Line 1455 of yacc.c  */
#line 14489 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:

/* Line 1455 of yacc.c  */
#line 14490 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:

/* Line 1455 of yacc.c  */
#line 14491 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:

/* Line 1455 of yacc.c  */
#line 14492 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:

/* Line 1455 of yacc.c  */
#line 14493 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:

/* Line 1455 of yacc.c  */
#line 14494 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:

/* Line 1455 of yacc.c  */
#line 14495 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:

/* Line 1455 of yacc.c  */
#line 14496 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:

/* Line 1455 of yacc.c  */
#line 14497 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:

/* Line 1455 of yacc.c  */
#line 14498 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:

/* Line 1455 of yacc.c  */
#line 14499 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:

/* Line 1455 of yacc.c  */
#line 14500 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:

/* Line 1455 of yacc.c  */
#line 14501 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:

/* Line 1455 of yacc.c  */
#line 14502 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:

/* Line 1455 of yacc.c  */
#line 14503 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:

/* Line 1455 of yacc.c  */
#line 14504 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:

/* Line 1455 of yacc.c  */
#line 14505 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:

/* Line 1455 of yacc.c  */
#line 14506 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:

/* Line 1455 of yacc.c  */
#line 14507 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:

/* Line 1455 of yacc.c  */
#line 14508 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:

/* Line 1455 of yacc.c  */
#line 14509 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:

/* Line 1455 of yacc.c  */
#line 14510 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:

/* Line 1455 of yacc.c  */
#line 14511 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:

/* Line 1455 of yacc.c  */
#line 14512 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:

/* Line 1455 of yacc.c  */
#line 14513 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:

/* Line 1455 of yacc.c  */
#line 14514 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:

/* Line 1455 of yacc.c  */
#line 14515 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:

/* Line 1455 of yacc.c  */
#line 14516 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:

/* Line 1455 of yacc.c  */
#line 14517 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:

/* Line 1455 of yacc.c  */
#line 14518 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:

/* Line 1455 of yacc.c  */
#line 14519 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:

/* Line 1455 of yacc.c  */
#line 14520 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:

/* Line 1455 of yacc.c  */
#line 14521 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:

/* Line 1455 of yacc.c  */
#line 14522 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:

/* Line 1455 of yacc.c  */
#line 14523 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:

/* Line 1455 of yacc.c  */
#line 14528 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:

/* Line 1455 of yacc.c  */
#line 14529 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:

/* Line 1455 of yacc.c  */
#line 14530 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:

/* Line 1455 of yacc.c  */
#line 14531 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:

/* Line 1455 of yacc.c  */
#line 14532 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:

/* Line 1455 of yacc.c  */
#line 14533 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:

/* Line 1455 of yacc.c  */
#line 14534 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:

/* Line 1455 of yacc.c  */
#line 14535 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:

/* Line 1455 of yacc.c  */
#line 14536 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:

/* Line 1455 of yacc.c  */
#line 14537 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:

/* Line 1455 of yacc.c  */
#line 14538 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:

/* Line 1455 of yacc.c  */
#line 14539 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:

/* Line 1455 of yacc.c  */
#line 14540 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:

/* Line 1455 of yacc.c  */
#line 14541 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:

/* Line 1455 of yacc.c  */
#line 14542 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:

/* Line 1455 of yacc.c  */
#line 14543 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:

/* Line 1455 of yacc.c  */
#line 14544 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:

/* Line 1455 of yacc.c  */
#line 14545 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:

/* Line 1455 of yacc.c  */
#line 14546 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:

/* Line 1455 of yacc.c  */
#line 14547 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:

/* Line 1455 of yacc.c  */
#line 14548 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:

/* Line 1455 of yacc.c  */
#line 14549 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:

/* Line 1455 of yacc.c  */
#line 14550 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:

/* Line 1455 of yacc.c  */
#line 14551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:

/* Line 1455 of yacc.c  */
#line 14552 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:

/* Line 1455 of yacc.c  */
#line 14553 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:

/* Line 1455 of yacc.c  */
#line 14554 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:

/* Line 1455 of yacc.c  */
#line 14555 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:

/* Line 1455 of yacc.c  */
#line 14556 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:

/* Line 1455 of yacc.c  */
#line 14557 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:

/* Line 1455 of yacc.c  */
#line 14558 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:

/* Line 1455 of yacc.c  */
#line 14559 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:

/* Line 1455 of yacc.c  */
#line 14560 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:

/* Line 1455 of yacc.c  */
#line 14561 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:

/* Line 1455 of yacc.c  */
#line 14562 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:

/* Line 1455 of yacc.c  */
#line 14563 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:

/* Line 1455 of yacc.c  */
#line 14564 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:

/* Line 1455 of yacc.c  */
#line 14565 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:

/* Line 1455 of yacc.c  */
#line 14566 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:

/* Line 1455 of yacc.c  */
#line 14567 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:

/* Line 1455 of yacc.c  */
#line 14568 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:

/* Line 1455 of yacc.c  */
#line 14569 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:

/* Line 1455 of yacc.c  */
#line 14570 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:

/* Line 1455 of yacc.c  */
#line 14571 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:

/* Line 1455 of yacc.c  */
#line 14572 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:

/* Line 1455 of yacc.c  */
#line 14573 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:

/* Line 1455 of yacc.c  */
#line 14574 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:

/* Line 1455 of yacc.c  */
#line 14575 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:

/* Line 1455 of yacc.c  */
#line 14576 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:

/* Line 1455 of yacc.c  */
#line 14577 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:

/* Line 1455 of yacc.c  */
#line 14578 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:

/* Line 1455 of yacc.c  */
#line 14579 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:

/* Line 1455 of yacc.c  */
#line 14580 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:

/* Line 1455 of yacc.c  */
#line 14581 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:

/* Line 1455 of yacc.c  */
#line 14582 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:

/* Line 1455 of yacc.c  */
#line 14583 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:

/* Line 1455 of yacc.c  */
#line 14584 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:

/* Line 1455 of yacc.c  */
#line 14585 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:

/* Line 1455 of yacc.c  */
#line 14586 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:

/* Line 1455 of yacc.c  */
#line 14587 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:

/* Line 1455 of yacc.c  */
#line 14588 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:

/* Line 1455 of yacc.c  */
#line 14589 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:

/* Line 1455 of yacc.c  */
#line 14590 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:

/* Line 1455 of yacc.c  */
#line 14591 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:

/* Line 1455 of yacc.c  */
#line 14592 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:

/* Line 1455 of yacc.c  */
#line 14593 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:

/* Line 1455 of yacc.c  */
#line 14594 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:

/* Line 1455 of yacc.c  */
#line 14595 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:

/* Line 1455 of yacc.c  */
#line 14596 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:

/* Line 1455 of yacc.c  */
#line 14597 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:

/* Line 1455 of yacc.c  */
#line 14598 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:

/* Line 1455 of yacc.c  */
#line 14599 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:

/* Line 1455 of yacc.c  */
#line 14600 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:

/* Line 1455 of yacc.c  */
#line 14601 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:

/* Line 1455 of yacc.c  */
#line 14602 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:

/* Line 1455 of yacc.c  */
#line 14603 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:

/* Line 1455 of yacc.c  */
#line 14604 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:

/* Line 1455 of yacc.c  */
#line 14605 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:

/* Line 1455 of yacc.c  */
#line 14606 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:

/* Line 1455 of yacc.c  */
#line 14607 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:

/* Line 1455 of yacc.c  */
#line 14608 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:

/* Line 1455 of yacc.c  */
#line 14609 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:

/* Line 1455 of yacc.c  */
#line 14610 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:

/* Line 1455 of yacc.c  */
#line 14611 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:

/* Line 1455 of yacc.c  */
#line 14612 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:

/* Line 1455 of yacc.c  */
#line 14613 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:

/* Line 1455 of yacc.c  */
#line 14614 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:

/* Line 1455 of yacc.c  */
#line 14615 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:

/* Line 1455 of yacc.c  */
#line 14616 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:

/* Line 1455 of yacc.c  */
#line 14617 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:

/* Line 1455 of yacc.c  */
#line 14618 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:

/* Line 1455 of yacc.c  */
#line 14619 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:

/* Line 1455 of yacc.c  */
#line 14620 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:

/* Line 1455 of yacc.c  */
#line 14621 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:

/* Line 1455 of yacc.c  */
#line 14622 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:

/* Line 1455 of yacc.c  */
#line 14623 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:

/* Line 1455 of yacc.c  */
#line 14624 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:

/* Line 1455 of yacc.c  */
#line 14625 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:

/* Line 1455 of yacc.c  */
#line 14626 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:

/* Line 1455 of yacc.c  */
#line 14627 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:

/* Line 1455 of yacc.c  */
#line 14628 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:

/* Line 1455 of yacc.c  */
#line 14629 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:

/* Line 1455 of yacc.c  */
#line 14630 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:

/* Line 1455 of yacc.c  */
#line 14631 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:

/* Line 1455 of yacc.c  */
#line 14632 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:

/* Line 1455 of yacc.c  */
#line 14633 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:

/* Line 1455 of yacc.c  */
#line 14634 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:

/* Line 1455 of yacc.c  */
#line 14635 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:

/* Line 1455 of yacc.c  */
#line 14636 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:

/* Line 1455 of yacc.c  */
#line 14637 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:

/* Line 1455 of yacc.c  */
#line 14638 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:

/* Line 1455 of yacc.c  */
#line 14639 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:

/* Line 1455 of yacc.c  */
#line 14640 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:

/* Line 1455 of yacc.c  */
#line 14641 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:

/* Line 1455 of yacc.c  */
#line 14642 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:

/* Line 1455 of yacc.c  */
#line 14643 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:

/* Line 1455 of yacc.c  */
#line 14644 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:

/* Line 1455 of yacc.c  */
#line 14645 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:

/* Line 1455 of yacc.c  */
#line 14646 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:

/* Line 1455 of yacc.c  */
#line 14647 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:

/* Line 1455 of yacc.c  */
#line 14648 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:

/* Line 1455 of yacc.c  */
#line 14649 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:

/* Line 1455 of yacc.c  */
#line 14650 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:

/* Line 1455 of yacc.c  */
#line 14651 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:

/* Line 1455 of yacc.c  */
#line 14652 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:

/* Line 1455 of yacc.c  */
#line 14653 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:

/* Line 1455 of yacc.c  */
#line 14654 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:

/* Line 1455 of yacc.c  */
#line 14655 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:

/* Line 1455 of yacc.c  */
#line 14656 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:

/* Line 1455 of yacc.c  */
#line 14657 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:

/* Line 1455 of yacc.c  */
#line 14658 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:

/* Line 1455 of yacc.c  */
#line 14659 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:

/* Line 1455 of yacc.c  */
#line 14660 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:

/* Line 1455 of yacc.c  */
#line 14661 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:

/* Line 1455 of yacc.c  */
#line 14662 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:

/* Line 1455 of yacc.c  */
#line 14663 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:

/* Line 1455 of yacc.c  */
#line 14664 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:

/* Line 1455 of yacc.c  */
#line 14665 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:

/* Line 1455 of yacc.c  */
#line 14666 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:

/* Line 1455 of yacc.c  */
#line 14667 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:

/* Line 1455 of yacc.c  */
#line 14668 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:

/* Line 1455 of yacc.c  */
#line 14669 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:

/* Line 1455 of yacc.c  */
#line 14670 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:

/* Line 1455 of yacc.c  */
#line 14671 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:

/* Line 1455 of yacc.c  */
#line 14672 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:

/* Line 1455 of yacc.c  */
#line 14673 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:

/* Line 1455 of yacc.c  */
#line 14674 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:

/* Line 1455 of yacc.c  */
#line 14675 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:

/* Line 1455 of yacc.c  */
#line 14676 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:

/* Line 1455 of yacc.c  */
#line 14677 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:

/* Line 1455 of yacc.c  */
#line 14678 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:

/* Line 1455 of yacc.c  */
#line 14679 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:

/* Line 1455 of yacc.c  */
#line 14680 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:

/* Line 1455 of yacc.c  */
#line 14681 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:

/* Line 1455 of yacc.c  */
#line 14682 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:

/* Line 1455 of yacc.c  */
#line 14683 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:

/* Line 1455 of yacc.c  */
#line 14684 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:

/* Line 1455 of yacc.c  */
#line 14685 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:

/* Line 1455 of yacc.c  */
#line 14686 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:

/* Line 1455 of yacc.c  */
#line 14687 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:

/* Line 1455 of yacc.c  */
#line 14688 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:

/* Line 1455 of yacc.c  */
#line 14689 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:

/* Line 1455 of yacc.c  */
#line 14690 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:

/* Line 1455 of yacc.c  */
#line 14691 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:

/* Line 1455 of yacc.c  */
#line 14692 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:

/* Line 1455 of yacc.c  */
#line 14693 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:

/* Line 1455 of yacc.c  */
#line 14694 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:

/* Line 1455 of yacc.c  */
#line 14695 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:

/* Line 1455 of yacc.c  */
#line 14696 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:

/* Line 1455 of yacc.c  */
#line 14697 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:

/* Line 1455 of yacc.c  */
#line 14698 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:

/* Line 1455 of yacc.c  */
#line 14699 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:

/* Line 1455 of yacc.c  */
#line 14700 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:

/* Line 1455 of yacc.c  */
#line 14701 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:

/* Line 1455 of yacc.c  */
#line 14702 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:

/* Line 1455 of yacc.c  */
#line 14703 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:

/* Line 1455 of yacc.c  */
#line 14704 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:

/* Line 1455 of yacc.c  */
#line 14705 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:

/* Line 1455 of yacc.c  */
#line 14706 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:

/* Line 1455 of yacc.c  */
#line 14707 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:

/* Line 1455 of yacc.c  */
#line 14708 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:

/* Line 1455 of yacc.c  */
#line 14709 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:

/* Line 1455 of yacc.c  */
#line 14710 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:

/* Line 1455 of yacc.c  */
#line 14711 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:

/* Line 1455 of yacc.c  */
#line 14712 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:

/* Line 1455 of yacc.c  */
#line 14713 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:

/* Line 1455 of yacc.c  */
#line 14714 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:

/* Line 1455 of yacc.c  */
#line 14715 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:

/* Line 1455 of yacc.c  */
#line 14716 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:

/* Line 1455 of yacc.c  */
#line 14717 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:

/* Line 1455 of yacc.c  */
#line 14718 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:

/* Line 1455 of yacc.c  */
#line 14719 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:

/* Line 1455 of yacc.c  */
#line 14720 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:

/* Line 1455 of yacc.c  */
#line 14721 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:

/* Line 1455 of yacc.c  */
#line 14722 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:

/* Line 1455 of yacc.c  */
#line 14723 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:

/* Line 1455 of yacc.c  */
#line 14724 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:

/* Line 1455 of yacc.c  */
#line 14725 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:

/* Line 1455 of yacc.c  */
#line 14726 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:

/* Line 1455 of yacc.c  */
#line 14727 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:

/* Line 1455 of yacc.c  */
#line 14728 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:

/* Line 1455 of yacc.c  */
#line 14729 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:

/* Line 1455 of yacc.c  */
#line 14730 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:

/* Line 1455 of yacc.c  */
#line 14731 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:

/* Line 1455 of yacc.c  */
#line 14732 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:

/* Line 1455 of yacc.c  */
#line 14733 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:

/* Line 1455 of yacc.c  */
#line 14734 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:

/* Line 1455 of yacc.c  */
#line 14735 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:

/* Line 1455 of yacc.c  */
#line 14736 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2337:

/* Line 1455 of yacc.c  */
#line 14737 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:

/* Line 1455 of yacc.c  */
#line 14738 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2339:

/* Line 1455 of yacc.c  */
#line 14739 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2340:

/* Line 1455 of yacc.c  */
#line 14740 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2341:

/* Line 1455 of yacc.c  */
#line 14741 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2342:

/* Line 1455 of yacc.c  */
#line 14742 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2343:

/* Line 1455 of yacc.c  */
#line 14743 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2344:

/* Line 1455 of yacc.c  */
#line 14744 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2345:

/* Line 1455 of yacc.c  */
#line 14745 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2346:

/* Line 1455 of yacc.c  */
#line 14746 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2347:

/* Line 1455 of yacc.c  */
#line 14747 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2348:

/* Line 1455 of yacc.c  */
#line 14748 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2349:

/* Line 1455 of yacc.c  */
#line 14749 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2350:

/* Line 1455 of yacc.c  */
#line 14750 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2351:

/* Line 1455 of yacc.c  */
#line 14751 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2352:

/* Line 1455 of yacc.c  */
#line 14752 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2353:

/* Line 1455 of yacc.c  */
#line 14753 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2354:

/* Line 1455 of yacc.c  */
#line 14754 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2355:

/* Line 1455 of yacc.c  */
#line 14755 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2356:

/* Line 1455 of yacc.c  */
#line 14756 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2357:

/* Line 1455 of yacc.c  */
#line 14757 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2358:

/* Line 1455 of yacc.c  */
#line 14758 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2359:

/* Line 1455 of yacc.c  */
#line 14759 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2360:

/* Line 1455 of yacc.c  */
#line 14760 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2361:

/* Line 1455 of yacc.c  */
#line 14761 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2362:

/* Line 1455 of yacc.c  */
#line 14762 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2363:

/* Line 1455 of yacc.c  */
#line 14763 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2364:

/* Line 1455 of yacc.c  */
#line 14764 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2365:

/* Line 1455 of yacc.c  */
#line 14765 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2366:

/* Line 1455 of yacc.c  */
#line 14766 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2367:

/* Line 1455 of yacc.c  */
#line 14767 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2368:

/* Line 1455 of yacc.c  */
#line 14768 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2369:

/* Line 1455 of yacc.c  */
#line 14769 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2370:

/* Line 1455 of yacc.c  */
#line 14770 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2371:

/* Line 1455 of yacc.c  */
#line 14771 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2372:

/* Line 1455 of yacc.c  */
#line 14772 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2373:

/* Line 1455 of yacc.c  */
#line 14773 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2374:

/* Line 1455 of yacc.c  */
#line 14774 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2375:

/* Line 1455 of yacc.c  */
#line 14775 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2376:

/* Line 1455 of yacc.c  */
#line 14776 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2377:

/* Line 1455 of yacc.c  */
#line 14777 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2378:

/* Line 1455 of yacc.c  */
#line 14778 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2379:

/* Line 1455 of yacc.c  */
#line 14779 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2380:

/* Line 1455 of yacc.c  */
#line 14780 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2381:

/* Line 1455 of yacc.c  */
#line 14781 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2382:

/* Line 1455 of yacc.c  */
#line 14782 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2383:

/* Line 1455 of yacc.c  */
#line 14783 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2384:

/* Line 1455 of yacc.c  */
#line 14784 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2385:

/* Line 1455 of yacc.c  */
#line 14785 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2386:

/* Line 1455 of yacc.c  */
#line 14786 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2387:

/* Line 1455 of yacc.c  */
#line 14787 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2388:

/* Line 1455 of yacc.c  */
#line 14788 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2389:

/* Line 1455 of yacc.c  */
#line 14789 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2390:

/* Line 1455 of yacc.c  */
#line 14790 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2391:

/* Line 1455 of yacc.c  */
#line 14791 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2392:

/* Line 1455 of yacc.c  */
#line 14792 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2393:

/* Line 1455 of yacc.c  */
#line 14793 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2394:

/* Line 1455 of yacc.c  */
#line 14794 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2395:

/* Line 1455 of yacc.c  */
#line 14806 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SET_OPTION;
            lex->option_type= OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;

            sp_create_assignment_lex(YYTHD, (yylsp[(1) - (1)]).raw_end);
          }
    break;

  case 2396:

/* Line 1455 of yacc.c  */
#line 14817 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2397:

/* Line 1455 of yacc.c  */
#line 14824 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, (yylsp[(1) - (1)]).raw_end))
              MYSQL_YYABORT;
          }
    break;

  case 2399:

/* Line 1455 of yacc.c  */
#line 14830 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$2*/
            Lex->option_type= OPT_DEFAULT;
          }
    break;

  case 2400:

/* Line 1455 of yacc.c  */
#line 14834 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$4*/
            if (sp_create_assignment_instr(YYTHD, (yylsp[(3) - (3)]).raw_end))
              MYSQL_YYABORT;
          }
    break;

  case 2401:

/* Line 1455 of yacc.c  */
#line 14839 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2403:

/* Line 1455 of yacc.c  */
#line 14844 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING pw= { C_STRING_WITH_LEN("password") };

            if (pctx && pctx->find_variable(pw, false))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }

            LEX_USER *user= (LEX_USER*) thd->alloc(sizeof(LEX_USER));

            if (!user)
              MYSQL_YYABORT;

            user->host= null_lex_str;
            user->user.str= thd->security_ctx->user;
            user->user.length= strlen(thd->security_ctx->user);

            set_var_password *var= new set_var_password(user, (yyvsp[(3) - (3)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;

            lex->var_list.push_back(var);
            lex->autocommit= true;
            lex->is_set_password_sql= true;

            if (sp)
              sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

            if (sp_create_assignment_instr(YYTHD, (yylsp[(3) - (3)]).raw_end))
              MYSQL_YYABORT;
          }
    break;

  case 2404:

/* Line 1455 of yacc.c  */
#line 14881 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX_USER *user= (yyvsp[(3) - (5)].lex_user);
            LEX *lex= Lex;
            set_var_password *var;

            var= new set_var_password(user, (yyvsp[(5) - (5)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
            lex->autocommit= true;
            lex->is_set_password_sql= true;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

            if (sp_create_assignment_instr(YYTHD, (yylsp[(5) - (5)]).raw_end))
              MYSQL_YYABORT;
          }
    break;

  case 2405:

/* Line 1455 of yacc.c  */
#line 14904 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, (yylsp[(1) - (1)]).raw_end))
              MYSQL_YYABORT; 
          }
    break;

  case 2407:

/* Line 1455 of yacc.c  */
#line 14910 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, (yylsp[(2) - (2)]).raw_end))
              MYSQL_YYABORT; 
          }
    break;

  case 2410:

/* Line 1455 of yacc.c  */
#line 14924 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, yylloc.raw_start);
          }
    break;

  case 2411:

/* Line 1455 of yacc.c  */
#line 14928 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, (yylsp[(2) - (2)]).raw_end))
              MYSQL_YYABORT; 
          }
    break;

  case 2412:

/* Line 1455 of yacc.c  */
#line 14933 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, yylloc.raw_start);
          }
    break;

  case 2413:

/* Line 1455 of yacc.c  */
#line 14937 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, (yylsp[(4) - (4)]).raw_end))
              MYSQL_YYABORT; 
          }
    break;

  case 2414:

/* Line 1455 of yacc.c  */
#line 14946 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2417:

/* Line 1455 of yacc.c  */
#line 14954 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2418:

/* Line 1455 of yacc.c  */
#line 14955 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2419:

/* Line 1455 of yacc.c  */
#line 14956 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2420:

/* Line 1455 of yacc.c  */
#line 14960 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2421:

/* Line 1455 of yacc.c  */
#line 14961 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2422:

/* Line 1455 of yacc.c  */
#line 14962 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2423:

/* Line 1455 of yacc.c  */
#line 14963 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2424:

/* Line 1455 of yacc.c  */
#line 14967 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2425:

/* Line 1455 of yacc.c  */
#line 14968 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2426:

/* Line 1455 of yacc.c  */
#line 14969 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2427:

/* Line 1455 of yacc.c  */
#line 14970 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2428:

/* Line 1455 of yacc.c  */
#line 14976 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if ((yyvsp[(1) - (3)].variable).var && (yyvsp[(1) - (3)].variable).var != trg_new_row_fake_var)
            {
              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(1) - (3)].variable), lex->option_type, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              /*
                Not in trigger assigning value to new row,
                and option_type preceeding local variable is illegal.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2429:

/* Line 1455 of yacc.c  */
#line 15002 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$3*/
            sp_head *sp= Lex->sphead;

            if (sp)
              sp->m_parser_data.push_expr_start_ptr((yylsp[(2) - (2)]).raw_end);
          }
    break;

  case 2430:

/* Line 1455 of yacc.c  */
#line 15009 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            const char *expr_start_ptr= NULL;

            if (sp)
              expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if ((yyvsp[(1) - (4)].variable).var == trg_new_row_fake_var)
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We are parsing trigger and this is a trigger NEW-field. */

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[(4) - (4)].item))
              {
                // This is: SET NEW.x = DEFAULT
                // DEFAULT clause is not supported in triggers.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, (yylsp[(4) - (4)]).raw_end);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              if (set_trigger_new_row(thd, (yyvsp[(1) - (4)].variable).base_name, (yyvsp[(4) - (4)].item), expr_query))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[(1) - (4)].variable).var)
            {
              /* We're not parsing SP and this is a system variable. */

              if (set_system_variable(thd, &(yyvsp[(1) - (4)].variable), lex->option_type, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We're parsing SP and this is an SP-variable. */

              sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
              sp_variable *spv= pctx->find_variable((yyvsp[(1) - (4)].variable).base_name, false);

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[(4) - (4)].item))
              {
                // This is: SET x = DEFAULT, where x is a SP-variable.
                // This is not supported.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, (yylsp[(4) - (4)]).raw_end);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              /*
                NOTE: every SET-expression has its own LEX-object, even if it is
                a multiple SET-statement, like:

                  SET spv1 = expr1, spv2 = expr2, ...

                Every SET-expression has its own sp_instr_set. Thus, the
                instruction owns the LEX-object, i.e. the instruction is
                responsible for destruction of the LEX-object.
              */

              sp_instr_set *i=
                new sp_instr_set(sp->instructions(), lex,
                                 spv->offset, (yyvsp[(4) - (4)].item), expr_query,
                                 true); // The instruction owns its lex.

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2431:

/* Line 1455 of yacc.c  */
#line 15102 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item), false);
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
    break;

  case 2432:

/* Line 1455 of yacc.c  */
#line 15113 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[(4) - (6)].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[(3) - (6)].var_type), (yyvsp[(6) - (6)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 2433:

/* Line 1455 of yacc.c  */
#line 15126 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            int flags= (yyvsp[(2) - (2)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT;
            const CHARSET_INFO *cs2;
            cs2= (yyvsp[(2) - (2)].charset) ? (yyvsp[(2) - (2)].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(flags,
                                              cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2434:

/* Line 1455 of yacc.c  */
#line 15142 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING names= { C_STRING_WITH_LEN("names") };

            if (pctx && pctx->find_variable(names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
    break;

  case 2435:

/* Line 1455 of yacc.c  */
#line 15155 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            const CHARSET_INFO *cs2;
            const CHARSET_INFO *cs3;
            int flags= set_var_collation_client::SET_CS_NAMES
                       | ((yyvsp[(2) - (3)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT)
                       | ((yyvsp[(3) - (3)].charset) ? set_var_collation_client::SET_CS_COLLATE : 0);
            cs2= (yyvsp[(2) - (3)].charset) ? (yyvsp[(2) - (3)].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[(3) - (3)].charset) ? (yyvsp[(3) - (3)].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(flags, cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2436:

/* Line 1455 of yacc.c  */
#line 15180 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            /* Best effort lookup for system variable. */
            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[(1) - (1)].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[(1) - (1)].lex_str);
            }
          }
    break;

  case 2437:

/* Line 1455 of yacc.c  */
#line 15208 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (check_reserved_words(&(yyvsp[(1) - (3)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }

            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              if ((yyvsp[(1) - (3)].lex_str).str[0]=='O' || (yyvsp[(1) - (3)].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[(3) - (3)].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[(1) - (3)].lex_str);
            }
          }
    break;

  case 2438:

/* Line 1455 of yacc.c  */
#line 15254 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
    break;

  case 2443:

/* Line 1455 of yacc.c  */
#line 15275 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(1) - (1)].num));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_read_only"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2444:

/* Line 1455 of yacc.c  */
#line 15293 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(3) - (3)].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2445:

/* Line 1455 of yacc.c  */
#line 15310 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2446:

/* Line 1455 of yacc.c  */
#line 15311 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2447:

/* Line 1455 of yacc.c  */
#line 15315 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2448:

/* Line 1455 of yacc.c  */
#line 15316 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2449:

/* Line 1455 of yacc.c  */
#line 15317 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2450:

/* Line 1455 of yacc.c  */
#line 15318 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2451:

/* Line 1455 of yacc.c  */
#line 15322 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;}
    break;

  case 2452:

/* Line 1455 of yacc.c  */
#line 15324 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].lex_str).length == 0)
             (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).str;
            else
            switch (YYTHD->variables.old_passwords) {
              case 1: (yyval.simple_string)= Item_func_old_password::
                alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length);
                break;
              case 0:
              case 2: (yyval.simple_string)= Item_func_password::
                create_password_hash_buffer(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length);
                break;
            }
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2453:

/* Line 1455 of yacc.c  */
#line 15342 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? Item_func_old_password::
              alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2454:

/* Line 1455 of yacc.c  */
#line 15354 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 2455:

/* Line 1455 of yacc.c  */
#line 15355 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 2456:

/* Line 1455 of yacc.c  */
#line 15357 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2457:

/* Line 1455 of yacc.c  */
#line 15363 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2458:

/* Line 1455 of yacc.c  */
#line 15369 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2459:

/* Line 1455 of yacc.c  */
#line 15380 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2460:

/* Line 1455 of yacc.c  */
#line 15391 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2465:

/* Line 1455 of yacc.c  */
#line 15406 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
    break;

  case 2466:

/* Line 1455 of yacc.c  */
#line 15418 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2467:

/* Line 1455 of yacc.c  */
#line 15419 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2468:

/* Line 1455 of yacc.c  */
#line 15421 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            (yyval.num)= TL_WRITE_LOW_PRIORITY; 
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2469:

/* Line 1455 of yacc.c  */
#line 15425 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2470:

/* Line 1455 of yacc.c  */
#line 15430 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2471:

/* Line 1455 of yacc.c  */
#line 15441 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2472:

/* Line 1455 of yacc.c  */
#line 15450 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2473:

/* Line 1455 of yacc.c  */
#line 15466 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select()->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2474:

/* Line 1455 of yacc.c  */
#line 15482 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select()->select_limit= one;
            lex->current_select()->offset_limit= 0;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2475:

/* Line 1455 of yacc.c  */
#line 15500 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2476:

/* Line 1455 of yacc.c  */
#line 15520 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2477:

/* Line 1455 of yacc.c  */
#line 15521 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2478:

/* Line 1455 of yacc.c  */
#line 15525 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2479:

/* Line 1455 of yacc.c  */
#line 15526 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2480:

/* Line 1455 of yacc.c  */
#line 15530 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2481:

/* Line 1455 of yacc.c  */
#line 15531 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2482:

/* Line 1455 of yacc.c  */
#line 15532 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2483:

/* Line 1455 of yacc.c  */
#line 15533 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2484:

/* Line 1455 of yacc.c  */
#line 15535 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
            Lex->insert_list= new List_item;
            if (! Lex->insert_list)
              MYSQL_YYABORT;
          }
    break;

  case 2485:

/* Line 1455 of yacc.c  */
#line 15542 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2486:

/* Line 1455 of yacc.c  */
#line 15548 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2487:

/* Line 1455 of yacc.c  */
#line 15549 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2488:

/* Line 1455 of yacc.c  */
#line 15550 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2489:

/* Line 1455 of yacc.c  */
#line 15551 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2490:

/* Line 1455 of yacc.c  */
#line 15552 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2491:

/* Line 1455 of yacc.c  */
#line 15558 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_REVOKE; }
    break;

  case 2492:

/* Line 1455 of yacc.c  */
#line 15559 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2493:

/* Line 1455 of yacc.c  */
#line 15564 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2494:

/* Line 1455 of yacc.c  */
#line 15569 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2495:

/* Line 1455 of yacc.c  */
#line 15579 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2496:

/* Line 1455 of yacc.c  */
#line 15589 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2497:

/* Line 1455 of yacc.c  */
#line 15593 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2498:

/* Line 1455 of yacc.c  */
#line 15601 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_GRANT; }
    break;

  case 2499:

/* Line 1455 of yacc.c  */
#line 15602 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2500:

/* Line 1455 of yacc.c  */
#line 15608 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->type= 0;
          }
    break;

  case 2501:

/* Line 1455 of yacc.c  */
#line 15614 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2502:

/* Line 1455 of yacc.c  */
#line 15625 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2503:

/* Line 1455 of yacc.c  */
#line 15635 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2506:

/* Line 1455 of yacc.c  */
#line 15649 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->grant == GLOBAL_ACLS &&
                lex->sql_command == SQLCOM_REVOKE)
              lex->sql_command= SQLCOM_REVOKE_ALL;
          }
    break;

  case 2507:

/* Line 1455 of yacc.c  */
#line 15656 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2512:

/* Line 1455 of yacc.c  */
#line 15674 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2513:

/* Line 1455 of yacc.c  */
#line 15675 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2514:

/* Line 1455 of yacc.c  */
#line 15677 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2515:

/* Line 1455 of yacc.c  */
#line 15678 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2516:

/* Line 1455 of yacc.c  */
#line 15680 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2517:

/* Line 1455 of yacc.c  */
#line 15681 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2518:

/* Line 1455 of yacc.c  */
#line 15683 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2519:

/* Line 1455 of yacc.c  */
#line 15684 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2520:

/* Line 1455 of yacc.c  */
#line 15685 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2521:

/* Line 1455 of yacc.c  */
#line 15686 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2522:

/* Line 1455 of yacc.c  */
#line 15687 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2523:

/* Line 1455 of yacc.c  */
#line 15688 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2524:

/* Line 1455 of yacc.c  */
#line 15689 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2525:

/* Line 1455 of yacc.c  */
#line 15690 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2526:

/* Line 1455 of yacc.c  */
#line 15691 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2527:

/* Line 1455 of yacc.c  */
#line 15692 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2528:

/* Line 1455 of yacc.c  */
#line 15693 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2529:

/* Line 1455 of yacc.c  */
#line 15694 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2530:

/* Line 1455 of yacc.c  */
#line 15695 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2531:

/* Line 1455 of yacc.c  */
#line 15696 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2532:

/* Line 1455 of yacc.c  */
#line 15697 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2533:

/* Line 1455 of yacc.c  */
#line 15698 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2534:

/* Line 1455 of yacc.c  */
#line 15699 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2535:

/* Line 1455 of yacc.c  */
#line 15700 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2536:

/* Line 1455 of yacc.c  */
#line 15701 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2537:

/* Line 1455 of yacc.c  */
#line 15702 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2538:

/* Line 1455 of yacc.c  */
#line 15703 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2539:

/* Line 1455 of yacc.c  */
#line 15704 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2540:

/* Line 1455 of yacc.c  */
#line 15705 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2541:

/* Line 1455 of yacc.c  */
#line 15706 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2542:

/* Line 1455 of yacc.c  */
#line 15707 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2543:

/* Line 1455 of yacc.c  */
#line 15708 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2544:

/* Line 1455 of yacc.c  */
#line 15709 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2545:

/* Line 1455 of yacc.c  */
#line 15710 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2546:

/* Line 1455 of yacc.c  */
#line 15714 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2547:

/* Line 1455 of yacc.c  */
#line 15715 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2550:

/* Line 1455 of yacc.c  */
#line 15725 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2551:

/* Line 1455 of yacc.c  */
#line 15735 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2552:

/* Line 1455 of yacc.c  */
#line 15745 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2553:

/* Line 1455 of yacc.c  */
#line 15758 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2554:

/* Line 1455 of yacc.c  */
#line 15773 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2555:

/* Line 1455 of yacc.c  */
#line 15786 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2556:

/* Line 1455 of yacc.c  */
#line 15799 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2557:

/* Line 1455 of yacc.c  */
#line 15811 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2558:

/* Line 1455 of yacc.c  */
#line 15816 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2559:

/* Line 1455 of yacc.c  */
#line 15824 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2560:

/* Line 1455 of yacc.c  */
#line 15829 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2561:

/* Line 1455 of yacc.c  */
#line 15837 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user); (yyvsp[(1) - (4)].lex_user)->password=(yyvsp[(4) - (4)].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            String *password = new (YYTHD->mem_root) String((const char*)(yyvsp[(4) - (4)].lex_str).str,
                                    YYTHD->variables.character_set_client);
            check_password_policy(password);
            /*
              1. Plugin must be resolved
              2. Password must be digested
            */
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2562:

/* Line 1455 of yacc.c  */
#line 15855 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user); 
            (yyvsp[(1) - (5)].lex_user)->password= (yyvsp[(5) - (5)].lex_str); 
            if (!strcmp((yyvsp[(5) - (5)].lex_str).str, ""))
            {
              String *password= new (YYTHD->mem_root) String ((const char *)"",
                                     YYTHD->variables.character_set_client);
              check_password_policy(password);
            }
            /*
              1. Plugin must be resolved
            */
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
          }
    break;

  case 2563:

/* Line 1455 of yacc.c  */
#line 15875 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin= (yyvsp[(4) - (4)].lex_str);
            (yyvsp[(1) - (4)].lex_user)->auth= empty_lex_str;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2564:

/* Line 1455 of yacc.c  */
#line 15887 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin= (yyvsp[(4) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->auth= (yyvsp[(6) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2565:

/* Line 1455 of yacc.c  */
#line 15900 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->password= null_lex_str;
          }
    break;

  case 2566:

/* Line 1455 of yacc.c  */
#line 15908 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2570:

/* Line 1455 of yacc.c  */
#line 15922 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2572:

/* Line 1455 of yacc.c  */
#line 15951 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2573:

/* Line 1455 of yacc.c  */
#line 15955 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2574:

/* Line 1455 of yacc.c  */
#line 15959 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2575:

/* Line 1455 of yacc.c  */
#line 15963 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2576:

/* Line 1455 of yacc.c  */
#line 15969 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2578:

/* Line 1455 of yacc.c  */
#line 15974 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2579:

/* Line 1455 of yacc.c  */
#line 15975 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2580:

/* Line 1455 of yacc.c  */
#line 15979 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2581:

/* Line 1455 of yacc.c  */
#line 15980 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2582:

/* Line 1455 of yacc.c  */
#line 15984 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2583:

/* Line 1455 of yacc.c  */
#line 15986 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2584:

/* Line 1455 of yacc.c  */
#line 15992 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2585:

/* Line 1455 of yacc.c  */
#line 15998 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2586:

/* Line 1455 of yacc.c  */
#line 16004 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2587:

/* Line 1455 of yacc.c  */
#line 16013 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2588:

/* Line 1455 of yacc.c  */
#line 16018 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2589:

/* Line 1455 of yacc.c  */
#line 16022 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2590:

/* Line 1455 of yacc.c  */
#line 16023 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2591:

/* Line 1455 of yacc.c  */
#line 16028 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2592:

/* Line 1455 of yacc.c  */
#line 16029 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2593:

/* Line 1455 of yacc.c  */
#line 16030 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2594:

/* Line 1455 of yacc.c  */
#line 16035 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2595:

/* Line 1455 of yacc.c  */
#line 16036 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2596:

/* Line 1455 of yacc.c  */
#line 16037 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2597:

/* Line 1455 of yacc.c  */
#line 16041 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2598:

/* Line 1455 of yacc.c  */
#line 16042 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2599:

/* Line 1455 of yacc.c  */
#line 16047 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2600:

/* Line 1455 of yacc.c  */
#line 16059 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2601:

/* Line 1455 of yacc.c  */
#line 16069 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2602:

/* Line 1455 of yacc.c  */
#line 16078 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2603:

/* Line 1455 of yacc.c  */
#line 16087 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2604:

/* Line 1455 of yacc.c  */
#line 16100 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2606:

/* Line 1455 of yacc.c  */
#line 16106 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->new_union_query((bool)(yyvsp[(2) - (2)].num)))
              MYSQL_YYABORT;
          }
    break;

  case 2607:

/* Line 1455 of yacc.c  */
#line 16111 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
    break;

  case 2608:

/* Line 1455 of yacc.c  */
#line 16121 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2609:

/* Line 1455 of yacc.c  */
#line 16122 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2610:

/* Line 1455 of yacc.c  */
#line 16123 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2611:

/* Line 1455 of yacc.c  */
#line 16127 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2612:

/* Line 1455 of yacc.c  */
#line 16128 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2613:

/* Line 1455 of yacc.c  */
#line 16132 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select()->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select();
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              fake->no_table_names_allowed= 1;
              lex->set_current_select(fake);
            }
            thd->where= "global ORDER clause";
          }
    break;

  case 2614:

/* Line 1455 of yacc.c  */
#line 16147 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            thd->lex->current_select()->no_table_names_allowed= 0;
            thd->where= "";
          }
    break;

  case 2617:

/* Line 1455 of yacc.c  */
#line 16160 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2618:

/* Line 1455 of yacc.c  */
#line 16161 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2619:

/* Line 1455 of yacc.c  */
#line 16162 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2620:

/* Line 1455 of yacc.c  */
#line 16168 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= Lex->current_select()->master_unit()->first_select();
          }
    break;

  case 2621:

/* Line 1455 of yacc.c  */
#line 16173 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex)= Lex->current_select()->master_unit()->first_select();
          }
    break;

  case 2623:

/* Line 1455 of yacc.c  */
#line 16182 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->current_select()->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (Lex->new_union_query((bool)(yyvsp[(3) - (3)].num)))
               MYSQL_YYABORT;
          }
    break;

  case 2624:

/* Line 1455 of yacc.c  */
#line 16192 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[(1) - (5)].select_lex);
          }
    break;

  case 2625:

/* Line 1455 of yacc.c  */
#line 16201 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= (yyvsp[(2) - (3)].select_lex);
          }
    break;

  case 2626:

/* Line 1455 of yacc.c  */
#line 16207 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (Lex->new_query())
              MYSQL_YYABORT;
          }
    break;

  case 2627:

/* Line 1455 of yacc.c  */
#line 16228 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select();
            lex->set_current_select(lex->current_select()->outer_select());
            lex->current_select()->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select()->select_n_where_fields+=
              child->select_n_where_fields;
          }
    break;

  case 2632:

/* Line 1455 of yacc.c  */
#line 16255 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 2633:

/* Line 1455 of yacc.c  */
#line 16257 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
    break;

  case 2634:

/* Line 1455 of yacc.c  */
#line 16264 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 2635:

/* Line 1455 of yacc.c  */
#line 16265 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 2636:

/* Line 1455 of yacc.c  */
#line 16266 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 2637:

/* Line 1455 of yacc.c  */
#line 16268 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
    break;

  case 2638:

/* Line 1455 of yacc.c  */
#line 16274 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
    break;

  case 2639:

/* Line 1455 of yacc.c  */
#line 16279 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 2640:

/* Line 1455 of yacc.c  */
#line 16290 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2641:

/* Line 1455 of yacc.c  */
#line 16292 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2642:

/* Line 1455 of yacc.c  */
#line 16294 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2656:

/* Line 1455 of yacc.c  */
#line 16327 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2657:

/* Line 1455 of yacc.c  */
#line 16341 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2658:

/* Line 1455 of yacc.c  */
#line 16354 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2659:

/* Line 1455 of yacc.c  */
#line 16356 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2660:

/* Line 1455 of yacc.c  */
#line 16358 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2661:

/* Line 1455 of yacc.c  */
#line 16363 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2662:

/* Line 1455 of yacc.c  */
#line 16368 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2663:

/* Line 1455 of yacc.c  */
#line 16370 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2664:

/* Line 1455 of yacc.c  */
#line 16372 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 2665:

/* Line 1455 of yacc.c  */
#line 16377 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2666:

/* Line 1455 of yacc.c  */
#line 16379 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2667:

/* Line 1455 of yacc.c  */
#line 16381 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2668:

/* Line 1455 of yacc.c  */
#line 16386 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2670:

/* Line 1455 of yacc.c  */
#line 16403 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2672:

/* Line 1455 of yacc.c  */
#line 16409 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2673:

/* Line 1455 of yacc.c  */
#line 16414 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2674:

/* Line 1455 of yacc.c  */
#line 16421 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
          }
    break;

  case 2675:

/* Line 1455 of yacc.c  */
#line 16429 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            lex->create_view_select.str= const_cast<char *>((yylsp[(2) - (3)]).start);
            uint len= (yylsp[(3) - (3)]).end - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
    break;

  case 2676:

/* Line 1455 of yacc.c  */
#line 16448 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (Lex->current_select()->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select()->master_unit()->first_select()->braces
              (as its done in "select_init2" for "select_part2" rule) is not
              done here.
            */
          }
    break;

  case 2679:

/* Line 1455 of yacc.c  */
#line 16468 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->set_braces(true);
          }
    break;

  case 2680:

/* Line 1455 of yacc.c  */
#line 16472 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 2682:

/* Line 1455 of yacc.c  */
#line 16481 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 2683:

/* Line 1455 of yacc.c  */
#line 16485 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select()->table_list.push_front(&Lex->save_list);
          }
    break;

  case 2684:

/* Line 1455 of yacc.c  */
#line 16492 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2685:

/* Line 1455 of yacc.c  */
#line 16494 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2686:

/* Line 1455 of yacc.c  */
#line 16496 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2687:

/* Line 1455 of yacc.c  */
#line 16498 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2688:

/* Line 1455 of yacc.c  */
#line 16509 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
    break;

  case 2689:

/* Line 1455 of yacc.c  */
#line 16511 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
    break;

  case 2690:

/* Line 1455 of yacc.c  */
#line 16516 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name.str= NULL;
              (yyval.trg_characteristics).anchor_trigger_name.length= 0;
            }
    break;

  case 2691:

/* Line 1455 of yacc.c  */
#line 16523 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[(1) - (2)].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= (yyvsp[(2) - (2)].lex_str);
            }
    break;

  case 2692:

/* Line 1455 of yacc.c  */
#line 16540 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            lex->raw_trg_on_table_name_begin= (yylsp[(5) - (10)]).raw_start;
            lex->raw_trg_on_table_name_end= (yylsp[(7) - (10)]).raw_start;

            if ((yylsp[(10) - (10)]).start == (yylsp[(9) - (10)]).start)
            {
              /*
                @10.start == @9.start when a clause PRECEDES/FOLLOWS is absent.
              */
              lex->trg_ordering_clause_begin= NULL;
              lex->trg_ordering_clause_end= NULL;
            }
            else
            {
              lex->trg_ordering_clause_begin= (yylsp[(10) - (10)]).start;
              lex->trg_ordering_clause_end= (yylsp[(10) - (10)]).end;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[(2) - (10)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[(3) - (10)].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[(4) - (10)].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[(10) - (10)].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[(10) - (10)].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[(1) - (10)]).start;
            lex->ident.str= const_cast<char *>((yylsp[(6) - (10)]).start);
            lex->ident.length= (yylsp[(8) - (10)]).start - (yylsp[(6) - (10)]).start;

            lex->sphead= sp;
            lex->spname= (yyvsp[(2) - (10)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, (yylsp[(9) - (10)]).end);
          }
    break;

  case 2693:

/* Line 1455 of yacc.c  */
#line 16590 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[(6) - (12)].table),
                                                    (LEX_STRING*) 0,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2694:

/* Line 1455 of yacc.c  */
#line 16625 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[(2) - (7)]).start;
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2695:

/* Line 1455 of yacc.c  */
#line 16643 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(2) - (6)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(2) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[(1) - (6)]).start;
            lex->udf.name = (yyvsp[(2) - (6)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(4) - (6)].num);
            lex->udf.dl=(yyvsp[(6) - (6)].lex_str).str;
          }
    break;

  case 2696:

/* Line 1455 of yacc.c  */
#line 16665 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[(1) - (3)]).start;
            lex->spname= (yyvsp[(2) - (3)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[(3) - (3)]).end);
          }
    break;

  case 2697:

/* Line 1455 of yacc.c  */
#line 16689 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(6) - (6)]).start);
          }
    break;

  case 2698:

/* Line 1455 of yacc.c  */
#line 16693 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* $9 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
    break;

  case 2699:

/* Line 1455 of yacc.c  */
#line 16701 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(10) - (10)].num) == MYSQL_TYPE_STRING || (yyvsp[(10) - (10)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[(10) - (10)].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2700:

/* Line 1455 of yacc.c  */
#line 16724 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.start);
          }
    break;

  case 2701:

/* Line 1455 of yacc.c  */
#line 16732 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2702:

/* Line 1455 of yacc.c  */
#line 16791 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[(2) - (2)]).start;

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[(2) - (2)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2703:

/* Line 1455 of yacc.c  */
#line 16811 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[(4) - (4)]).end);
          }
    break;

  case 2704:

/* Line 1455 of yacc.c  */
#line 16816 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[(7) - (7)]).start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2705:

/* Line 1455 of yacc.c  */
#line 16824 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.start);
          }
    break;

  case 2706:

/* Line 1455 of yacc.c  */
#line 16832 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2707:

/* Line 1455 of yacc.c  */
#line 16846 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
    break;

  case 2708:

/* Line 1455 of yacc.c  */
#line 16850 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
    break;

  case 2709:

/* Line 1455 of yacc.c  */
#line 16854 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
    break;

  case 2710:

/* Line 1455 of yacc.c  */
#line 16858 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
    break;

  case 2711:

/* Line 1455 of yacc.c  */
#line 16862 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
    break;

  case 2712:

/* Line 1455 of yacc.c  */
#line 16866 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
    break;

  case 2713:

/* Line 1455 of yacc.c  */
#line 16873 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
          }
    break;

  case 2714:

/* Line 1455 of yacc.c  */
#line 16880 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
          }
    break;

  case 2715:

/* Line 1455 of yacc.c  */
#line 16887 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
          }
    break;

  case 2716:

/* Line 1455 of yacc.c  */
#line 16896 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2717:

/* Line 1455 of yacc.c  */
#line 16897 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2718:

/* Line 1455 of yacc.c  */
#line 16901 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2719:

/* Line 1455 of yacc.c  */
#line 16902 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2720:

/* Line 1455 of yacc.c  */
#line 16903 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2721:

/* Line 1455 of yacc.c  */
#line 16907 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2722:

/* Line 1455 of yacc.c  */
#line 16908 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2723:

/* Line 1455 of yacc.c  */
#line 16913 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2724:

/* Line 1455 of yacc.c  */
#line 16915 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2726:

/* Line 1455 of yacc.c  */
#line 16920 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2727:

/* Line 1455 of yacc.c  */
#line 16921 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;

  case 2728:

/* Line 1455 of yacc.c  */
#line 16926 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (5)].lex_str);
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2729:

/* Line 1455 of yacc.c  */
#line 16936 "/export/home/pb2/build/sb_0-11798678-1395226371.33/mysql-5.7.4-m14-release-export-6452883_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (3)].lex_str);
          }
    break;



/* Line 1455 of yacc.c  */
#line 43635 "/export/home/pb2/build/sb_0-11798678-1395226371.33/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (yymsg);
	  }
	else
	  {
	    yyerror (YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined(yyoverflow) || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



